/*
 * Copyright (C) George Ober - All Rights Reserved
 *  Unauthorized copying of this file, via any medium is strictly prohibited
 *  Proprietary and confidential
 *  Written by George Ober <george.a.ober@gmail.com>,
 *  on 5/9/2020 (DD/MM/YY).
 */

socket = io();
const SVGsUsed = {
    "BlackRobot":'<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2000/svg "><defs><path d="M527.32 181.01C538.37 181.01 547.32 189.97 547.32 201.01C547.32 249.18 547.32 373.67 547.32 421.84C547.32 432.89 538.37 441.84 527.32 441.84C440.39 441.84 199.61 441.84 112.68 441.84C101.63 441.84 92.68 432.89 92.68 421.84C92.68 373.67 92.68 249.18 92.68 201.01C92.68 189.97 101.63 181.01 112.68 181.01C199.61 181.01 440.39 181.01 527.32 181.01Z" id="a2jRTuAgf4"></path><path d="M315.13 181.01C307.57 150.77 319.94 127.06 352.24 109.88" id="c5KQHsstR"></path><path d="M476.58 603.8C468.76 493.14 414.33 439.19 313.3 441.94C212.27 444.69 157.63 498.64 149.38 603.8L476.58 603.8Z" id="g277tyYdMJ"></path><path d="M149.38 248.49L269.66 248.49L269.66 368.77L149.38 368.77L149.38 248.49Z" id="c3BhLthGm3"></path><path d="M367.77 248.49L488.05 248.49L488.05 368.77L367.77 368.77L367.77 248.49Z" id="e1xHNhECeH"></path><path d="M367.77 308.63L269.66 308.63" id="a3rl76Id3o"></path><path d="M384.78 20.1L478.1 63.54L434.67 156.86L341.34 113.42L384.78 20.1Z" id="d2fC7ibLRk"></path></defs><g><g><g><use xlink:href="#a2jRTuAgf4" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#a2jRTuAgf4" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#c5KQHsstR" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#g277tyYdMJ" opacity="1" fill="#000000" fill-opacity="1"></use><g><use xlink:href="#g277tyYdMJ" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#c3BhLthGm3" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#e1xHNhECeH" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#a3rl76Id3o" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#d2fC7ibLRk" opacity="1" fill="#000000" fill-opacity="1"></use></g></g></g></svg>',
    "WhiteRobot": '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M527.32 188.76C538.37 188.76 547.32 197.72 547.32 208.76C547.32 256.93 547.32 381.42 547.32 429.59C547.32 440.63 538.37 449.59 527.32 449.59C440.39 449.59 199.61 449.59 112.68 449.59C101.63 449.59 92.68 440.63 92.68 429.59C92.68 381.42 92.68 256.93 92.68 208.76C92.68 197.72 101.63 188.76 112.68 188.76C199.61 188.76 440.39 188.76 527.32 188.76Z" id="c2tVnYjFu1"></path><path d="M476.58 611.54C468.76 500.89 414.33 446.94 313.3 449.69C212.27 452.44 157.63 506.39 149.38 611.54L476.58 611.54Z" id="h1yzJbwWh0"></path><path d="M363.3 73.04C363.3 97.65 343.32 117.63 318.72 117.63C294.11 117.63 274.13 97.65 274.13 73.04C274.13 48.44 294.11 28.46 318.72 28.46C343.32 28.46 363.3 48.44 363.3 73.04Z" id="b1wRnktR2R"></path><path d="M318.72 188.76L320 117.63" id="aa8Gv7Bmq"></path><path d="M256.83 283.9C256.83 311.19 240.57 333.35 220.54 333.35C200.5 333.35 184.24 311.19 184.24 283.9C184.24 256.62 200.5 234.46 220.54 234.46C240.57 234.46 256.83 256.62 256.83 283.9Z" id="dhu3MuNiF"></path><path d="M318.72 405.03C290.72 424.82 237.93 416.23 160.35 379.26C197.06 389.9 227.57 387.87 251.87 373.19C276.18 358.5 298.46 361.54 318.72 382.3" id="a5ehv2Ss2"></path><path d="M318.72 405.03C346.71 424.82 399.5 416.23 477.09 379.26C440.38 389.9 409.87 387.87 385.56 373.19C361.25 358.5 338.97 361.54 318.72 382.3" id="c5aYfgfMO"></path><path d="M453.2 283.9C453.2 311.19 436.93 333.35 416.9 333.35C396.87 333.35 380.6 311.19 380.6 283.9C380.6 256.62 396.87 234.46 416.9 234.46C436.93 234.46 453.2 256.62 453.2 283.9Z" id="docYOy9tw"></path></defs><g><g><g><use xlink:href="#c2tVnYjFu1" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#c2tVnYjFu1" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#h1yzJbwWh0" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#h1yzJbwWh0" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#b1wRnktR2R" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#b1wRnktR2R" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#aa8Gv7Bmq" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#dhu3MuNiF" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#dhu3MuNiF" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#a5ehv2Ss2" opacity="1" fill="#000000" fill-opacity="1"></use><g><use xlink:href="#a5ehv2Ss2" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="0" stroke-opacity="1"></use></g></g><g><use xlink:href="#c5aYfgfMO" opacity="1" fill="#000000" fill-opacity="1"></use><g><use xlink:href="#c5aYfgfMO" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="0" stroke-opacity="1"></use></g></g><g><use xlink:href="#docYOy9tw" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#docYOy9tw" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g></g></g></svg>',
    "RedRobot": '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M527.32 181.01C538.37 181.01 547.32 189.97 547.32 201.01C547.32 249.18 547.32 373.67 547.32 421.84C547.32 432.89 538.37 441.84 527.32 441.84C440.39 441.84 199.61 441.84 112.68 441.84C101.63 441.84 92.68 432.89 92.68 421.84C92.68 373.67 92.68 249.18 92.68 201.01C92.68 189.97 101.63 181.01 112.68 181.01C199.61 181.01 440.39 181.01 527.32 181.01Z" id="f3D5UTrnSB"></path><path d="M315.13 181.01C307.57 150.77 319.94 127.06 352.24 109.88" id="b5yDId5Kz"></path><path d="M476.58 603.7C468.76 493.04 414.33 439.09 313.3 441.84C212.27 444.59 157.63 498.54 149.38 603.7L476.58 603.7Z" id="cpXlvPsBn"></path><path d="M184.52 343.44C199.62 357.93 226.77 360.98 265.97 352.59L175.36 265.65C166.36 303.02 169.42 328.95 184.52 343.44Z" id="g2RqPu51M7"></path><path d="M455.48 343.44C440.38 357.93 413.23 360.98 374.03 352.59L464.64 265.65C473.64 303.02 470.58 328.95 455.48 343.44Z" id="j4yihXumG"></path><path d="M430.99 96.44L442.18 55.19L407.92 77.56L412.11 36.3L369.46 46.1C343.99 66.71 338.26 87.97 352.24 109.88C366.23 131.79 399.24 137.57 451.27 127.21L465.26 82.46L430.99 96.44Z" id="ask76xbvO"></path></defs><g><g><g><use xlink:href="#f3D5UTrnSB" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#f3D5UTrnSB" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#b5yDId5Kz" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#cpXlvPsBn" opacity="1" fill="#fd4141" fill-opacity="1"></use><g><use xlink:href="#cpXlvPsBn" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#g2RqPu51M7" opacity="1" fill="#fd4141" fill-opacity="1"></use><g><use xlink:href="#g2RqPu51M7" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#j4yihXumG" opacity="1" fill="#fd4141" fill-opacity="1"></use><g><use xlink:href="#j4yihXumG" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#ask76xbvO" opacity="1" fill="#fd4141" fill-opacity="1"></use><g><use xlink:href="#ask76xbvO" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g></g></g></svg>',
    "PlayButton": '<svg style="width: 100%;height:100%;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M353.95 426.8L196.72 512.81L196.73 340.75L196.74 168.7L353.97 254.73L511.19 340.78L353.95 426.8Z" id="aa6QjnnCS"/><path d="M353.95 395.67L196.72 481.68L196.73 309.62L196.74 137.56L353.97 223.6L511.19 309.64L353.95 395.67Z" id="aM9fmlY29"/></defs><g><g><g><use xlink:href="#aa6QjnnCS" opacity="1" fill="var(--menuBottom)" fill-opacity="1"/></g><g><use xlink:href="#aM9fmlY29" opacity="1" fill="var(--menuBg)" fill-opacity="1"/></g></g></g></svg>',
    "SettingsButton": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" style="width: 100%;height: 100%;" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M358.06 72.94L358.53 73L359 73.09L359.44 73.2L359.88 73.34L360.3 73.49L360.7 73.67L361.1 73.88L361.49 74.1L361.86 74.35L362.22 74.61L362.57 74.9L362.91 75.2L363.24 75.53L363.57 75.87L363.88 76.23L364.18 76.61L364.48 77L364.76 77.41L365.04 77.84L365.32 78.28L365.58 78.74L365.84 79.21L366.1 79.7L366.34 80.2L366.58 80.71L366.82 81.24L367.05 81.77L367.28 82.32L367.51 82.88L367.73 83.45L367.95 84.03L368.16 84.62L368.38 85.22L368.59 85.83L368.8 86.44L369.01 87.07L369.22 87.69L369.42 88.33L380.11 128.42L383.46 129.46L390.88 132.09L398.15 135L405.29 138.18L412.27 141.63L412.85 141.94L448.87 121.09L449.46 120.79L450.06 120.49L450.64 120.2L451.23 119.91L451.81 119.63L452.38 119.36L452.95 119.09L453.52 118.84L454.07 118.59L454.63 118.35L455.18 118.13L455.72 117.91L456.26 117.71L456.8 117.52L457.32 117.34L457.85 117.17L458.36 117.02L458.88 116.89L459.38 116.77L459.88 116.66L460.38 116.58L460.86 116.51L461.35 116.45L461.82 116.42L462.29 116.41L462.75 116.41L463.21 116.44L463.66 116.48L464.11 116.55L464.54 116.64L464.97 116.75L465.4 116.89L465.81 117.05L466.22 117.24L466.62 117.45L467.02 117.69L467.41 117.95L467.79 118.24L468.16 118.56L468.53 118.91L520.95 171.33L521.29 171.69L521.62 172.07L521.91 172.45L522.18 172.85L522.43 173.25L522.65 173.66L522.84 174.08L523.01 174.51L523.16 174.95L523.29 175.39L523.39 175.84L523.48 176.3L523.54 176.76L523.58 177.23L523.59 177.71L523.59 178.19L523.57 178.68L523.53 179.17L523.47 179.67L523.4 180.18L523.3 180.69L523.19 181.2L523.06 181.72L522.92 182.25L522.76 182.77L522.58 183.3L522.39 183.84L522.19 184.38L521.97 184.92L521.73 185.46L521.49 186L521.23 186.55L520.96 187.1L520.68 187.65L520.38 188.21L520.08 188.76L519.76 189.32L519.44 189.87L519.1 190.43L518.76 190.99L497.94 226.95L498.37 227.73L501.82 234.71L505 241.85L507.91 249.12L510.54 256.54L511.58 259.89L551.67 270.58L552.31 270.73L552.93 270.89L553.56 271.05L554.17 271.22L554.78 271.4L555.38 271.58L555.97 271.77L556.55 271.97L557.12 272.17L557.68 272.38L558.23 272.6L558.76 272.83L559.29 273.06L559.8 273.31L560.3 273.56L560.79 273.82L561.26 274.08L561.72 274.36L562.16 274.65L562.59 274.94L563 275.24L563.39 275.55L563.77 275.88L564.13 276.21L564.47 276.55L564.8 276.9L565.1 277.26L565.39 277.63L565.65 278.01L565.9 278.4L566.12 278.81L566.33 279.22L566.51 279.64L566.66 280.08L566.8 280.53L566.91 280.98L567 281.45L567.06 281.93L567.1 282.43L567.11 282.93L567.11 357.07L567.1 357.57L567.06 358.06L567 358.53L566.91 359L566.8 359.44L566.66 359.88L566.51 360.3L566.33 360.7L566.12 361.1L565.9 361.49L565.65 361.86L565.39 362.22L565.1 362.57L564.8 362.91L564.47 363.24L564.13 363.57L563.77 363.88L563.39 364.18L563 364.48L562.59 364.76L562.16 365.04L561.72 365.32L561.26 365.58L560.79 365.84L560.3 366.1L559.8 366.34L559.29 366.58L558.76 366.82L558.23 367.05L557.68 367.28L557.12 367.51L556.55 367.73L555.97 367.95L555.38 368.16L554.78 368.38L554.17 368.59L553.56 368.8L552.93 369.01L552.31 369.22L551.67 369.42L511.58 380.11L510.54 383.46L507.91 390.88L505 398.15L501.82 405.29L498.37 412.27L497.98 412.97L518.76 448.87L519.1 449.42L519.44 449.98L519.76 450.54L520.08 451.09L520.38 451.65L520.68 452.2L520.96 452.75L521.23 453.3L521.49 453.85L521.73 454.39L521.97 454.94L522.19 455.48L522.39 456.01L522.58 456.55L522.76 457.08L522.92 457.61L523.06 458.13L523.19 458.65L523.3 459.16L523.4 459.67L523.47 460.18L523.53 460.68L523.57 461.17L523.59 461.66L523.59 462.14L523.58 462.62L523.54 463.09L523.48 463.56L523.39 464.01L523.29 464.46L523.16 464.91L523.01 465.34L522.84 465.77L522.65 466.19L522.43 466.6L522.18 467L521.91 467.4L521.62 467.78L521.29 468.16L520.95 468.53L468.53 520.95L468.16 521.29L467.79 521.61L467.41 521.9L467.02 522.17L466.62 522.4L466.22 522.61L465.81 522.8L465.4 522.96L464.97 523.1L464.54 523.21L464.11 523.3L463.66 523.37L463.21 523.42L462.75 523.44L462.29 523.45L461.82 523.43L461.35 523.4L460.86 523.35L460.38 523.28L459.88 523.19L459.38 523.08L458.88 522.96L458.36 522.83L457.85 522.68L457.32 522.51L456.8 522.33L456.26 522.14L455.72 521.94L455.18 521.72L454.63 521.5L454.07 521.26L453.52 521.01L452.95 520.76L452.38 520.49L451.81 520.22L451.23 519.94L450.64 519.66L450.06 519.36L449.46 519.06L448.87 518.76L412.97 497.98L412.27 498.37L405.29 501.82L398.15 505L390.88 507.91L383.46 510.54L380.11 511.58L369.42 551.67L369.22 552.31L369.01 552.93L368.8 553.56L368.59 554.17L368.38 554.78L368.16 555.38L367.95 555.97L367.73 556.55L367.51 557.12L367.28 557.68L367.05 558.23L366.82 558.76L366.58 559.29L366.34 559.8L366.1 560.3L365.84 560.79L365.58 561.26L365.32 561.72L365.04 562.16L364.76 562.59L364.48 563L364.18 563.39L363.88 563.77L363.57 564.13L363.24 564.47L362.91 564.8L362.57 565.1L362.22 565.39L361.86 565.65L361.49 565.9L361.1 566.12L360.7 566.33L360.3 566.51L359.88 566.66L359.44 566.8L359 566.91L358.53 567L358.06 567.06L357.57 567.1L357.07 567.11L282.93 567.11L282.43 567.1L281.93 567.06L281.45 567L280.98 566.91L280.53 566.8L280.08 566.66L279.64 566.51L279.22 566.33L278.81 566.12L278.4 565.9L278.01 565.65L277.63 565.39L277.26 565.1L276.9 564.8L276.55 564.47L276.21 564.13L275.88 563.77L275.55 563.39L275.24 563L274.94 562.59L274.65 562.16L274.36 561.72L274.08 561.26L273.82 560.79L273.56 560.3L273.31 559.8L273.06 559.29L272.83 558.76L272.6 558.23L272.38 557.68L272.17 557.12L271.97 556.55L271.77 555.97L271.58 555.38L271.4 554.78L271.22 554.17L271.05 553.56L270.89 552.93L270.73 552.31L270.58 551.67L259.89 511.58L256.54 510.54L249.12 507.91L241.85 505L234.71 501.82L227.73 498.37L226.89 497.91L191.13 518.61L190.58 518.96L190.02 519.29L189.46 519.62L188.91 519.93L188.35 520.24L187.8 520.53L187.25 520.81L186.7 521.08L186.15 521.34L185.61 521.59L185.06 521.82L184.52 522.04L183.99 522.24L183.45 522.44L182.92 522.61L182.39 522.77L181.87 522.92L181.35 523.04L180.84 523.16L180.33 523.25L179.82 523.33L179.32 523.39L178.83 523.43L178.34 523.45L177.86 523.45L177.38 523.43L176.91 523.39L176.44 523.33L175.99 523.25L175.54 523.14L175.09 523.02L174.66 522.87L174.23 522.7L173.81 522.5L173.4 522.28L173 522.03L172.6 521.76L172.22 521.47L171.84 521.15L171.47 520.8L119.05 468.38L118.71 468.01L118.39 467.64L118.1 467.26L117.83 466.87L117.6 466.48L117.39 466.07L117.2 465.66L117.04 465.25L116.9 464.82L116.79 464.39L116.7 463.96L116.63 463.51L116.58 463.06L116.56 462.61L116.55 462.14L116.57 461.67L116.6 461.2L116.65 460.72L116.72 460.23L116.81 459.73L116.92 459.23L117.04 458.73L117.17 458.22L117.32 457.7L117.49 457.18L117.67 456.65L117.86 456.12L118.06 455.58L118.28 455.03L118.5 454.48L118.74 453.93L118.99 453.37L119.24 452.8L119.51 452.23L119.78 451.66L120.06 451.08L120.34 450.5L120.64 449.91L120.94 449.32L121.24 448.72L141.98 412.9L141.63 412.27L138.18 405.29L135 398.15L132.09 390.88L129.46 383.46L128.42 380.11L88.33 369.42L87.69 369.22L87.07 369.01L86.44 368.8L85.83 368.59L85.22 368.38L84.62 368.16L84.03 367.95L83.45 367.73L82.88 367.51L82.32 367.28L81.77 367.05L81.24 366.82L80.71 366.58L80.2 366.34L79.7 366.1L79.21 365.84L78.74 365.58L78.28 365.32L77.84 365.04L77.41 364.76L77 364.48L76.61 364.18L76.23 363.88L75.87 363.57L75.53 363.24L75.2 362.91L74.9 362.57L74.61 362.22L74.35 361.86L74.1 361.49L73.88 361.1L73.67 360.7L73.49 360.3L73.34 359.88L73.2 359.44L73.09 359L73 358.53L72.94 358.06L72.9 357.57L72.89 357.07L72.89 282.93L72.9 282.43L72.94 281.93L73 281.45L73.09 280.98L73.2 280.53L73.34 280.08L73.49 279.64L73.67 279.22L73.88 278.81L74.1 278.4L74.35 278.01L74.61 277.63L74.9 277.26L75.2 276.9L75.53 276.55L75.87 276.21L76.23 275.88L76.61 275.55L77 275.24L77.41 274.94L77.84 274.65L78.28 274.36L78.74 274.08L79.21 273.82L79.7 273.56L80.2 273.31L80.71 273.06L81.24 272.83L81.77 272.6L82.32 272.38L82.88 272.17L83.45 271.97L84.03 271.77L84.62 271.58L85.22 271.4L85.83 271.22L86.44 271.05L87.07 270.89L87.69 270.73L88.33 270.58L128.42 259.89L129.46 256.54L132.09 249.12L135 241.85L138.18 234.71L141.63 227.73L142.02 227.03L121.24 191.13L120.94 190.54L120.64 189.94L120.34 189.36L120.06 188.77L119.78 188.19L119.51 187.62L119.24 187.05L118.99 186.48L118.74 185.93L118.5 185.37L118.28 184.82L118.06 184.28L117.86 183.74L117.67 183.2L117.49 182.68L117.32 182.15L117.17 181.64L117.04 181.12L116.92 180.62L116.81 180.12L116.72 179.62L116.65 179.14L116.6 178.65L116.57 178.18L116.55 177.71L116.56 177.25L116.58 176.79L116.63 176.34L116.7 175.89L116.79 175.46L116.9 175.03L117.04 174.6L117.2 174.19L117.39 173.78L117.6 173.38L117.83 172.98L118.1 172.59L118.39 172.21L118.71 171.84L119.05 171.47L171.47 119.05L171.84 118.71L172.22 118.38L172.6 118.09L173 117.82L173.4 117.57L173.81 117.35L174.23 117.16L174.66 116.99L175.09 116.84L175.54 116.71L175.99 116.61L176.44 116.52L176.91 116.46L177.38 116.42L177.86 116.41L178.34 116.41L178.83 116.43L179.32 116.47L179.82 116.53L180.33 116.6L180.84 116.7L181.35 116.81L181.87 116.94L182.39 117.08L182.92 117.24L183.45 117.42L183.99 117.61L184.52 117.81L185.06 118.03L185.61 118.27L186.15 118.51L186.7 118.77L187.25 119.04L187.8 119.32L188.35 119.62L188.91 119.92L189.46 120.24L190.02 120.56L190.58 120.9L191.13 121.24L227.03 142.02L227.73 141.63L234.71 138.18L241.85 135L249.12 132.09L256.54 129.46L259.89 128.42L270.58 88.33L270.73 87.69L270.89 87.07L271.05 86.44L271.22 85.83L271.4 85.22L271.58 84.62L271.77 84.03L271.97 83.45L272.17 82.88L272.38 82.32L272.6 81.77L272.83 81.24L273.06 80.71L273.31 80.2L273.56 79.7L273.82 79.21L274.08 78.74L274.36 78.28L274.65 77.84L274.94 77.41L275.24 77L275.55 76.61L275.88 76.23L276.21 75.87L276.55 75.53L276.9 75.2L277.26 74.9L277.63 74.61L278.01 74.35L278.4 74.1L278.81 73.88L279.22 73.67L279.64 73.49L280.08 73.34L280.53 73.2L280.98 73.09L281.45 73L281.93 72.94L282.43 72.9L282.93 72.89L357.07 72.89L357.57 72.9L358.06 72.94ZM311.13 212.25L306.77 212.69L302.46 213.3L298.21 214.08L294.02 215.03L289.89 216.14L285.83 217.4L281.84 218.82L277.92 220.38L274.08 222.1L270.32 223.96L266.64 225.95L263.05 228.09L259.55 230.35L256.15 232.75L252.85 235.27L249.64 237.91L246.54 240.68L243.55 243.55L240.68 246.54L237.91 249.64L235.27 252.85L232.75 256.15L230.35 259.55L228.09 263.05L225.95 266.64L223.96 270.32L222.1 274.08L220.38 277.92L218.82 281.84L217.4 285.83L216.14 289.89L215.03 294.02L214.08 298.21L213.3 302.46L212.69 306.77L212.25 311.13L211.98 315.54L211.89 320L211.98 324.46L212.25 328.87L212.69 333.23L213.3 337.54L214.08 341.79L215.03 345.98L216.14 350.11L217.4 354.17L218.82 358.16L220.38 362.08L222.1 365.92L223.96 369.68L225.95 373.36L228.09 376.95L230.35 380.45L232.75 383.85L235.27 387.15L237.91 390.36L240.68 393.46L243.55 396.45L246.54 399.32L249.64 402.09L252.85 404.73L256.15 407.25L259.55 409.65L263.05 411.91L266.64 414.05L270.32 416.04L274.08 417.9L277.92 419.62L281.84 421.18L285.83 422.6L289.89 423.86L294.02 424.97L298.21 425.92L302.46 426.7L306.77 427.31L311.13 427.75L315.54 428.02L320 428.11L324.46 428.02L328.87 427.75L333.23 427.31L337.54 426.7L341.79 425.92L345.98 424.97L350.11 423.86L354.17 422.6L358.16 421.18L362.08 419.62L365.92 417.9L369.68 416.04L373.36 414.05L376.95 411.91L380.45 409.65L383.85 407.25L387.15 404.73L390.36 402.09L393.46 399.32L396.45 396.45L399.32 393.46L402.09 390.36L404.73 387.15L407.25 383.85L409.65 380.45L411.91 376.95L414.05 373.36L416.04 369.68L417.9 365.92L419.62 362.08L421.18 358.16L422.6 354.17L423.86 350.11L424.97 345.98L425.92 341.79L426.7 337.54L427.31 333.23L427.75 328.87L428.02 324.46L428.11 320L428.02 315.54L427.75 311.13L427.31 306.77L426.7 302.46L425.92 298.21L424.97 294.02L423.86 289.89L422.6 285.83L421.18 281.84L419.62 277.92L417.9 274.08L416.04 270.32L414.05 266.64L411.91 263.05L409.65 259.55L407.25 256.15L404.73 252.85L402.09 249.64L399.32 246.54L396.45 243.55L393.46 240.68L390.36 237.91L387.15 235.27L383.85 232.75L380.45 230.35L376.95 228.09L373.36 225.95L369.68 223.96L365.92 222.1L362.08 220.38L358.16 218.82L354.17 217.4L350.11 216.14L345.98 215.03L341.79 214.08L337.54 213.3L333.23 212.69L328.87 212.25L324.46 211.98L320 211.89L315.54 211.98L311.13 212.25Z" id="d20qQ0g6NM"/><path d="M358.06 55.26L358.53 55.32L359 55.41L359.44 55.52L359.88 55.66L360.3 55.82L360.7 56L361.1 56.2L361.49 56.42L361.86 56.67L362.22 56.93L362.57 57.22L362.91 57.52L363.24 57.85L363.57 58.19L363.88 58.55L364.18 58.93L364.48 59.32L364.76 59.73L365.04 60.16L365.32 60.6L365.58 61.06L365.84 61.53L366.1 62.02L366.34 62.52L366.58 63.03L366.82 63.56L367.05 64.09L367.28 64.64L367.51 65.2L367.73 65.77L367.95 66.35L368.16 66.94L368.38 67.54L368.59 68.15L368.8 68.76L369.01 69.39L369.22 70.02L369.42 70.65L380.11 110.74L383.46 111.78L390.88 114.41L398.15 117.32L405.29 120.5L412.27 123.95L412.85 124.26L448.87 103.41L449.46 103.11L450.06 102.81L450.64 102.52L451.23 102.23L451.81 101.95L452.38 101.68L452.95 101.42L453.52 101.16L454.07 100.91L454.63 100.68L455.18 100.45L455.72 100.23L456.26 100.03L456.8 99.84L457.32 99.66L457.85 99.5L458.36 99.35L458.88 99.21L459.38 99.09L459.88 98.99L460.38 98.9L460.86 98.83L461.35 98.78L461.82 98.74L462.29 98.73L462.75 98.73L463.21 98.76L463.66 98.8L464.11 98.87L464.54 98.96L464.97 99.08L465.4 99.21L465.81 99.37L466.22 99.56L466.62 99.77L467.02 100.01L467.41 100.27L467.79 100.56L468.16 100.88L468.53 101.23L520.95 153.65L521.29 154.02L521.62 154.39L521.91 154.78L522.18 155.17L522.43 155.57L522.65 155.98L522.84 156.4L523.01 156.83L523.16 157.27L523.29 157.71L523.39 158.16L523.48 158.62L523.54 159.08L523.58 159.55L523.59 160.03L523.59 160.51L523.57 161L523.53 161.5L523.47 162L523.4 162.5L523.3 163.01L523.19 163.53L523.06 164.04L522.92 164.57L522.76 165.1L522.58 165.63L522.39 166.16L522.19 166.7L521.97 167.24L521.73 167.78L521.49 168.33L521.23 168.87L520.96 169.42L520.68 169.97L520.38 170.53L520.08 171.08L519.76 171.64L519.44 172.19L519.1 172.75L518.76 173.31L497.94 209.27L498.37 210.05L501.82 217.04L505 224.17L507.91 231.45L510.54 238.86L511.58 242.21L551.67 252.9L552.31 253.05L552.93 253.21L553.56 253.37L554.17 253.54L554.78 253.72L555.38 253.9L555.97 254.09L556.55 254.29L557.12 254.49L557.68 254.7L558.23 254.92L558.76 255.15L559.29 255.39L559.8 255.63L560.3 255.88L560.79 256.14L561.26 256.41L561.72 256.68L562.16 256.97L562.59 257.26L563 257.56L563.39 257.88L563.77 258.2L564.13 258.53L564.47 258.87L564.8 259.22L565.1 259.58L565.39 259.95L565.65 260.33L565.9 260.72L566.12 261.13L566.33 261.54L566.51 261.96L566.66 262.4L566.8 262.85L566.91 263.3L567 263.77L567.06 264.26L567.1 264.75L567.11 265.25L567.11 339.39L567.1 339.89L567.06 340.38L567 340.86L566.91 341.32L566.8 341.76L566.66 342.2L566.51 342.62L566.33 343.03L566.12 343.42L565.9 343.81L565.65 344.18L565.39 344.54L565.1 344.89L564.8 345.23L564.47 345.56L564.13 345.89L563.77 346.2L563.39 346.5L563 346.8L562.59 347.09L562.16 347.37L561.72 347.64L561.26 347.9L560.79 348.16L560.3 348.42L559.8 348.66L559.29 348.91L558.76 349.14L558.23 349.38L557.68 349.6L557.12 349.83L556.55 350.05L555.97 350.27L555.38 350.48L554.78 350.7L554.17 350.91L553.56 351.12L552.93 351.33L552.31 351.54L551.67 351.74L511.58 362.43L510.54 365.78L507.91 373.2L505 380.47L501.82 387.61L498.37 394.59L497.98 395.3L518.76 431.19L519.1 431.75L519.44 432.3L519.76 432.86L520.08 433.41L520.38 433.97L520.68 434.52L520.96 435.07L521.23 435.62L521.49 436.17L521.73 436.71L521.97 437.26L522.19 437.8L522.39 438.34L522.58 438.87L522.76 439.4L522.92 439.93L523.06 440.45L523.19 440.97L523.3 441.48L523.4 441.99L523.47 442.5L523.53 443L523.57 443.49L523.59 443.98L523.59 444.47L523.58 444.94L523.54 445.41L523.48 445.88L523.39 446.33L523.29 446.79L523.16 447.23L523.01 447.66L522.84 448.09L522.65 448.51L522.43 448.92L522.18 449.32L521.91 449.72L521.62 450.1L521.29 450.48L520.95 450.85L468.53 503.27L468.16 503.61L467.79 503.93L467.41 504.22L467.02 504.49L466.62 504.72L466.22 504.94L465.81 505.12L465.4 505.28L464.97 505.42L464.54 505.53L464.11 505.62L463.66 505.69L463.21 505.74L462.75 505.76L462.29 505.77L461.82 505.75L461.35 505.72L460.86 505.67L460.38 505.6L459.88 505.51L459.38 505.41L458.88 505.29L458.36 505.15L457.85 505L457.32 504.83L456.8 504.66L456.26 504.46L455.72 504.26L455.18 504.05L454.63 503.82L454.07 503.58L453.52 503.34L452.95 503.08L452.38 502.82L451.81 502.54L451.23 502.26L450.64 501.98L450.06 501.68L449.46 501.39L448.87 501.08L412.97 480.3L412.27 480.69L405.29 484.14L398.15 487.32L390.88 490.23L383.46 492.87L380.11 493.9L369.42 533.99L369.22 534.63L369.01 535.26L368.8 535.88L368.59 536.49L368.38 537.1L368.16 537.7L367.95 538.29L367.73 538.87L367.51 539.44L367.28 540L367.05 540.55L366.82 541.09L366.58 541.61L366.34 542.12L366.1 542.62L365.84 543.11L365.58 543.58L365.32 544.04L365.04 544.48L364.76 544.91L364.48 545.32L364.18 545.72L363.88 546.09L363.57 546.45L363.24 546.8L362.91 547.12L362.57 547.42L362.22 547.71L361.86 547.98L361.49 548.22L361.1 548.44L360.7 548.65L360.3 548.83L359.88 548.99L359.44 549.12L359 549.23L358.53 549.32L358.06 549.38L357.57 549.42L357.07 549.43L282.93 549.43L282.43 549.42L281.93 549.38L281.45 549.32L280.98 549.23L280.53 549.12L280.08 548.99L279.64 548.83L279.22 548.65L278.81 548.44L278.4 548.22L278.01 547.98L277.63 547.71L277.26 547.42L276.9 547.12L276.55 546.8L276.21 546.45L275.88 546.09L275.55 545.72L275.24 545.32L274.94 544.91L274.65 544.48L274.36 544.04L274.08 543.58L273.82 543.11L273.56 542.62L273.31 542.12L273.06 541.61L272.83 541.09L272.6 540.55L272.38 540L272.17 539.44L271.97 538.87L271.77 538.29L271.58 537.7L271.4 537.1L271.22 536.49L271.05 535.88L270.89 535.26L270.73 534.63L270.58 533.99L259.89 493.9L256.54 492.87L249.12 490.23L241.85 487.32L234.71 484.14L227.73 480.69L226.89 480.23L191.13 500.94L190.58 501.28L190.02 501.61L189.46 501.94L188.91 502.25L188.35 502.56L187.8 502.85L187.25 503.13L186.7 503.4L186.15 503.66L185.61 503.91L185.06 504.14L184.52 504.36L183.99 504.57L183.45 504.76L182.92 504.93L182.39 505.09L181.87 505.24L181.35 505.37L180.84 505.48L180.33 505.57L179.82 505.65L179.32 505.71L178.83 505.75L178.34 505.77L177.86 505.77L177.38 505.75L176.91 505.71L176.44 505.65L175.99 505.57L175.54 505.46L175.09 505.34L174.66 505.19L174.23 505.02L173.81 504.82L173.4 504.6L173 504.36L172.6 504.09L172.22 503.79L171.84 503.47L171.47 503.12L119.05 450.7L118.71 450.33L118.39 449.96L118.1 449.58L117.83 449.19L117.6 448.8L117.39 448.4L117.2 447.99L117.04 447.57L116.9 447.15L116.79 446.72L116.7 446.28L116.63 445.84L116.58 445.39L116.56 444.93L116.55 444.47L116.57 444L116.6 443.52L116.65 443.04L116.72 442.55L116.81 442.06L116.92 441.56L117.04 441.05L117.17 440.54L117.32 440.02L117.49 439.5L117.67 438.97L117.86 438.44L118.06 437.9L118.28 437.35L118.5 436.8L118.74 436.25L118.99 435.69L119.24 435.12L119.51 434.55L119.78 433.98L120.06 433.4L120.34 432.82L120.64 432.23L120.94 431.64L121.24 431.04L141.98 395.23L141.63 394.59L138.18 387.61L135 380.47L132.09 373.2L129.46 365.78L128.42 362.43L88.33 351.74L87.69 351.54L87.07 351.33L86.44 351.12L85.83 350.91L85.22 350.7L84.62 350.48L84.03 350.27L83.45 350.05L82.88 349.83L82.32 349.6L81.77 349.38L81.24 349.14L80.71 348.91L80.2 348.66L79.7 348.42L79.21 348.16L78.74 347.9L78.28 347.64L77.84 347.37L77.41 347.09L77 346.8L76.61 346.5L76.23 346.2L75.87 345.89L75.53 345.56L75.2 345.23L74.9 344.89L74.61 344.54L74.35 344.18L74.1 343.81L73.88 343.42L73.67 343.03L73.49 342.62L73.34 342.2L73.2 341.76L73.09 341.32L73 340.86L72.94 340.38L72.9 339.89L72.89 339.39L72.89 265.25L72.9 264.75L72.94 264.26L73 263.77L73.09 263.3L73.2 262.85L73.34 262.4L73.49 261.96L73.67 261.54L73.88 261.13L74.1 260.72L74.35 260.33L74.61 259.95L74.9 259.58L75.2 259.22L75.53 258.87L75.87 258.53L76.23 258.2L76.61 257.88L77 257.56L77.41 257.26L77.84 256.97L78.28 256.68L78.74 256.41L79.21 256.14L79.7 255.88L80.2 255.63L80.71 255.39L81.24 255.15L81.77 254.92L82.32 254.7L82.88 254.49L83.45 254.29L84.03 254.09L84.62 253.9L85.22 253.72L85.83 253.54L86.44 253.37L87.07 253.21L87.69 253.05L88.33 252.9L128.42 242.21L129.46 238.86L132.09 231.45L135 224.17L138.18 217.04L141.63 210.05L142.02 209.35L121.24 173.45L120.94 172.86L120.64 172.26L120.34 171.68L120.06 171.09L119.78 170.51L119.51 169.94L119.24 169.37L118.99 168.81L118.74 168.25L118.5 167.69L118.28 167.14L118.06 166.6L117.86 166.06L117.67 165.53L117.49 165L117.32 164.47L117.17 163.96L117.04 163.44L116.92 162.94L116.81 162.44L116.72 161.95L116.65 161.46L116.6 160.98L116.57 160.5L116.55 160.03L116.56 159.57L116.58 159.11L116.63 158.66L116.7 158.22L116.79 157.78L116.9 157.35L117.04 156.93L117.2 156.51L117.39 156.1L117.6 155.7L117.83 155.3L118.1 154.92L118.39 154.53L118.71 154.16L119.05 153.8L171.47 101.38L171.84 101.03L172.22 100.71L172.6 100.41L173 100.14L173.4 99.9L173.81 99.67L174.23 99.48L174.66 99.31L175.09 99.16L175.54 99.03L175.99 98.93L176.44 98.85L176.91 98.79L177.38 98.75L177.86 98.73L178.34 98.73L178.83 98.75L179.32 98.79L179.82 98.85L180.33 98.92L180.84 99.02L181.35 99.13L181.87 99.26L182.39 99.4L182.92 99.56L183.45 99.74L183.99 99.93L184.52 100.13L185.06 100.35L185.61 100.59L186.15 100.83L186.7 101.09L187.25 101.36L187.8 101.65L188.35 101.94L188.91 102.24L189.46 102.56L190.02 102.88L190.58 103.22L191.13 103.56L227.03 124.34L227.73 123.95L234.71 120.5L241.85 117.32L249.12 114.41L256.54 111.78L259.89 110.74L270.58 70.65L270.73 70.02L270.89 69.39L271.05 68.76L271.22 68.15L271.4 67.54L271.58 66.94L271.77 66.35L271.97 65.77L272.17 65.2L272.38 64.64L272.6 64.09L272.83 63.56L273.06 63.03L273.31 62.52L273.56 62.02L273.82 61.53L274.08 61.06L274.36 60.6L274.65 60.16L274.94 59.73L275.24 59.32L275.55 58.93L275.88 58.55L276.21 58.19L276.55 57.85L276.9 57.52L277.26 57.22L277.63 56.93L278.01 56.67L278.4 56.42L278.81 56.2L279.22 56L279.64 55.82L280.08 55.66L280.53 55.52L280.98 55.41L281.45 55.32L281.93 55.26L282.43 55.22L282.93 55.21L357.07 55.21L357.57 55.22L358.06 55.26ZM311.13 194.57L306.77 195.01L302.46 195.62L298.21 196.41L294.02 197.35L289.89 198.46L285.83 199.72L281.84 201.14L277.92 202.71L274.08 204.42L270.32 206.28L266.64 208.27L263.05 210.41L259.55 212.67L256.15 215.07L252.85 217.59L249.64 220.23L246.54 223L243.55 225.87L240.68 228.86L237.91 231.96L235.27 235.17L232.75 238.47L230.35 241.87L228.09 245.37L225.95 248.96L223.96 252.64L222.1 256.4L220.38 260.24L218.82 264.16L217.4 268.15L216.14 272.21L215.03 276.34L214.08 280.53L213.3 284.79L212.69 289.09L212.25 293.45L211.98 297.87L211.89 302.32L211.98 306.78L212.25 311.19L212.69 315.55L213.3 319.86L214.08 324.11L215.03 328.3L216.14 332.43L217.4 336.49L218.82 340.49L220.38 344.4L222.1 348.24L223.96 352.01L225.95 355.68L228.09 359.27L230.35 362.77L232.75 366.17L235.27 369.48L237.91 372.68L240.68 375.78L243.55 378.77L246.54 381.65L249.64 384.41L252.85 387.05L256.15 389.57L259.55 391.97L263.05 394.24L266.64 396.37L270.32 398.37L274.08 400.22L277.92 401.94L281.84 403.5L285.83 404.92L289.89 406.19L294.02 407.29L298.21 408.24L302.46 409.02L306.77 409.63L311.13 410.08L315.54 410.34L320 410.43L324.46 410.34L328.87 410.08L333.23 409.63L337.54 409.02L341.79 408.24L345.98 407.29L350.11 406.19L354.17 404.92L358.16 403.5L362.08 401.94L365.92 400.22L369.68 398.37L373.36 396.37L376.95 394.24L380.45 391.97L383.85 389.57L387.15 387.05L390.36 384.41L393.46 381.65L396.45 378.77L399.32 375.78L402.09 372.68L404.73 369.48L407.25 366.17L409.65 362.77L411.91 359.27L414.05 355.68L416.04 352.01L417.9 348.24L419.62 344.4L421.18 340.49L422.6 336.49L423.86 332.43L424.97 328.3L425.92 324.11L426.7 319.86L427.31 315.55L427.75 311.19L428.02 306.78L428.11 302.32L428.02 297.87L427.75 293.45L427.31 289.09L426.7 284.79L425.92 280.53L424.97 276.34L423.86 272.21L422.6 268.15L421.18 264.16L419.62 260.24L417.9 256.4L416.04 252.64L414.05 248.96L411.91 245.37L409.65 241.87L407.25 238.47L404.73 235.17L402.09 231.96L399.32 228.86L396.45 225.87L393.46 223L390.36 220.23L387.15 217.59L383.85 215.07L380.45 212.67L376.95 210.41L373.36 208.27L369.68 206.28L365.92 204.42L362.08 202.71L358.16 201.14L354.17 199.72L350.11 198.46L345.98 197.35L341.79 196.41L337.54 195.62L333.23 195.01L328.87 194.57L324.46 194.3L320 194.21L315.54 194.3L311.13 194.57Z" id="a2MvuWcCyS"/></defs><g><g><g><use xlink:href="#d20qQ0g6NM" opacity="1" fill="var(--menuBottom)" fill-opacity="1"/></g><g><use xlink:href="#a2MvuWcCyS" opacity="1" fill="var(--menuBg)" fill-opacity="1"/></g></g></g></svg>',
    "robotoriLogo": '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M321.74 101.76C309.06 101.76 298.33 104.75 289.56 110.74C207.23 154.79 160.55 181.45 149.52 190.72C142.16 196.9 135.57 205.91 129.74 217.74C124.89 227.59 122.26 238.39 122.05 249.37C120.68 320.06 120.79 368.27 122.37 393.99C124.14 422.68 134.51 442.55 153.49 453.58C229.86 495.08 273.78 520.02 285.25 528.4C296.73 536.79 308.89 540.32 321.74 539C321.37 537.5 321.13 536.56 321.04 536.18C313.65 506.23 327.34 475.05 354.41 460.23C354.88 459.97 356.06 459.32 357.96 458.29C406.17 430.22 431.59 415.5 434.21 414.12C449.44 406.11 457.34 396.4 457.93 384.99C458.09 309.26 458.09 267.32 457.93 259.18C457.75 249.81 453.02 240.89 443.74 232.45C423.76 221 408.7 212.4 398.54 206.67C388.39 200.93 376.47 200.46 362.78 205.25C315.48 233.28 294.91 245.53 301.09 242C306.58 238.87 316.89 238.19 332.01 239.97C334.55 240.27 336.99 241.11 339.17 242.45C358.29 254.14 372.49 262.44 381.77 267.35C391.78 272.65 397.37 280.59 398.54 291.19C398.84 315.32 398.84 333.71 398.54 346.36C398.25 359.02 392.66 368.49 381.77 374.79L338.64 399.07C305.68 419.08 284.35 431.44 274.64 436.15C264.93 440.86 254.77 440.56 244.18 435.27C229.47 426.44 216.22 418.64 204.45 411.87C192.68 405.1 185.78 392.74 183.75 374.79C183.75 334.53 183.75 301.16 183.75 274.68C183.75 248.19 196.7 229.65 222.59 219.06C248.97 203.49 273.55 189.09 296.32 175.86C319.1 162.62 327.57 137.93 321.74 101.76" id="b45qDbGKZ8"></path><linearGradient id="gradienth1WQGksUvg" gradientUnits="userSpaceOnUse" x1="296.39" y1="113.18" x2="302.06" y2="539.27"><stop style="stop-color: #a6a6a6;stop-opacity: 0.48" offset="0%"></stop><stop style="stop-color: #fdf3fe;stop-opacity: 1" offset="100%"></stop></linearGradient><path d="M321.15 538.47C328.69 539.22 340.22 536.46 355.72 530.19L368.91 522.75C432.92 485.46 474.08 461.37 492.37 450.47C510.66 439.56 519.41 424.79 518.64 406.15C518.99 309.95 518.99 252.36 518.64 233.36C518.29 214.37 505.8 197.84 481.18 183.77C404.93 138.96 361.35 113.56 350.44 107.58C339.54 101.61 329.78 99.54 321.15 101.38C321.29 102.33 321.38 102.93 321.41 103.17C325.45 130.93 314.69 158.79 293.02 176.63C293.01 176.64 292.98 176.66 292.94 176.7C251.86 201.22 223.61 217.51 208.18 225.58C192.76 233.65 184.45 248.4 183.26 269.83C183.35 324.16 183.23 359.19 182.9 374.91C182.57 390.63 188.37 402.23 200.3 409.69C223.77 423.94 239.47 432.99 247.38 436.84C255.3 440.69 263.95 440.83 273.32 437.27L302.31 420.84C337.92 400.01 351.93 392.08 344.34 397.02C336.76 401.97 323.54 402.72 304.69 399.28C276.48 383.11 259.35 373.05 253.3 369.09C247.26 365.13 244.22 359.41 244.18 351.92C244.29 319.65 244.29 298.63 244.18 288.84C244.07 279.06 249.46 271.42 260.34 265.92C323.06 229.53 358.18 209.42 365.7 205.59C373.21 201.76 383.48 201.76 396.48 205.59C416.81 216.88 432.04 225.75 442.16 232.22C452.28 238.69 457.55 248.94 457.95 262.99C457.67 328.19 457.67 367.26 457.95 380.19C458.23 393.13 452.46 402.96 440.64 409.69C411.42 426.35 381.76 443.42 351.68 460.87C321.59 478.33 311.42 504.34 321.15 538.89" id="c1c7thxHPR"></path><linearGradient id="gradientf2lVdRekJK" gradientUnits="userSpaceOnUse" x1="350.9" y1="100.73" x2="350.9" y2="538.89"><stop style="stop-color: #fcf2fd;stop-opacity: 1" offset="0%"></stop><stop style="stop-color: #a6a6a6;stop-opacity: 0.48" offset="100%"></stop></linearGradient></defs><g><g><g><use xlink:href="#b45qDbGKZ8" opacity="1" fill="url(#gradienth1WQGksUvg)"></use></g><g><use xlink:href="#c1c7thxHPR" opacity="1" fill="url(#gradientf2lVdRekJK)"></use><g><use xlink:href="#c1c7thxHPR" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="0" stroke-opacity="1"></use></g></g></g></g></svg>',
    "blackPawn": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M529.86 320C529.86 435.82 435.82 529.86 320 529.86C204.18 529.86 110.14 435.82 110.14 320C110.14 204.18 204.18 110.14 320 110.14C435.82 110.14 529.86 204.18 529.86 320Z" id="aeF0Xtu0d"/></defs><g><g><g><filter id="shadow5227381" x="79.14" y="79.14" width="481.72" height="507.72" filterUnits="userSpaceOnUse" primitiveUnits="userSpaceOnUse"><feFlood/><feComposite in2="SourceAlpha" operator="in"/><feGaussianBlur stdDeviation="0"/><feOffset dx="0" dy="26" result="afterOffset"/><feFlood flood-color="#000000" flood-opacity="1"/><feComposite in2="afterOffset" operator="in"/><feMorphology operator="dilate" radius="0"/><feComposite in2="SourceAlpha" operator="out"/></filter><path d="M529.86 320C529.86 435.82 435.82 529.86 320 529.86C204.18 529.86 110.14 435.82 110.14 320C110.14 204.18 204.18 110.14 320 110.14C435.82 110.14 529.86 204.18 529.86 320Z" id="eRwIKmtaf" fill="white" fill-opacity="1" filter="url(#shadow5227381)"/></g><use xlink:href="#aeF0Xtu0d" opacity="1" fill="#212121" fill-opacity="1"/></g></g></svg>',
    "whitePawn": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M529.86 320C529.86 435.82 435.82 529.86 320 529.86C204.18 529.86 110.14 435.82 110.14 320C110.14 204.18 204.18 110.14 320 110.14C435.82 110.14 529.86 204.18 529.86 320Z" id="f7mS77rnBa"/></defs><g><g><g><filter id="shadow15465084" x="79.14" y="79.14" width="481.72" height="507.72" filterUnits="userSpaceOnUse" primitiveUnits="userSpaceOnUse"><feFlood/><feComposite in2="SourceAlpha" operator="in"/><feGaussianBlur stdDeviation="0"/><feOffset dx="0" dy="26" result="afterOffset"/><feFlood flood-color="#b8b8b8" flood-opacity="1"/><feComposite in2="afterOffset" operator="in"/><feMorphology operator="dilate" radius="0"/><feComposite in2="SourceAlpha" operator="out"/></filter><path d="M529.86 320C529.86 435.82 435.82 529.86 320 529.86C204.18 529.86 110.14 435.82 110.14 320C110.14 204.18 204.18 110.14 320 110.14C435.82 110.14 529.86 204.18 529.86 320Z" id="c1bzUBQfUY" fill="white" fill-opacity="1" filter="url(#shadow15465084)"/></g><use xlink:href="#f7mS77rnBa" opacity="1" fill="#ffffff" fill-opacity="1"/></g></g></svg>',
    "shareBtn": '<svg width="365" height="365" viewBox="0 0 365 365" fill="none" xmlns="http://www.w3.org/2000/svg" style="width: 100%;height: 100%;"><path d="M182.5 179.5V20M182.5 20L125.5 77M182.5 20L239 77" stroke="black" stroke-width="26" stroke-linecap="round" stroke-linejoin="round"/><path d="M116.5 129H86C72.7452 129 62 139.745 62 153V322C62 335.255 72.7452 346 86 346H279.5C292.755 346 303.5 335.255 303.5 322V153C303.5 139.745 292.755 129 279.5 129H248" stroke="black" stroke-width="26" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    "copyBtn": '<svg width="365" height="365" viewBox="0 0 365 365" fill="none" xmlns="http://www.w3.org/2000/svg" style="width: 100%; height: 100%;"><rect x="121" y="91" width="164" height="223" rx="19" stroke="black" stroke-width="19" stroke-linejoin="round"/><path d="M81 255V51H212" stroke="black" stroke-width="19" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    "plusIcon": '<svg width="640" height="640" viewBox="0 0 275 640" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M137.5 223.5V416.5" stroke="black" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/><path d="M41 320H234" stroke="black" stroke-width="35" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    "flagIcon": '<svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M205.965 374.336L274.933 184.849M274.933 184.849L308.423 92.836C398.767 83.8476 370.477 161.575 461.357 148.5L427.867 240.512C339.667 233.152 360.886 170.931 274.933 184.849Z" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/><path d="M306.823 374.336L237.855 184.849M237.855 184.849L204.365 92.836C114.021 83.8476 142.311 161.575 51.4308 148.5L84.9207 240.512C173.121 233.152 151.902 170.931 237.855 184.849Z" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    "tutorialIcon": '<svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M354 179C354 125.428 310.124 82 256 82C201.876 82 158 125.428 158 179" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/><path d="M256 349V270.48C309.892 270.48 354 230.824 354 177.5" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/><ellipse cx="256" cy="414.882" rx="15" ry="15.8824" fill="black"/></svg>',
    "arrowBack": '<svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M407 256H105M105 256L206.5 176M105 256L206.5 336" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    "arrowUpdate": '<svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M56 261L150.5 381L245 261" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/><path d="M452 359C452 261.414 478 128 302 128C126 128 151.014 261.414 151.014 359" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    "menuBtn" : '<svg width="512" height="512" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M87 147H424" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/><path d="M87 256H424" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/><path d="M87 365H424" stroke="black" stroke-width="30" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    "mainMenu" : '<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><g style="stroke: black;stroke-width: 20px;stroke-linecap: round;" transform="translate(50, 50) scale(0.8) translate(-50, -50)"><line x1="12.5" y1="20" x2="87.5" y2="20"></line><line x1="12.5" y1="50" x2="87.5" y2="50"></line><line x1="12.5" y1="80" x2="87.5" y2="80"></line></g></svg>',
    "frFlag" : '<svg xmlns="http://www.w3.org/2000/svg" width="900" height="600"><rect width="900" height="600" fill="#ED2939"/><rect width="600" height="600" fill="#fff"/><rect width="300" height="600" fill="#002395"/></svg>',
    "ukFlag" : '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 30" width="1200" height="600"><clipPath id="s"><path d="M0,0 v30 h60 v-30 z"/></clipPath><clipPath id="t"><path d="M30,15 h30 v15 z v15 h-30 z h-30 v-15 z v-15 h30 z"/></clipPath><g clip-path="url(#s)"><path d="M0,0 v30 h60 v-30 z" fill="#012169"/><path d="M0,0 L60,30 M60,0 L0,30" stroke="#fff" stroke-width="6"/><path d="M0,0 L60,30 M60,0 L0,30" clip-path="url(#t)" stroke="#C8102E" stroke-width="4"/><path d="M30,0 v30 M0,15 h60" stroke="#fff" stroke-width="10"/><path d="M30,0 v30 M0,15 h60" stroke="#C8102E" stroke-width="6"/></g></svg>',
    "esFlag" : '<?xml version="1.0" encoding="UTF-8"?><svg viewBox="0 0 750 500" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><rect width="750" height="500" fill="#c60b1e"/><rect y="125" width="750" height="250" fill="#ffc400"/><g stroke="#000" stroke-width=".39"><g stroke-width=".26"><path d="m167.99 222.24s-0.51 0-0.79-0.16-1.13-0.96-1.13-0.96l-0.68-0.49-0.62-0.85s-0.73-1.18-0.4-2.09c0.34-0.91 0.91-1.23 1.42-1.5 0.51-0.26 1.58-0.59 1.58-0.59s0.85-0.37 1.13-0.42c0.28-0.06 1.3-0.32 1.3-0.32s0.28-0.16 0.56-0.27c0.29-0.11 0.68-0.11 0.91-0.16 0.22-0.06 0.79-0.24 1.13-0.26 0.52-0.02 1.36 0.1 1.64 0.1s1.24 0.05 1.64 0.05c0.39 0 1.8-0.11 2.2-0.11 0.39 0 0.68-0.05 1.13 0 0.45 0.06 1.24 0.32 1.47 0.43s1.58 0.59 2.09 0.75 1.75 0.37 2.32 0.64c0.56 0.27 0.91 0.72 1.19 1.1 0.28 0.37 0.34 0.78 0.45 1.05 0.11 0.26 0.11 0.84 0 1.11-0.11 0.26-0.51 0.81-0.51 0.81l-0.62 1.02-0.79 0.64s-0.57 0.54-1.02 0.48c-0.45-0.04-5.03-0.86-7.97-0.86s-7.64 0.86-7.64 0.86h0.01z" fill="#ad1519" stroke-linejoin="round"/><g fill="#c8b100"><ellipse cx="175.66" cy="215.68" rx="1.38" ry="2.5"/><ellipse cx="175.68" cy="215.68" rx=".64" ry="2.3"/><ellipse cx="175.68" cy="213.04" rx=".93" ry=".87" stroke="none"/><path d="m176.96 212.74v0.58h-2.53v-0.58h0.94v-1.32h-0.62v-0.57h0.62v-0.57h0.6v0.57h0.62v0.57h-0.62v1.32h0.99" stroke-width=".3"/><path d="m175.94 212.2a0.93 0.87 0 1 1-0.5 0" fill="none"/><path d="m175.68 222.08h-4.81l-0.11-1.18-0.23-1.23-0.23-1.53c-1.33-1.75-2.55-2.9-2.96-2.65 0.1-0.32 0.22-0.56 0.47-0.71 1.18-0.7 3.61 0.98 5.44 3.74 0.16 0.25 0.32 0.5 0.46 0.75h3.97c0.14-0.25 0.3-0.5 0.46-0.75 1.82-2.76 4.26-4.44 5.43-3.74 0.26 0.15 0.37 0.39 0.47 0.71-0.41-0.24-1.62 0.9-2.96 2.65l-0.23 1.53-0.23 1.23-0.1 1.18h-4.84z"/><path d="m167.55 215.44c0.91-0.53 3.02 1.14 4.73 3.74m11.55-3.74c-0.91-0.53-3.01 1.14-4.73 3.74" fill="none"/></g><g id="e" fill="#c8b100"><path d="m168.58 224.25c-0.2-0.57-0.58-1.08-0.58-1.08 1.95-0.57 4.66-0.93 7.67-0.94 3.01 0.01 5.75 0.37 7.69 0.94 0 0-0.22 0.38-0.52 0.91-0.17 0.3-0.39 0.81-0.38 0.81-1.75-0.54-4.02-0.81-6.8-0.82-2.79 0.01-5.46 0.35-6.86 0.86 0.02 0-0.1-0.32-0.23-0.68h0.01"/><path d="m175.67 226.73c2.43-0.01 5.11-0.38 6.1-0.63 0.66-0.2 1.05-0.49 0.98-0.84-0.04-0.16-0.18-0.3-0.37-0.38-1.46-0.47-4.07-0.8-6.71-0.8-2.63 0-5.27 0.33-6.72 0.8-0.19 0.08-0.33 0.22-0.37 0.38-0.07 0.35 0.32 0.64 0.98 0.84 0.99 0.25 3.68 0.62 6.11 0.63z"/><path d="m183.48 222.08-0.59-0.53s-0.57 0.34-1.28 0.24c-0.7-0.11-0.93-0.97-0.93-0.97s-0.79 0.67-1.44 0.62c-0.65-0.06-1.07-0.62-1.07-0.62s-0.71 0.51-1.33 0.46c-0.62-0.06-1.21-0.83-1.21-0.83s-0.63 0.8-1.25 0.86c-0.62 0.05-1.13-0.54-1.13-0.54s-0.28 0.59-1.07 0.72-1.47-0.62-1.47-0.62-0.45 0.73-0.99 0.92c-0.54 0.18-1.24-0.27-1.24-0.27s-0.12 0.27-0.2 0.43-0.31 0.19-0.31 0.19l0.18 0.47c1.93-0.56 4.56-0.91 7.53-0.91s5.67 0.35 7.61 0.92l0.2-0.54h-0.01z"/><path d="m175.69 219.49 0.28 0.05c-0.05 0.12-0.06 0.24-0.06 0.38 0 0.58 0.5 1.05 1.12 1.05 0.49 0 0.91-0.31 1.06-0.73 0.01 0.01 0.11-0.38 0.15-0.38 0.03 0 0.03 0.41 0.05 0.41 0.07 0.53 0.55 0.89 1.1 0.89 0.62 0 1.11-0.47 1.11-1.06 0-0.04 0-0.08-0.01-0.12l0.35-0.35 0.19 0.44c-0.07 0.14-0.1 0.29-0.1 0.46 0 0.56 0.47 1.01 1.06 1.01 0.37 0 0.69-0.18 0.88-0.45l0.23-0.29v0.36c0 0.34 0.14 0.66 0.49 0.71 0 0 0.38 0.03 0.91-0.38 0.52-0.41 0.8-0.75 0.8-0.75l0.03 0.42s-0.51 0.84-0.97 1.1c-0.25 0.15-0.64 0.31-0.95 0.25-0.32-0.05-0.55-0.31-0.67-0.61-0.23 0.14-0.51 0.22-0.8 0.22-0.63 0-1.2-0.35-1.42-0.86-0.29 0.31-0.69 0.5-1.16 0.5-0.51 0-0.97-0.23-1.26-0.58-0.28 0.27-0.67 0.43-1.09 0.43-0.55 0-1.05-0.28-1.33-0.69-0.29 0.41-0.78 0.69-1.34 0.69-0.42 0-0.81-0.16-1.09-0.43-0.29 0.35-0.75 0.58-1.25 0.58-0.48 0-0.88-0.19-1.17-0.5-0.22 0.51-0.79 0.86-1.42 0.86-0.29 0-0.56-0.08-0.79-0.22-0.12 0.3-0.35 0.56-0.68 0.61-0.3 0.06-0.69-0.1-0.94-0.25-0.47-0.26-1.02-1.1-1.02-1.1l0.07-0.42s0.29 0.34 0.81 0.75 0.91 0.38 0.91 0.38c0.34-0.05 0.49-0.37 0.49-0.71v-0.36l0.22 0.29c0.19 0.27 0.51 0.45 0.88 0.45 0.59 0 1.06-0.45 1.06-1.01 0-0.17-0.02-0.32-0.1-0.46l0.19-0.44 0.35 0.35c-0.01 0.04-0.01 0.08-0.01 0.12 0 0.59 0.49 1.06 1.11 1.06 0.55 0 1.03-0.36 1.11-0.89 0.01 0 0.01-0.41 0.04-0.41 0.05 0 0.14 0.39 0.16 0.38 0.14 0.42 0.56 0.73 1.06 0.73 0.61 0 1.11-0.47 1.11-1.05 0-0.14 0-0.26-0.05-0.38l0.29-0.05h0.01z"/><path d="m175.67 222.23c-3.01 0.01-5.72 0.37-7.67 0.94-0.13 0.04-0.29-0.06-0.33-0.17-0.04-0.13 0.05-0.28 0.18-0.32 1.95-0.6 4.73-0.98 7.82-0.98s5.88 0.38 7.83 0.98c0.13 0.04 0.22 0.19 0.18 0.32-0.04 0.11-0.2 0.21-0.33 0.17-1.95-0.57-4.67-0.93-7.68-0.94z" stroke-linejoin="round"/><path d="m165.43 221c-0.01 0.01-0.38-0.48-0.65-0.73-0.2-0.18-0.68-0.33-0.68-0.33 0-0.08 0.28-0.28 0.58-0.28 0.18 0 0.35 0.07 0.45 0.2l0.04-0.2s0.24 0.05 0.35 0.32c0.12 0.29 0.05 0.72 0.05 0.72s-0.05 0.2-0.14 0.3z"/><path d="m167.32 220.22-0.11 0.66-1.4 0.15-0.21-0.12 0.04-0.23 1.06-0.87 0.62 0.41"/><path d="m165.45 220.75c0.12-0.12 0.36-0.09 0.53 0.06 0.18 0.15 0.24 0.38 0.12 0.5-0.12 0.13-0.36 0.1-0.53-0.06-0.18-0.15-0.24-0.38-0.12-0.5z"/><path d="m168.02 220.88c-0.06-0.18 0-0.37 0.13-0.42 0.14-0.03 0.3 0.09 0.37 0.27 0.06 0.19 0 0.38-0.14 0.42-0.13 0.04-0.29-0.08-0.36-0.27z"/><path d="m168.67 220.04 0.51 0.48 1.22-0.66 0.09-0.21-0.17-0.17-1.4-0.12-0.25 0.68"/><path d="m170.08 217.76-0.67 0.64 0.86 1.14 0.23 0.09 0.17-0.18 0.3-1.37-0.89-0.32"/><path d="m172.36 219.3-0.26 0.63-1.4-0.13-0.18-0.16 0.1-0.22 1.22-0.64 0.52 0.52"/><ellipse cx="170.51" cy="219.65" rx=".49" ry=".47"/><path d="m172.87 219.95c-0.03-0.2 0.07-0.37 0.21-0.39s0.28 0.13 0.3 0.33c0.03 0.19-0.07 0.37-0.21 0.38-0.14 0.02-0.28-0.13-0.3-0.32z"/><path d="m173.78 219.24 0.4 0.57 1.34-0.42 0.14-0.18-0.15-0.2-1.33-0.39-0.4 0.62"/><path d="m175.66 217.15-0.86 0.52 0.64 1.38 0.22 0.14 0.22-0.14 0.64-1.38-0.86-0.52"/><path d="m177.55 219.24-0.39 0.57-1.34-0.42-0.14-0.18 0.14-0.2 1.34-0.39 0.39 0.62"/><ellipse cx="175.67" cy="219.21" rx=".49" ry=".47"/><path d="m178.5 219.95c0.02-0.2-0.08-0.37-0.22-0.39s-0.28 0.13-0.3 0.33c-0.02 0.19 0.07 0.37 0.21 0.38 0.14 0.02 0.28-0.13 0.31-0.32z"/><path d="m178.99 219.3 0.26 0.63 1.4-0.13 0.18-0.16-0.1-0.22-1.22-0.64-0.52 0.52"/><path d="m181.27 217.76 0.67 0.64-0.86 1.14-0.23 0.09-0.17-0.18-0.3-1.37 0.89-0.32"/><path d="m182.68 220.04-0.51 0.48-1.22-0.66-0.1-0.21 0.19-0.17 1.4-0.12 0.24 0.68"/><ellipse cx="180.85" cy="219.65" rx=".49" ry=".47"/><path d="m183.34 220.88c0.06-0.18 0-0.37-0.13-0.42-0.14-0.03-0.3 0.09-0.37 0.27-0.06 0.19 0 0.38 0.14 0.42 0.13 0.04 0.29-0.08 0.36-0.27z"/><path d="m185.73 221c0.01 0.01 0.38-0.48 0.66-0.73 0.19-0.18 0.67-0.33 0.67-0.33 0-0.08-0.28-0.28-0.58-0.28-0.18 0-0.35 0.07-0.45 0.2l-0.04-0.2s-0.24 0.05-0.36 0.32c-0.11 0.29-0.03 0.72-0.03 0.72s0.04 0.2 0.13 0.3z"/><path d="m183.84 220.22 0.11 0.66 1.4 0.15 0.21-0.12-0.05-0.23-1.05-0.87-0.62 0.41"/><path d="m185.74 220.75c-0.11-0.12-0.35-0.09-0.53 0.06s-0.24 0.38-0.12 0.5c0.12 0.13 0.36 0.1 0.54-0.06 0.18-0.15 0.23-0.38 0.11-0.5z"/></g><g id="d" fill="none"><path d="m168.05 224.3 0.31-0.5 0.65 0.13-0.38 0.56-0.58-0.19" fill="#ad1519"/><path d="m170.85 223.81-0.69 0.11c-0.18 0.02-0.35-0.09-0.38-0.26-0.02-0.17 0.1-0.32 0.27-0.35l0.7-0.1 0.71-0.11c0.18-0.02 0.34 0.09 0.37 0.25 0.02 0.17-0.1 0.33-0.27 0.35l-0.71 0.11" fill="#058e6e"/><ellipse cx="173.19" cy="223.3" rx=".44" ry=".41" fill="#fff"/><path d="m175.7 223.48h-0.96c-0.18 0-0.33-0.14-0.33-0.31s0.14-0.31 0.32-0.31h1.96c0.19 0 0.33 0.14 0.33 0.31s-0.15 0.31-0.33 0.31h-0.99" fill="#ad1519"/><ellipse cx="178.16" cy="223.3" rx=".44" ry=".41" fill="#fff"/><path d="m180.5 223.81 0.69 0.11c0.18 0.02 0.35-0.09 0.38-0.26 0.02-0.17-0.09-0.32-0.27-0.35l-0.7-0.1-0.71-0.11c-0.18-0.02-0.35 0.09-0.37 0.25-0.03 0.17 0.09 0.33 0.27 0.35l0.71 0.11" fill="#058e6e"/><path d="m183.24 224.33-0.25-0.53-0.67 0.06 0.32 0.59 0.6-0.12" fill="#ad1519"/><path d="m175.66 226.16c-2.43 0-4.63-0.22-6.3-0.65 1.67-0.43 3.87-0.69 6.3-0.7 2.44 0 4.65 0.27 6.33 0.7-1.68 0.43-3.89 0.65-6.33 0.65z" fill="#ad1519" stroke-linejoin="round"/><path d="m176.8 226.08v-1.16m-0.58 1.2 0.01-1.23m-0.43 1.25v-1.26" stroke-width=".01"/><path d="m175.44 226.15v-1.27" stroke-width=".02"/><path d="m175.09 226.15v-1.27" stroke-width=".03"/><path d="m174.77 226.15v-1.27" stroke-width=".04"/><path d="m174.44 226.15v-1.27" stroke-width=".04"/><path d="m174.16 226.15v-1.27" stroke-width=".05"/><path d="m173.61 226.08-0.01-1.15m0.27 1.17v-1.21" stroke-width=".06"/><path d="m173.1 226.03v-1.06m0.26 1.09-0.01-1.13" stroke-width=".07"/><path d="m172.42 225.97v-0.93m0.23 0.94v-0.98m0.23 1.02v-1.02" stroke-width=".08"/><path d="m172.19 225.96v-0.9" stroke-width=".09"/><path d="m171.97 225.92v-0.85" stroke-width=".1"/><path d="m171.73 225.89v-0.78" stroke-width=".11"/><path d="m171.24 225.82-0.01-0.62m0.26 0.66v-0.7" stroke-width=".12"/><path d="m170.99 225.77v-0.55" stroke-width=".12"/><path d="m170.76 225.73v-0.46" stroke-width=".13"/><path d="m170.51 225.67v-0.36" stroke-width=".14"/><path d="m170.26 225.64v-0.27" stroke-width=".15"/><path d="m169.99 225.58v-0.13" stroke-width=".18"/></g></g><g id="c"><g fill="#005bbf"><path d="m191.28 330.68c-1.54 0-2.91-0.33-3.93-0.87-1-0.51-2.36-0.82-3.86-0.82-1.51 0-2.9 0.32-3.91 0.83-1.01 0.53-2.4 0.86-3.92 0.86-1.54 0-2.92-0.36-3.93-0.9-1-0.49-2.33-0.79-3.79-0.79-1.52 0-2.86 0.29-3.86 0.81-1.02 0.54-2.42 0.88-3.95 0.88v2.41c1.53 0 2.93-0.35 3.95-0.88 1-0.52 2.34-0.82 3.86-0.82 1.45 0 2.79 0.31 3.79 0.8 1.01 0.53 2.39 0.9 3.93 0.9 1.52 0 2.91-0.33 3.92-0.86 1.01-0.52 2.4-0.84 3.91-0.84 1.5 0 2.86 0.32 3.86 0.83 1.02 0.54 2.37 0.87 3.91 0.87l0.02-2.41z"/><path d="m191.28 333.09c-1.54 0-2.91-0.33-3.93-0.87-1-0.51-2.36-0.83-3.86-0.83-1.51 0-2.9 0.32-3.91 0.84-1.01 0.53-2.4 0.86-3.92 0.86-1.54 0-2.92-0.37-3.93-0.9-1-0.49-2.33-0.8-3.79-0.8-1.52 0-2.86 0.3-3.86 0.82-1.02 0.53-2.42 0.88-3.95 0.88v2.41c1.53 0 2.93-0.35 3.95-0.88 1-0.52 2.34-0.82 3.86-0.82 1.45 0 2.79 0.31 3.79 0.8 1.01 0.54 2.39 0.9 3.93 0.9 1.52 0 2.91-0.34 3.92-0.86s2.4-0.84 3.91-0.84c1.5 0 2.86 0.32 3.86 0.84 1.02 0.53 2.37 0.86 3.91 0.86l0.02-2.41" fill="#ccc"/><path d="m191.28 335.5c-1.54 0-2.91-0.33-3.93-0.86-1-0.52-2.36-0.84-3.86-0.84-1.51 0-2.9 0.32-3.91 0.84s-2.4 0.86-3.92 0.86c-1.54 0-2.92-0.36-3.93-0.9-1-0.49-2.33-0.8-3.79-0.8-1.52 0-2.86 0.3-3.86 0.82-1.02 0.53-2.42 0.88-3.95 0.88v2.4c1.53 0 2.93-0.34 3.95-0.88 1-0.51 2.34-0.8 3.86-0.8 1.45 0 2.79 0.3 3.79 0.79 1.01 0.54 2.39 0.89 3.93 0.89 1.52 0 2.91-0.32 3.92-0.85 1.01-0.52 2.4-0.83 3.91-0.83 1.5 0 2.86 0.31 3.86 0.82 1.02 0.55 2.37 0.86 3.91 0.86l0.02-2.4"/><path d="m191.26 340.32c-1.54 0-2.89-0.33-3.91-0.87-1-0.51-2.36-0.82-3.86-0.82-1.51 0-2.9 0.31-3.91 0.83s-2.4 0.86-3.92 0.86c-1.54 0-2.92-0.37-3.93-0.9-1-0.5-2.33-0.79-3.79-0.79-1.52 0-2.86 0.29-3.86 0.81-1.02 0.53-2.42 0.88-3.95 0.88v-2.4c1.53 0 2.93-0.36 3.95-0.9 1-0.51 2.34-0.8 3.86-0.8 1.45 0 2.79 0.3 3.79 0.79 1.01 0.54 2.39 0.89 3.93 0.89 1.52 0 2.91-0.32 3.92-0.85 1.01-0.52 2.4-0.83 3.91-0.83 1.5 0 2.86 0.31 3.86 0.82 1.02 0.55 2.39 0.86 3.93 0.86l-0.02 2.42" fill="#ccc"/><path d="m191.26 342.73c-1.54 0-2.89-0.33-3.91-0.86-1-0.52-2.36-0.84-3.86-0.84-1.51 0-2.9 0.32-3.91 0.84s-2.4 0.86-3.92 0.86c-1.54 0-2.92-0.37-3.93-0.9-1-0.5-2.33-0.8-3.79-0.8-1.52 0-2.86 0.3-3.86 0.82-1.02 0.53-2.42 0.88-3.95 0.88v-2.39c1.53 0 2.93-0.37 3.95-0.9 1-0.52 2.34-0.81 3.86-0.81 1.45 0 2.79 0.3 3.79 0.79 1.01 0.53 2.39 0.9 3.93 0.9 1.52 0 2.91-0.34 3.92-0.86s2.4-0.83 3.91-0.83c1.5 0 2.86 0.31 3.86 0.82 1.02 0.54 2.38 0.87 3.93 0.87l-0.02 2.41z"/></g><g fill="#c8b100"><path d="m166.92 320.78c0.05 0.21 0.13 0.4 0.13 0.62 0 1.46-1.27 2.63-2.81 2.63h22.94c-1.55 0-2.81-1.17-2.81-2.63 0-0.21 0.04-0.41 0.09-0.62-0.13 0.05-0.29 0.06-0.44 0.06h-16.69c-0.13 0-0.29-0.02-0.41-0.06z" stroke-linejoin="round"/><path d="m167.33 319.27h16.69c0.57 0 1.02 0.35 1.02 0.78s-0.45 0.79-1.02 0.79h-16.69c-0.56 0-1.02-0.36-1.02-0.79s0.46-0.78 1.02-0.78z"/><path d="m164.27 329.86h22.87v-5.83h-22.87v5.83z"/></g><path d="m167.55 318.32h16.25v-79.63h-16.25v79.63z" fill="#ccc"/><path d="m179.13 238.8v79.46m1.83-79.46v79.46" fill="none"/><g fill="#c8b100"><path d="m164.58 232.37h22.29v-5.84h-22.29v5.84z"/><path d="m166.92 236.26c0.14-0.06 0.24-0.07 0.41-0.07h16.69c0.17 0 0.32 0.03 0.46 0.08-0.58-0.19-0.99-0.71-0.99-1.32s0.45-1.14 1.03-1.33c-0.14 0.04-0.33 0.08-0.49 0.08h-16.7c-0.17 0-0.33-0.01-0.47-0.06l0.09 0.02c0.6 0.18 0.94 0.71 0.94 1.29 0 0.56-0.38 1.13-0.97 1.31z" stroke-linejoin="round"/><path d="m167.33 236.19h16.69c0.57 0 1.02 0.35 1.02 0.78 0 0.44-0.45 0.79-1.02 0.79h-16.69c-0.56 0-1.02-0.35-1.02-0.79 0-0.43 0.46-0.78 1.02-0.78z"/><path d="m167.33 232.37h16.7c0.57 0 1.03 0.3 1.03 0.66 0 0.37-0.46 0.67-1.03 0.67h-16.7c-0.56 0-1.02-0.3-1.02-0.67 0-0.36 0.46-0.66 1.02-0.66z"/></g></g><g id="b" fill="#ad1519"><path d="m162.48 298.62c-2.26 1.3-3.8 2.64-3.55 3.31 0.12 0.61 0.84 1.07 1.87 1.75 1.62 1.13 2.6 3.14 1.83 4.07 1.34-1.08 2.19-2.69 2.19-4.49 0-1.87-0.9-3.56-2.34-4.64z"/><path d="m200.4 268.47c-3.54-1.46-9.57-2.55-16.49-2.78-2.39 0.02-5.04 0.25-7.79 0.7-9.72 1.63-17.13 5.51-16.54 8.67 0.01 0.06 0.04 0.2 0.05 0.26 0 0-3.64-8.21-3.7-8.52-0.65-3.51 7.56-7.82 18.35-9.62 3.39-0.57 6.69-0.79 9.56-0.76 6.9 0 12.9 0.89 16.52 2.23l0.04 9.82" stroke-linejoin="round"/><path d="m167.52 278.47c-4.51-0.32-7.58-1.53-7.94-3.41-0.28-1.5 1.25-3.17 3.97-4.68 1.21 0.14 2.58 0.3 4 0.3l-0.03 7.79"/><path d="m183.83 272.38c2.82 0.43 4.93 1.13 5.98 1.99l0.1 0.17c0.5 1.03-1.97 3.22-6.11 5.67l0.03-7.83"/><path d="m157.42 293.83c-0.43-1.28 3.97-3.86 10.18-6.14 2.84-1.01 5.18-2.07 8.09-3.35 8.63-3.82 15-8.2 14.22-9.79l-0.09-0.17c0.46 0.38 1.18 8.24 1.18 8.24 0.78 1.46-5.05 5.78-13 9.58-2.54 1.22-7.91 3.2-10.44 4.09-4.54 1.57-9.04 4.54-8.63 5.64l-1.51-8.09v-0.01z" stroke-linejoin="round"/></g><g stroke-width=".26"><path d="m324.85 220.42s-0.74 0.78-1.28 0.89c-0.53 0.1-1.21-0.49-1.21-0.49s-0.48 0.51-1.08 0.64c-0.59 0.14-1.41-0.66-1.41-0.66s-0.57 0.8-1.07 0.99c-0.51 0.18-1.13-0.24-1.13-0.24s-0.23 0.39-0.65 0.61c-0.18 0.09-0.48-0.05-0.48-0.05l-0.6-0.38-0.68-0.72-0.62-0.24s-0.28-0.91-0.31-1.07c-0.02-0.16-0.08-0.57-0.08-0.57-0.13-0.65 0.87-1.4 2.3-1.72 0.82-0.19 1.54-0.18 2.06-0.02 0.57-0.48 1.78-0.82 3.2-0.82 1.29 0 2.42 0.27 3.04 0.7 0.61-0.43 1.74-0.7 3.03-0.7 1.42 0 2.62 0.34 3.19 0.82 0.53-0.16 1.24-0.17 2.07 0.02 1.42 0.32 2.43 1.07 2.3 1.72 0 0-0.06 0.41-0.08 0.57-0.03 0.16-0.32 1.07-0.32 1.07l-0.62 0.24-0.68 0.72-0.58 0.38s-0.3 0.14-0.48 0.05c-0.43-0.21-0.66-0.61-0.66-0.61s-0.62 0.42-1.13 0.24c-0.51-0.19-1.07-0.99-1.07-0.99s-0.82 0.8-1.42 0.66c-0.59-0.13-1.07-0.64-1.07-0.64s-0.68 0.59-1.21 0.49c-0.54-0.11-1.27-0.89-1.27-0.89z" fill="#ad1519" stroke-width=".27"/><g fill="#c8b100"><ellipse cx="324.82" cy="216.2" rx="1.38" ry="1.96"/><ellipse cx="324.85" cy="216.2" rx=".63" ry="1.81"/><ellipse cx="324.84" cy="213.95" rx=".93" ry=".88" stroke="none"/><path d="m326.13 213.64v0.58h-2.53v-0.58h0.94v-1.3h-0.62v-0.58h0.62v-0.58h0.61v0.58h0.61v0.58h-0.61v1.3h0.98" stroke-width=".3"/><path d="m325.11 213.12a0.93 0.88 0 1 1-0.51-0.01" fill="none"/></g><g fill="none" stroke-width=".21"><path d="m314.41 219.99c-0.13-0.33-0.22-0.7-0.22-1.08 0-1.59 1.26-2.88 2.83-2.88 0.5 0 0.96 0.13 1.37 0.37" stroke-linecap="round" stroke-width=".26"/><path d="m319.48 217.93c-0.15-0.26-0.29-0.54-0.29-0.84 0-1.15 1.19-2.08 2.64-2.08 0.62 0 1.2 0.17 1.65 0.45" stroke-width=".26"/><path d="m330.17 217.96c0.15-0.26 0.25-0.57 0.25-0.87 0-1.15-1.18-2.08-2.64-2.08-0.62 0-1.19 0.17-1.64 0.45" stroke-width=".26"/><path d="m335.21 219.99c0.13-0.33 0.21-0.7 0.21-1.08 0-1.59-1.26-2.88-2.82-2.88-0.5 0-0.97 0.13-1.38 0.37" stroke-linecap="round" stroke-width=".26"/><ellipse cx="313.57" cy="218.68" rx=".45" ry=".43"/><ellipse cx="313.74" cy="217.1" rx=".45" ry=".43"/><ellipse cx="314.76" cy="215.9" rx=".45" ry=".43"/><ellipse cx="316.11" cy="215.25" rx=".45" ry=".43"/><ellipse cx="317.55" cy="215.31" rx=".45" ry=".43"/><ellipse cx="318.43" cy="217.08" rx=".45" ry=".43" fill="#fff"/><ellipse cx="318.68" cy="215.58" rx=".45" ry=".43"/><ellipse cx="319.81" cy="214.64" rx=".45" ry=".43"/><ellipse cx="321.23" cy="214.19" rx=".45" ry=".43"/><ellipse cx="322.67" cy="214.24" rx=".45" ry=".43"/><ellipse cx="326.94" cy="214.24" rx=".45" ry=".43"/><ellipse cx="328.39" cy="214.19" rx=".45" ry=".43"/><ellipse cx="329.8" cy="214.64" rx=".45" ry=".43"/><ellipse cx="330.93" cy="215.58" rx=".45" ry=".43"/><ellipse cx="331.18" cy="217.08" rx=".45" ry=".43" fill="#fff"/><ellipse cx="332.06" cy="215.31" rx=".45" ry=".43"/><ellipse cx="333.51" cy="215.25" rx=".45" ry=".43"/><ellipse cx="334.86" cy="215.9" rx=".45" ry=".43"/><ellipse cx="335.88" cy="217.1" rx=".45" ry=".43"/><ellipse cx="336.05" cy="218.68" rx=".45" ry=".43"/></g><use x="149.17" xlink:href="#e"/><use x="149.17" xlink:href="#d"/></g><use x="149.17" xlink:href="#c"/><use transform="matrix(-1,0,0,1,500.57,0)" xlink:href="#b"/><g fill="#c8b100" stroke="none"><path d="m166.42 264.65c1.99-0.72 3.29-1.58 2.66-3.14-0.41-1-1.43-1.19-2.97-0.63l-2.71 0.99 2.44 6.03c0.27-0.12 0.54-0.24 0.81-0.34 0.28-0.1 0.57-0.18 0.85-0.26l-1.08-2.64v-0.01zm-1.18-2.91 0.69-0.25c0.57-0.21 1.21 0.1 1.5 0.8 0.21 0.53 0.16 1.13-0.5 1.55-0.21 0.13-0.46 0.23-0.7 0.33l-0.99-2.43"/><path d="m172.78 259.22c-0.29 0.08-0.57 0.16-0.86 0.22-0.29 0.05-0.59 0.09-0.88 0.12l1.41 6.28 4.38-0.88c-0.05-0.12-0.12-0.26-0.14-0.38-0.03-0.14-0.03-0.28-0.04-0.41-0.77 0.22-1.61 0.46-2.61 0.66l-1.26-5.61"/><path d="m181.56 264.63c0.82-2.28 1.82-4.46 2.81-6.67-0.18 0.03-0.36 0.06-0.54 0.07s-0.37 0.01-0.54 0c-0.53 1.61-1.18 3.21-1.87 4.8-0.82-1.51-1.73-2.99-2.43-4.51-0.34 0.04-0.69 0.09-1.03 0.12-0.34 0.02-0.7 0.01-1.04 0.02 1.26 2.06 2.48 4.11 3.64 6.23 0.16-0.03 0.32-0.06 0.5-0.08 0.16-0.01 0.33 0.01 0.5 0.02"/><path d="m190.72 259.8c0.15-0.31 0.31-0.6 0.48-0.89-0.24-0.22-0.96-0.55-1.81-0.63-1.79-0.18-2.81 0.61-2.93 1.69-0.26 2.26 3.31 2.07 3.14 3.57-0.07 0.64-0.75 0.9-1.48 0.83-0.81-0.08-1.41-0.53-1.51-1.19l-0.22-0.02c-0.12 0.39-0.29 0.77-0.48 1.15 0.53 0.34 1.21 0.53 1.85 0.59 1.83 0.19 3.22-0.54 3.35-1.74 0.23-2.15-3.37-2.27-3.23-3.54 0.06-0.53 0.47-0.88 1.4-0.79 0.67 0.07 1.08 0.43 1.26 0.95l0.18 0.02"/><path d="m310.3 264.98c0.62-2.33 1.41-4.58 2.19-6.87-0.17 0.05-0.35 0.09-0.53 0.11-0.17 0.03-0.36 0.04-0.54 0.05-0.37 1.64-0.88 3.29-1.42 4.94-0.96-1.44-2-2.84-2.83-4.3-0.34 0.07-0.68 0.15-1.02 0.2s-0.69 0.07-1.04 0.11c1.45 1.94 2.85 3.89 4.2 5.91 0.16-0.04 0.32-0.1 0.5-0.12 0.16-0.02 0.33-0.02 0.49-0.03"/><path d="m316.48 258.16c-0.29 0.01-0.59 0.04-0.88 0.03-0.3 0-0.6-0.04-0.89-0.06l-0.12 6.41 4.49 0.08c-0.03-0.13-0.06-0.28-0.06-0.41s0.04-0.27 0.07-0.4c-0.81 0.05-1.68 0.1-2.71 0.08l0.1-5.73"/><path d="m323.52 259.21c0.72 0.06 1.41 0.19 2.1 0.31-0.01-0.13-0.03-0.27-0.02-0.41 0.01-0.13 0.06-0.26 0.1-0.39l-6.07-0.5c0.01 0.14 0.03 0.27 0.02 0.4-0.01 0.14-0.06 0.27-0.1 0.4 0.62-0.02 1.37-0.02 2.21 0.05l-0.53 5.77c0.29 0 0.59 0 0.88 0.03 0.3 0.02 0.59 0.07 0.88 0.11l0.53-5.77"/><path d="m326.01 265.53c0.29 0.05 0.59 0.09 0.88 0.15 0.28 0.06 0.57 0.15 0.85 0.23l0.72-2.94 0.08 0.01c0.16 0.41 0.38 0.9 0.49 1.19l0.9 2.22c0.36 0.06 0.71 0.11 1.05 0.18 0.36 0.08 0.7 0.18 1.04 0.28l-0.31-0.67c-0.48-1-0.99-2.01-1.41-3.02 1.12 0.04 1.98-0.36 2.2-1.26 0.15-0.62-0.1-1.11-0.68-1.53-0.44-0.31-1.28-0.47-1.83-0.6l-2.44-0.53-1.54 6.29m3.14-5.42c0.71 0.16 1.59 0.27 1.59 1.07-0.01 0.21-0.03 0.35-0.06 0.48-0.23 0.94-0.94 1.26-2.13 0.91l0.6-2.46"/><path d="m337.57 267.46c-0.05 0.69-0.18 1.37-0.31 2.1 0.3 0.14 0.61 0.27 0.9 0.44 0.3 0.16 0.57 0.34 0.86 0.52l0.6-7.23c-0.14-0.06-0.27-0.12-0.41-0.19-0.13-0.07-0.25-0.15-0.37-0.24l-6.38 4.05c0.17 0.08 0.35 0.16 0.51 0.25 0.17 0.09 0.31 0.19 0.47 0.28 0.54-0.45 1.1-0.82 1.74-1.3l2.39 1.31v0.01zm-1.81-1.66 2.13-1.37-0.25 2.4-1.88-1.03"/></g><path d="m249.65 182.72c6.64 0 12.56 0.99 16.41 2.51 2.2 1 5.16 1.73 8.4 2.17 2.47 0.33 4.81 0.39 6.85 0.24 2.73-0.06 6.67 0.74 10.62 2.48 3.26 1.45 5.99 3.21 7.8 4.91l-1.57 1.4-0.45 3.96-4.3 4.92-2.15 1.83-5.09 4.07-2.6 0.21-0.79 2.25-32.91-3.86-33.02 3.86-0.79-2.25-2.61-0.21-5.08-4.07-2.15-1.83-4.3-4.92-0.44-3.96-1.58-1.4c1.82-1.7 4.54-3.46 7.8-4.91 3.95-1.74 7.89-2.54 10.62-2.48 2.04 0.15 4.38 0.09 6.85-0.24 3.24-0.44 6.2-1.17 8.4-2.17 3.86-1.52 9.44-2.51 16.08-2.51z" fill="#ad1519" stroke-width=".26"/><g fill="#c8b100"><path d="m225.34 191.42 1.38 1.11 2.08-3.4c-2.25-1.38-3.8-3.78-3.8-6.51 0-0.31 0.02-0.61 0.06-0.91 0.21-4.34 5.5-7.92 12.2-7.92 3.48 0 6.63 0.95 8.84 2.48 0.06-0.67 0.12-1.25 0.21-1.86-2.43-1.42-5.6-2.28-9.05-2.28-7.71 0-13.74 4.39-14.03 9.57-0.03 0.31-0.05 0.61-0.05 0.92 0 2.76 1.26 5.26 3.26 6.99l-1.1 1.81"/><path d="m225.43 191.46c-2.63-1.97-4.27-4.64-4.27-7.58 0-3.38 2.22-6.4 5.58-8.41-2.07 1.67-3.33 3.83-3.51 6.23-0.03 0.31-0.05 0.61-0.05 0.92 0 2.76 1.26 5.26 3.26 6.99l-1.01 1.85"/><path d="m202.21 194.89c-1.48-1.65-2.38-3.79-2.38-6.12 0-1.41 0.33-2.75 0.91-3.95 2.13-4.38 8.82-7.57 16.76-7.57 2.16 0 4.23 0.23 6.14 0.67-0.42 0.46-0.75 0.97-1.08 1.48-1.59-0.31-3.29-0.48-5.06-0.48-7.27 0-13.36 2.83-15.12 6.65-0.47 0.97-0.73 2.06-0.73 3.2 0 2.32 1.09 4.4 2.79 5.82l-2.63 4.3-1.41-1.12 1.81-2.88z"/><path d="m204.9 180.48c-1.91 1.21-3.36 2.69-4.16 4.34-0.58 1.2-0.91 2.54-0.91 3.95 0 2.33 0.9 4.47 2.38 6.12l-1.6 2.59c-1.53-1.96-2.42-4.26-2.42-6.7 0-4.2 2.67-7.87 6.71-10.3z"/><path d="m250.04 171.27c1.76 0 3.28 1.16 3.64 2.73 0.23 1.38 0.38 2.95 0.41 4.62 0.01 0.18-0.01 0.35-0.01 0.52 0 0.2 0.04 0.41 0.05 0.61 0.06 3.52 0.56 6.62 1.27 8.52l-5.36 5.14-5.43-5.14c0.72-1.9 1.22-5 1.29-8.52 0-0.2 0.04-0.41 0.04-0.61 0-0.17-0.01-0.34-0.01-0.52 0.03-1.67 0.18-3.24 0.41-4.62 0.36-1.57 1.94-2.73 3.7-2.73z"/><path d="m250.04 172.94c0.91 0 1.68 0.58 1.87 1.39 0.23 1.31 0.37 2.8 0.4 4.38 0 0.16-0.01 0.32-0.01 0.48 0 0.2 0.03 0.39 0.04 0.59 0.05 3.32 0.53 6.25 1.21 8.05l-3.54 3.35-3.54-3.35c0.67-1.8 1.15-4.73 1.21-8.05 0-0.2 0.04-0.39 0.04-0.59 0-0.16-0.01-0.32-0.01-0.48 0.03-1.58 0.17-3.07 0.4-4.38 0.18-0.81 1.02-1.39 1.93-1.39z"/><path d="m274.7 191.42-1.39 1.11-2.08-3.4c2.26-1.38 3.81-3.78 3.81-6.51 0-0.31-0.02-0.61-0.06-0.91-0.21-4.34-5.5-7.92-12.2-7.92-3.49 0-6.63 0.95-8.84 2.48-0.06-0.67-0.12-1.25-0.22-1.86 2.44-1.42 5.6-2.28 9.06-2.28 7.71 0 13.74 4.39 14.03 9.57 0.03 0.31 0.05 0.61 0.05 0.92 0 2.76-1.27 5.26-3.27 6.99l1.11 1.81"/><path d="m274.61 191.46c2.63-1.97 4.27-4.64 4.27-7.58 0-3.38-2.22-6.4-5.58-8.41 2.07 1.67 3.33 3.83 3.51 6.23 0.03 0.31 0.05 0.61 0.05 0.92 0 2.76-1.27 5.26-3.27 6.99l1.02 1.85"/><path d="m297.83 194.89c1.47-1.65 2.38-3.79 2.38-6.12 0-1.41-0.33-2.75-0.91-3.95-2.14-4.38-8.82-7.57-16.76-7.57-2.16 0-4.23 0.23-6.15 0.67 0.43 0.46 0.76 0.97 1.09 1.48 1.58-0.31 3.29-0.48 5.06-0.48 7.27 0 13.35 2.83 15.11 6.65 0.47 0.97 0.73 2.06 0.73 3.2 0 2.32-1.09 4.4-2.79 5.82l2.63 4.3 1.42-1.12-1.81-2.88z"/><path d="m295.14 180.48c1.91 1.21 3.36 2.69 4.16 4.34 0.58 1.2 0.91 2.54 0.91 3.95 0 2.33-0.91 4.47-2.38 6.12l1.6 2.59c1.53-1.96 2.41-4.26 2.41-6.7 0-4.2-2.67-7.87-6.7-10.3z"/><ellipse cx="250.05" cy="167.3" rx="4.43" ry="4.2" fill="#005bbf" stroke-width=".26"/><path d="m248.89 155.54v2.26h-2.42v2.3h2.42v6.61h-3.05c-0.03 0.21-0.22 0.37-0.22 0.59 0 0.58 0.12 1.14 0.35 1.64 0 0.02 0.02 0.02 0.03 0.03h8.12c0-0.01 0.02-0.01 0.03-0.03 0.22-0.5 0.35-1.06 0.35-1.64 0-0.22-0.19-0.38-0.22-0.59h-2.96v-6.61h2.42v-2.3h-2.42v-2.26h-2.43z" stroke-width=".26"/></g><g fill="#fff"><ellipse cx="250.04" cy="188.94" rx="1.91" ry="1.8"/><ellipse cx="250.04" cy="185.4" rx="1.91" ry="1.8"/><ellipse cx="250.04" cy="181.6" rx="1.52" ry="1.44"/><ellipse cx="250.04" cy="178.18" rx="1.1" ry="1.04"/><ellipse cx="250.04" cy="175.18" rx=".88" ry=".83"/><ellipse cx="198.94" cy="198.67" rx="1.1" ry="1.04"/><ellipse cx="197.44" cy="196.02" rx="1.1" ry="1.04"/><ellipse cx="196.44" cy="192.94" rx="1.1" ry="1.04"/><ellipse cx="196.31" cy="189.64" rx="1.1" ry="1.04"/><ellipse cx="197.12" cy="186.4" rx="1.1" ry="1.04"/><ellipse cx="198.81" cy="183.45" rx="1.1" ry="1.04"/><ellipse cx="201.06" cy="181.02" rx="1.1" ry="1.04"/><ellipse cx="203.68" cy="179.01" rx="1.1" ry="1.04"/><ellipse cx="206.8" cy="177.36" rx="1.1" ry="1.04"/><ellipse cx="210.04" cy="176.19" rx="1.1" ry="1.04"/><ellipse cx="213.66" cy="175.54" rx="1.1" ry="1.04"/><ellipse cx="217.1" cy="175.36" rx="1.1" ry="1.04"/><ellipse cx="220.47" cy="175.48" rx="1.1" ry="1.04"/><ellipse cx="224.21" cy="190.32" rx="1.1" ry="1.04"/><ellipse cx="222.34" cy="187.65" rx="1.1" ry="1.04"/><ellipse cx="221.35" cy="184.75" rx="1.1" ry="1.04"/><ellipse cx="221.47" cy="181.57" rx="1.1" ry="1.04"/><ellipse cx="222.16" cy="178.37" rx="1.1" ry="1.04"/><ellipse cx="223.84" cy="175.48" rx="1.1" ry="1.04"/><ellipse cx="226.4" cy="173.47" rx="1.1" ry="1.04"/><ellipse cx="229.39" cy="171.81" rx="1.1" ry="1.04"/><ellipse cx="232.7" cy="170.82" rx="1.1" ry="1.04"/><ellipse cx="236.13" cy="170.23" rx="1.1" ry="1.04"/><ellipse cx="239.5" cy="170.28" rx="1.1" ry="1.04"/><ellipse cx="242.99" cy="170.87" rx="1.1" ry="1.04"/><ellipse cx="246.23" cy="171.99" rx="1.1" ry="1.04"/><ellipse cx="253.8" cy="171.99" rx="1.1" ry="1.04"/><ellipse cx="257.04" cy="170.87" rx="1.1" ry="1.04"/><ellipse cx="260.54" cy="170.28" rx="1.1" ry="1.04"/><ellipse cx="263.9" cy="170.23" rx="1.1" ry="1.04"/><ellipse cx="267.34" cy="170.82" rx="1.1" ry="1.04"/><ellipse cx="270.64" cy="171.81" rx="1.1" ry="1.04"/><ellipse cx="273.64" cy="173.47" rx="1.1" ry="1.04"/><ellipse cx="276.19" cy="175.48" rx="1.1" ry="1.04"/><ellipse cx="277.88" cy="178.37" rx="1.1" ry="1.04"/><ellipse cx="278.57" cy="181.57" rx="1.1" ry="1.04"/><ellipse cx="278.69" cy="184.75" rx="1.1" ry="1.04"/><ellipse cx="277.69" cy="187.65" rx="1.1" ry="1.04"/><ellipse cx="275.83" cy="190.32" rx="1.1" ry="1.04"/><ellipse cx="279.57" cy="175.48" rx="1.1" ry="1.04"/><ellipse cx="282.94" cy="175.36" rx="1.1" ry="1.04"/><ellipse cx="286.38" cy="175.54" rx="1.1" ry="1.04"/><ellipse cx="290" cy="176.19" rx="1.1" ry="1.04"/><ellipse cx="293.24" cy="177.36" rx="1.1" ry="1.04"/><ellipse cx="296.36" cy="179.01" rx="1.1" ry="1.04"/><ellipse cx="298.97" cy="181.02" rx="1.1" ry="1.04"/><ellipse cx="301.22" cy="183.45" rx="1.1" ry="1.04"/><ellipse cx="302.91" cy="186.4" rx="1.1" ry="1.04"/><ellipse cx="303.72" cy="189.64" rx="1.1" ry="1.04"/><ellipse cx="303.6" cy="192.94" rx="1.1" ry="1.04"/><ellipse cx="302.6" cy="196.02" rx="1.1" ry="1.04"/><ellipse cx="301.1" cy="198.67" rx="1.1" ry="1.04"/></g><g fill="#c8b100"><path d="m250.15 226.18c-12.26-0.02-23.25-1.47-31.09-3.83-0.57-0.18-0.87-0.7-0.84-1.25-0.01-0.52 0.29-1 0.84-1.17 7.84-2.36 18.83-3.81 31.09-3.83 12.27 0.02 23.25 1.47 31.09 3.83 0.55 0.17 0.84 0.65 0.83 1.17 0.03 0.55-0.27 1.07-0.83 1.25-7.84 2.36-18.82 3.81-31.09 3.83"/><path d="m250.07 216.09c-12.41 0.03-23.55 1.58-31.39 4 0.65-0.31 0.59-1.12-0.22-3.2-0.98-2.53-2.5-2.42-2.5-2.42 8.66-2.56 20.73-4.16 34.16-4.18 13.44 0.02 25.6 1.62 34.27 4.18 0 0-1.53-0.11-2.51 2.42-0.81 2.08-0.87 2.89-0.21 3.2-7.84-2.42-19.19-3.97-31.6-4"/><path d="m250.12 210.3c-13.43 0.02-25.5 1.62-34.16 4.18-0.58 0.17-1.19-0.05-1.38-0.6s0.12-1.18 0.7-1.35c8.71-2.67 21.08-4.35 34.84-4.38 13.77 0.03 26.19 1.71 34.9 4.38 0.58 0.17 0.89 0.8 0.7 1.35s-0.8 0.77-1.38 0.6c-8.67-2.56-20.78-4.16-34.22-4.18"/><path d="m250.2 199.78 1.23 0.22c-0.19 0.5-0.24 1.05-0.24 1.63 0 2.57 2.21 4.65 4.92 4.65 2.18 0 4.04-1.35 4.67-3.21 0.08 0.05 0.47-1.68 0.68-1.66 0.17 0.02 0.15 1.8 0.22 1.77 0.31 2.34 2.46 3.93 4.87 3.93 2.71 0 4.91-2.08 4.91-4.65 0-0.19-0.01-0.38-0.04-0.57l1.54-1.52 0.83 1.94c-0.33 0.61-0.46 1.3-0.46 2.03 0 2.46 2.1 4.44 4.69 4.44 1.63 0 3.06-0.78 3.9-1.97l0.99-1.25-0.01 1.53c0 1.55 0.66 2.93 2.16 3.18 0 0 1.73 0.1 4.03-1.7 2.29-1.8 3.55-3.29 3.55-3.29l0.2 1.8s-1.9 2.95-3.97 4.15c-1.14 0.66-2.86 1.35-4.23 1.13-1.44-0.24-2.48-1.4-3.01-2.74-1.03 0.61-2.25 0.97-3.55 0.97-2.81 0-5.33-1.54-6.32-3.86-1.29 1.4-3.09 2.25-5.2 2.25-2.24 0-4.29-1.01-5.57-2.56-1.27 1.16-2.98 1.87-4.88 1.87-2.48 0-4.69-1.22-5.94-3.05-1.25 1.83-3.46 3.05-5.94 3.05-1.89 0-3.61-0.71-4.87-1.87-1.28 1.55-3.34 2.56-5.58 2.56-2.11 0-3.9-0.85-5.19-2.25-1 2.32-3.52 3.86-6.32 3.86-1.31 0-2.52-0.36-3.55-0.97-0.54 1.34-1.57 2.5-3.02 2.74-1.36 0.22-3.08-0.47-4.22-1.13-2.08-1.2-3.98-4.15-3.98-4.15l0.2-1.8s1.27 1.49 3.56 3.29c2.29 1.81 4.02 1.7 4.02 1.7 1.51-0.25 2.16-1.63 2.16-3.18l-0.01-1.53 0.99 1.25c0.84 1.19 2.28 1.97 3.9 1.97 2.59 0 4.69-1.98 4.69-4.44 0-0.73-0.13-1.42-0.46-2.03l0.83-1.94 1.54 1.52c-0.02 0.19-0.04 0.38-0.04 0.57 0 2.57 2.2 4.65 4.91 4.65 2.42 0 4.56-1.59 4.88-3.93 0.06 0.03 0.05-1.75 0.22-1.77 0.2-0.02 0.6 1.71 0.67 1.66 0.64 1.86 2.49 3.21 4.68 3.21 2.71 0 4.91-2.08 4.91-4.65 0-0.58-0.03-1.13-0.24-1.63l1.29-0.22"/><path d="m208.37 206.32c-0.11-0.37-0.35-0.75-0.72-1.06-0.79-0.68-1.84-0.79-2.36-0.25-0.07 0.07-0.13 0.17-0.17 0.25 0 0-1.11-2.08-2.41-2.78-1.29-0.7-3.49-0.52-3.49-0.52 0-1.6 1.3-2.89 2.99-2.89 0.99 0 1.92 0.41 2.48 1.11l0.23-1.07s1.36 0.27 1.98 1.82-0.06 3.8-0.06 3.8 0.34-0.96 0.85-1.61c0.51-0.64 1.81-1.34 2.49-1.66 0.67-0.31 1.37-0.79 1.37-0.79s0.03 0.18 0.05 0.61c0.03 0.51-0.01 0.83-0.01 0.83 1.24-0.17 2.69 0.04 3.83 0.48-0.49 0.95-1.41 1.84-2.62 2.3 0 0 0.44 0.36 0.83 0.75 0.34 0.34 0.44 0.49 0.44 0.49s-0.85 0.13-1.27 0.19c-0.43 0.05-1.84 0.28-2.69 0.22-0.62-0.04-1.32-0.14-1.74-0.22"/><path d="m205.29 205.01c0.52-0.54 1.57-0.43 2.36 0.25 0.8 0.67 1.02 1.66 0.51 2.19-0.51 0.54-1.57 0.42-2.36-0.25-0.79-0.68-1.02-1.66-0.51-2.19" fill="#ad1519"/><path d="m216.39 205.91c-0.28-0.83-0.03-1.65 0.57-1.83 0.6-0.19 1.32 0.33 1.6 1.16s0.03 1.65-0.57 1.84c-0.6 0.18-1.31-0.34-1.6-1.17" fill="#fff"/><path d="m226.12 201.86c-0.33-0.27-0.59-0.64-0.67-1.08s0.01-0.87 0.23-1.23c0 0-0.88-0.44-1.83-0.69-0.72-0.19-1.99-0.2-2.37-0.2-0.38-0.02-1.15-0.03-1.15-0.03s0.07 0.17 0.28 0.55c0.27 0.46 0.5 0.75 0.5 0.75-1.27 0.29-2.35 1.12-3.03 2.09 0.99 0.68 2.3 1.1 3.6 0.97 0 0-0.12 0.34-0.2 0.86-0.06 0.43-0.06 0.61-0.06 0.61s0.71-0.26 1.07-0.39c0.35-0.13 1.54-0.55 2.15-0.96 0.8-0.54 1.48-1.25 1.48-1.25"/><path d="m225.68 191.65c1.06 0.67 1.98 1.79 2.3 3.03 0 0 0.13-0.25 0.71-0.59 0.59-0.33 1.09-0.32 1.09-0.32s-0.17 0.97-0.25 1.32c-0.09 0.34-0.09 1.38-0.32 2.32-0.23 0.93-0.63 1.68-0.63 1.68-0.42-0.34-0.99-0.51-1.58-0.41-0.58 0.1-1.06 0.44-1.32 0.9 0 0-0.66-0.58-1.21-1.38-0.55-0.81-0.93-1.78-1.13-2.08-0.21-0.3-0.72-1.15-0.72-1.15s0.47-0.18 1.14-0.05c0.67 0.12 0.88 0.32 0.88 0.32-0.14-1.28 0.28-2.62 1.04-3.59"/><path d="m228.97 201.38c0.22-0.35 0.32-0.79 0.24-1.23s-0.32-0.81-0.66-1.07c0 0 0.67-0.71 1.47-1.26 0.6-0.41 1.8-0.82 2.15-0.95 0.36-0.13 1.07-0.4 1.07-0.4s0 0.18-0.06 0.61c-0.08 0.52-0.2 0.87-0.2 0.87 1.3-0.14 2.62 0.29 3.61 0.98-0.69 0.97-1.77 1.79-3.04 2.08 0 0 0.23 0.28 0.5 0.74 0.21 0.39 0.28 0.56 0.28 0.56s-0.77-0.02-1.15-0.03c-0.38 0-1.65-0.01-2.37-0.2-0.95-0.25-1.84-0.69-1.84-0.69"/><ellipse cx="227.37" cy="200.45" rx="2.17" ry="2.06" fill="#ad1519"/><path d="m237.76 201.77c-0.11-0.87 0.31-1.63 0.93-1.7 0.63-0.07 1.23 0.57 1.34 1.44 0.11 0.86-0.3 1.63-0.93 1.7-0.62 0.07-1.22-0.57-1.34-1.44" fill="#fff"/><path d="m248.5 199.83c-0.32-0.36-0.53-0.82-0.53-1.33 0-0.5 0.19-0.97 0.51-1.32 0 0-0.89-0.67-1.89-1.12-0.77-0.35-2.18-0.59-2.6-0.67-0.43-0.08-1.28-0.24-1.28-0.24s0.04 0.2 0.2 0.67c0.2 0.56 0.4 0.93 0.4 0.93-1.47 0.08-2.85 0.81-3.81 1.76 0.96 0.94 2.34 1.66 3.81 1.75 0 0-0.2 0.36-0.4 0.93-0.16 0.46-0.2 0.67-0.2 0.67s0.85-0.16 1.28-0.24c0.42-0.08 1.83-0.32 2.6-0.67 1-0.46 1.91-1.11 1.91-1.11"/><path d="m250.11 188.36c1.05 0.95 1.85 2.36 1.95 3.82 0 0 0.19-0.27 0.91-0.53 0.73-0.26 1.28-0.16 1.28-0.16s-0.39 1.05-0.55 1.42c-0.17 0.37-0.39 1.53-0.84 2.53-0.44 1-1.05 1.76-1.05 1.76-0.4-0.45-1-0.75-1.67-0.75-0.68 0-1.27 0.3-1.67 0.75 0 0-0.61-0.76-1.05-1.76-0.45-1-0.67-2.16-0.84-2.53s-0.56-1.42-0.56-1.42 0.56-0.1 1.28 0.16 0.92 0.53 0.92 0.53c0.1-1.46 0.86-2.87 1.89-3.82"/><path d="m251.76 199.83c0.33-0.36 0.53-0.82 0.53-1.33 0-0.5-0.19-0.97-0.51-1.32 0 0 0.89-0.67 1.9-1.12 0.76-0.35 2.17-0.59 2.6-0.67 0.42-0.08 1.26-0.24 1.26-0.24s-0.02 0.2-0.19 0.67c-0.2 0.56-0.4 0.93-0.4 0.93 1.47 0.08 2.86 0.81 3.81 1.76-0.95 0.94-2.33 1.66-3.81 1.75 0 0 0.2 0.36 0.4 0.93 0.16 0.46 0.19 0.67 0.19 0.67l-1.26-0.24c-0.43-0.08-1.84-0.32-2.6-0.67-1.01-0.46-1.92-1.11-1.92-1.11"/><ellipse cx="250.14" cy="198.5" rx="2.17" ry="2.06" fill="#ad1519"/><path d="m262.58 201.77c0.11-0.87-0.3-1.63-0.93-1.7s-1.23 0.57-1.34 1.44c-0.11 0.86 0.31 1.63 0.93 1.7 0.63 0.07 1.23-0.57 1.34-1.44" fill="#fff"/><path d="m271.38 201.38c-0.22-0.35-0.32-0.79-0.25-1.23 0.09-0.44 0.33-0.81 0.67-1.07 0 0-0.67-0.71-1.47-1.26-0.61-0.41-1.8-0.82-2.16-0.95-0.35-0.13-1.06-0.4-1.06-0.4s-0.01 0.18 0.06 0.61c0.08 0.52 0.19 0.87 0.19 0.87-1.29-0.14-2.61 0.29-3.6 0.98 0.68 0.97 1.77 1.79 3.03 2.08 0 0-0.23 0.28-0.49 0.74-0.22 0.39-0.28 0.56-0.28 0.56l1.14-0.03c0.38 0 1.66-0.01 2.37-0.2 0.95-0.25 1.84-0.69 1.84-0.69"/><path d="m274.67 191.65c-1.06 0.67-1.98 1.79-2.31 3.03 0 0-0.12-0.25-0.71-0.59-0.58-0.33-1.09-0.32-1.09-0.32s0.17 0.97 0.26 1.32c0.09 0.34 0.09 1.38 0.31 2.32 0.23 0.93 0.64 1.68 0.64 1.68 0.42-0.34 0.99-0.51 1.57-0.41 0.59 0.1 1.06 0.44 1.33 0.9 0 0 0.66-0.58 1.21-1.38 0.54-0.81 0.92-1.78 1.12-2.08 0.21-0.3 0.72-1.15 0.72-1.15s-0.47-0.18-1.14-0.05c-0.67 0.12-0.88 0.32-0.88 0.32 0.15-1.28-0.28-2.62-1.03-3.59"/><path d="m274.22 201.86c0.34-0.27 0.6-0.64 0.67-1.08 0.09-0.44 0-0.87-0.22-1.23 0 0 0.88-0.44 1.83-0.69 0.72-0.19 1.99-0.2 2.36-0.2 0.39-0.02 1.15-0.03 1.15-0.03s-0.06 0.17-0.28 0.55c-0.26 0.46-0.49 0.75-0.49 0.75 1.26 0.29 2.34 1.12 3.03 2.09-0.99 0.68-2.31 1.1-3.6 0.97 0 0 0.11 0.34 0.19 0.86 0.06 0.43 0.06 0.61 0.06 0.61s-0.71-0.26-1.06-0.39c-0.36-0.13-1.55-0.55-2.16-0.96-0.79-0.54-1.48-1.25-1.48-1.25"/><ellipse cx="272.98" cy="200.45" rx="2.17" ry="2.06" fill="#ad1519"/><path d="m283.96 205.91c0.28-0.83 0.03-1.65-0.57-1.83-0.6-0.19-1.32 0.33-1.61 1.16-0.28 0.83-0.03 1.65 0.57 1.84 0.6 0.18 1.32-0.34 1.61-1.17" fill="#fff"/><path d="m291.97 206.32c0.11-0.37 0.36-0.75 0.72-1.06 0.79-0.68 1.85-0.79 2.36-0.25 0.07 0.07 0.14 0.17 0.18 0.25 0 0 1.1-2.08 2.4-2.78s3.5-0.52 3.5-0.52c0-1.6-1.31-2.89-3-2.89-0.99 0-1.92 0.41-2.47 1.11l-0.23-1.07s-1.36 0.27-1.98 1.82 0.05 3.8 0.05 3.8-0.33-0.96-0.84-1.61c-0.51-0.64-1.81-1.34-2.49-1.66-0.68-0.31-1.37-0.79-1.37-0.79s-0.03 0.18-0.06 0.61c-0.02 0.51 0.02 0.83 0.02 0.83-1.25-0.17-2.7 0.04-3.83 0.48 0.48 0.95 1.4 1.84 2.61 2.3 0 0-0.43 0.36-0.83 0.75-0.33 0.34-0.43 0.49-0.43 0.49s0.85 0.13 1.27 0.19c0.43 0.05 1.84 0.28 2.68 0.22 0.63-0.04 1.32-0.14 1.74-0.22"/><path d="m295.05 205.01c-0.51-0.54-1.57-0.43-2.36 0.25-0.79 0.67-1.02 1.66-0.51 2.19 0.51 0.54 1.57 0.42 2.36-0.25 0.79-0.68 1.02-1.66 0.51-2.19" fill="#ad1519"/></g><g fill="none"><path d="m250.12 224.57c-11.06-0.01-21.07-1.29-28.68-3.26 7.61-1.97 17.62-3.17 28.68-3.19 11.07 0.02 21.13 1.22 28.74 3.19-7.61 1.97-17.67 3.25-28.74 3.26z" fill="#ad1519" stroke-linejoin="round"/><path d="m258.04 224.28v-6.01m-3.02 6.21 0.04-6.37m-2.24 6.45v-6.49" stroke-width=".05"/><path d="m250.95 224.64v-6.57" stroke-width=".09"/><path d="m249.16 224.64v-6.57" stroke-width=".14"/><path d="m247.48 224.64v-6.57" stroke-width=".18"/><path d="m245.81 224.64v-6.57" stroke-width=".23"/><path d="m244.32 224.64v-6.57" stroke-width=".28"/><path d="m241.48 224.28-0.04-5.97m1.39 6.05v-6.25" stroke-width=".33"/><path d="m238.86 224.01v-5.5m1.33 5.66-0.04-5.86" stroke-width=".37"/><path d="m235.35 223.7v-4.84m1.15 4.92v-5.08m1.19 5.24v-5.28" stroke-width=".42"/><path d="m234.12 223.66v-4.68" stroke-width=".46"/><path d="m232.97 223.42v-4.36" stroke-width=".51"/><path d="m231.74 223.31v-4.06" stroke-width=".56"/><path d="m229.22 222.95-0.04-3.22m1.33 3.38v-3.62" stroke-width=".6"/><path d="m227.93 222.68v-2.84" stroke-width=".63"/><path d="m226.74 222.45v-2.36" stroke-width=".68"/><path d="m225.45 222.13v-1.85" stroke-width=".73"/><path d="m224.12 221.98v-1.38" stroke-width=".77"/><path d="m222.72 221.66v-0.67" stroke-width=".91"/><path d="m220.12 221.66c7.75-2.18 18.29-3.52 30-3.54 11.72 0.02 22.31 1.36 30.06 3.54"/><path d="m216.72 217.16 1.22-1.59 3.37 0.43-2.69 1.96-1.9-0.8" fill="#ad1519"/><path d="m224.03 215.28c0-0.58 0.49-1.04 1.1-1.04s1.1 0.46 1.1 1.04c0 0.57-0.49 1.04-1.1 1.04s-1.1-0.47-1.1-1.04" fill="#fff"/><path d="m233.64 215.07-2.36 0.27c-0.61 0.07-1.17-0.33-1.24-0.9-0.08-0.57 0.35-1.09 0.96-1.15l2.37-0.28 2.42-0.28c0.6-0.07 1.15 0.33 1.22 0.9s-0.36 1.09-0.96 1.16l-2.41 0.28" fill="#058e6e"/><path d="m240.54 213.35c0-0.58 0.49-1.04 1.1-1.04 0.6 0 1.1 0.46 1.1 1.04 0 0.57-0.5 1.04-1.1 1.04-0.61 0-1.1-0.47-1.1-1.04" fill="#fff"/><path d="m250.15 214.16h-3.29c-0.6 0-1.11-0.46-1.11-1.03 0-0.58 0.49-1.04 1.1-1.04h6.64c0.61 0 1.1 0.46 1.1 1.04 0 0.57-0.51 1.03-1.11 1.03h-3.33" fill="#ad1519"/><path d="m257.56 213.35c0-0.58 0.5-1.04 1.1-1.04 0.61 0 1.1 0.46 1.1 1.04 0 0.57-0.49 1.04-1.1 1.04-0.6 0-1.1-0.47-1.1-1.04" fill="#fff"/><path d="m266.66 215.07 2.36 0.27c0.6 0.07 1.17-0.33 1.24-0.9s-0.36-1.09-0.96-1.15l-2.37-0.28-2.42-0.28c-0.61-0.07-1.15 0.33-1.22 0.9-0.08 0.57 0.36 1.09 0.96 1.16l2.41 0.28" fill="#058e6e"/><path d="m274.07 215.28c0-0.58 0.49-1.04 1.1-1.04s1.1 0.46 1.1 1.04c0 0.57-0.49 1.04-1.1 1.04s-1.1-0.47-1.1-1.04" fill="#fff"/><path d="m283.57 217.16-1.21-1.59-3.37 0.43 2.69 1.96 1.89-0.8" fill="#ad1519"/></g><g stroke-width=".52"><path d="m250.49 344.33c-13.08 0-26.05-3.2-36.95-8.54-8.03-3.98-13.36-12-13.36-21.19v-33.3h100.42v33.3c0 9.19-5.32 17.21-13.36 21.19-10.9 5.34-23.66 8.54-36.75 8.54z" fill="#ccc"/><path d="m252.91 329.55c2.09 0.63 3.15 2.19 3.15 4.01 0 2.38-2.3 4.18-5.3 4.18-2.99 0-5.42-1.8-5.42-4.18 0-1.79 1-3.8 3.08-3.94 0 0-0.06-0.19-0.24-0.5-0.22-0.23-0.64-0.66-0.64-0.66s0.79-0.15 1.25 0.02c0.46 0.18 0.77 0.47 0.77 0.47s0.21-0.43 0.52-0.76c0.3-0.33 0.7-0.53 0.7-0.53s0.46 0.38 0.61 0.64c0.15 0.27 0.25 0.59 0.25 0.59s0.42-0.35 0.79-0.49c0.37-0.15 0.84-0.26 0.84-0.26s-0.13 0.46-0.22 0.69-0.14 0.72-0.14 0.72" fill="#ffd691"/><path d="m250.32 340.32s-3.98-2.68-5.7-3.04c-2.21-0.47-4.69-0.09-5.76-0.15 0.03 0.03 1.29 0.93 1.84 1.48s2.39 1.65 3.43 1.91c3.22 0.81 6.19-0.2 6.19-0.2" fill="#058e6e"/><path d="m251.46 340.56s2.54-2.66 5.21-3.02c3.15-0.44 5.22 0.26 6.44 0.58 0.03 0-1.01 0.49-1.56 0.87-0.55 0.37-1.97 1.57-4.14 1.59-2.18 0.03-4.58-0.23-4.97-0.17-0.4 0.06-0.98 0.15-0.98 0.15" fill="#058e6e"/><path d="m250.69 337.28c-1-0.93-1.62-2.25-1.62-3.72 0-1.46 0.62-2.78 1.63-3.71 0.99 0.93 1.61 2.25 1.61 3.71 0 1.47-0.62 2.79-1.62 3.72" fill="#ad1519"/><path d="m249.68 342.71s0.61-1.52 0.67-2.83c0.06-1.09-0.15-2.17-0.15-2.17h0.8s0.39 1.16 0.39 2.17c0 1.02-0.18 2.37-0.18 2.37s-0.55 0.08-0.73 0.17c-0.19 0.09-0.8 0.29-0.8 0.29" fill="#058e6e"/><g fill="#c8b100"><path d="m250.32 314.57c0 13.16-11.16 23.82-25.05 23.82s-25.15-10.66-25.15-23.82v-33.35h50.2v33.35" fill="#ad1519"/><path d="m200.03 314.12c0.15 7.02 2.95 12.25 5.73 15.67v-49.47h-5.66l-0.07 33.8z"/><path d="m211.08 334.23c1.57 0.83 3.72 2.22 6.03 2.77l-0.15-56.96h-5.88v54.19z"/><path d="m222.28 338.25c2.3 0.23 4.01 0.19 5.87 0v-58.21h-5.87v58.21z"/><path d="m233.32 337c2.3-0.46 4.9-1.89 6.03-2.63v-54.33h-5.88l-0.15 56.96z"/><path d="m244.81 329.24c2.45-2.18 4.75-7.12 5.59-12.76l0.14-36.44h-5.87l0.14 49.2z"/></g><path d="m300.65 281.22v33.35c0 13.16-11.28 23.82-25.17 23.82-13.9 0-25.16-10.66-25.16-23.82v-33.35h50.33" fill="#ad1519"/><path id="f" d="m272.71 306.14c0.05-0.14 0.12-0.27 0.19-0.4l-4.26-4.74-1.67 0.72-3.06-3.39 1-1.46-5.34-5.99c-0.07 0.02-0.2 0.02-0.27 0.04l0.03 4.02 1.75 0.5v4.46l-1.75 0.48-0.03 4.08c0.84 0.26 1.48 0.88 1.74 1.67l3.21 0.01 0.51-1.67h4.72l0.5 1.67zm-6.98-18.5v1.61h2.76v-1.61zm-7.3 20.37c0.64 0 1.16-0.49 1.16-1.1s-0.52-1.11-1.16-1.11c-0.65 0-1.17 0.5-1.17 1.11s0.52 1.1 1.17 1.1zm15.99-9.73-1.76-0.48v-4.46l1.76-0.5-0.01-1.92c-0.85-0.25-1.51-0.87-1.79-1.67h-2.68l-0.51 1.67h-4.71l-0.51-1.67h-3.09c-0.08 0.22-0.17 0.42-0.29 0.61l5.38 5.96 1.67-0.71 3.06 3.4-1 1.45 4.18 4.64c0.09-0.04 0.18-0.08 0.28-0.12zm-7.25-1.39-1.29 1.04 1.77 1.98 1.29-1.05zm8.0043 36.186c-1.24-0.065-2.2551-0.9022-2.5143-2.0159-1.67-0.23-3.25-0.66-4.73-1.3l0.84-1.43c1.29 0.55 2.66 0.91 4.08 1.11 0.31-0.66 0.86-1.16 1.58-1.4l0.01-5.62-1.76-0.49v-4.46l1.76-0.48v-7.64c-0.07-0.02-0.13-0.05-0.2-0.09l-3.98 4.42 1 1.44-3.06 3.4-1.67-0.71-3.3 3.67c0.57 0.87 0.55 2-0.11 2.85 0.94 1.05 2.03 1.98 3.24 2.75l-0.84 1.44c-1.42-0.89-2.7-1.99-3.79-3.22-0.87 0.26-1.86 0.11-2.6-0.5-1.15-0.93-1.29-2.56-0.3-3.64l0.14-0.16c-0.69-1.56-1.16-3.24-1.32-5l1.71 0.01c0.14 1.5 0.51 2.93 1.09 4.27 0.49-0.06 1-0.01 1.46 0.16l3.32-3.68-1-1.45 3.06-3.4 1.67 0.72 3.99-4.43c-0.09-0.14-0.15-0.29-0.21-0.46l-2.76 0.01-0.5 1.67h-4.72l-0.51-1.67-3.24-0.01c-0.27 0.76-0.9 1.36-1.69 1.62l-0.01 4.04-1.71-0.01v-4.01c-1.1-0.33-1.91-1.31-1.91-2.47 0-1.15 0.82-2.15 1.92-2.48l0.01-4.05-1.76-0.48v-4.46l1.76-0.5v-4.05c-1.08-0.35-1.84-1.32-1.84-2.45 0-1.43 1.22-2.58 2.73-2.58 1.22 0 2.25 0.74 2.61 1.78h3.09l0.51-1.67h4.71l0.51 1.67h2.68c0.35692-1.0311 1.3626-1.7673 2.559-1.7798l0.0711 8.3698h-0.85v2.61h0.845l-0.0214 21.59h-0.7836v2.61h0.77946zm-5.914-18.306-1.29-1.04-1.78 1.98 1.29 1.04zm-9.96-18.44h-1.69l-0.01 2.61h1.7zm9.16 11.41v-1.6h-2.85v1.6zm-10.6 9.69-1.76-0.39-0.25-4.45 1.75-0.58v2.56c0 0.99 0.09 1.92 0.26 2.86zm1.46-5.52 1.75 0.41s0.09 2.87 0.05 2.22c-0.04-0.74 0.19 2.24 0.19 2.24l-1.76 0.58c-0.18-0.9-0.24-1.84-0.24-2.79zm10.81 16.93 0.39-1.7c-1.52-0.48-2.93-1.18-4.17-2.09l-1.26 1.11c1.48 1.15 3.19 2.08 5.04 2.68zm-0.85 1.44-1.3 1.22c-1.47-0.54-2.86-1.26-4.12-2.11l0.38-1.77c1.5 1.13 3.21 2.03 5.04 2.66z" fill="#c8b100" stroke="#c8b100" stroke-width=".26"/><use transform="matrix(-1,0,0,1,550.43,0)" xlink:href="#f"/><path d="m272.59 306.94c0-1.44 1.23-2.6 2.74-2.6s2.73 1.16 2.73 2.6c0 1.43-1.22 2.58-2.73 2.58s-2.74-1.15-2.74-2.58" fill="#058e6e" stroke="none"/><g fill="#c8b100" stroke-width=".46"><path d="m200.12 281.25h50.18v-55.72h-50.18v55.72z" fill="#ad1519" stroke-width=".52"/><path d="m217.34 238.41h-0.92v-0.92h-1.62v3.69h1.62v2.55h-3.47v7.39h1.85v14.79h-3.7v7.63h28.42v-7.63h-3.69v-14.79h1.85v-7.39h-3.47v-2.55h1.62v-3.69h-1.62v0.92h-0.93v-0.92h-1.61v0.92h-1.16v-0.92h-1.62v3.69h1.62v2.55h-3.46v-8.09h1.84v-3.7h-1.84v0.93h-0.93v-0.93h-1.62v0.93h-0.92v-0.93h-1.85v3.7h1.85v8.09h-3.47v-2.55h1.62v-3.69h-1.62v0.92h-0.92v-0.92h-1.85v0.92zm-6.24 35.13h28.42m-28.42-1.85h28.42m-28.42-1.85h28.42m-28.42-1.85h28.42m-28.42-2.08h28.42m-24.72-1.62h21.03m-21.03-1.85h21.03m-21.03-2.08h21.03m-21.03-1.84h21.03m-21.03-1.85h21.03m-21.03-1.85h21.03m-21.03-1.85h21.03m-22.88-1.85h24.73m-24.73-1.85h24.73m-24.73-1.85h24.73m-24.73-1.84h24.73m-21.26-1.85h17.79m-10.63-1.85h3.47m-3.47-1.85h3.47m-3.47-1.85h3.47m-3.47-1.85h3.47m-5.32-2.31h7.16m-12.47 7.86h3.69m-5.31-2.31h6.93m-6.93 33.97v-1.85m0-1.85v-1.85m-1.85 1.85v1.85m3.47 0v-1.85m1.84 3.7v-1.85m0-1.85v-1.85m0-2.08v-1.62m0-1.85v-2.08m-1.84 7.63v-2.08m-3.47 2.08v-2.08m7.16 0v2.08m1.62-2.08v-1.62m-5.31-1.85v1.85m3.69-1.85v1.85m3.47-1.85v1.85m-1.85-1.85v-2.08m1.85-1.84v1.84m0-5.54v1.85m-1.85-3.7v1.85m1.85-3.7v1.85m-3.47-1.85v1.85m-3.69-1.85v1.85m-1.62-3.7v1.85m3.46-1.85v1.85m3.47-1.85v1.85m1.85-3.7v1.85m-3.47-1.85v1.85m-3.69-1.85v1.85m-1.62-3.69v1.84m6.93-1.84v1.84m-3.47-5.54v1.85m15.95-1.85h-3.7m5.32-2.31h-6.94m6.94 33.97v-1.85m0-1.85v-1.85m1.85 1.85v1.85m-3.47 0v-1.85m-1.85 3.7v-1.85m0-1.85v-1.85m0-2.08v-1.62m0-1.85v-2.08m1.85 7.63v-2.08m3.47 2.08v-2.08m-7.17 0v2.08m-1.62-2.08v-1.62m5.32-1.85v1.85m-3.7-1.85v1.85m-3.46-1.85v1.85m1.84-1.85v-2.08m-1.84-1.84v1.84m0-5.54v1.85m1.84-3.7v1.85m-1.84-3.7v1.85m3.46-1.85v1.85m3.7-1.85v1.85m1.62-3.7v1.85m-3.47-1.85v1.85m-3.47-1.85v1.85m-1.84-3.7v1.85m3.46-1.85v1.85m3.7-1.85v1.85m1.62-3.69v1.84m-6.94-1.84v1.84m3.47-5.54v1.85m-7.16 18.71v-2.08m0-5.54v-1.85m0 5.55v-1.85m0-5.55v-1.85m0-1.85v-1.84m0-3.7v-1.85m0-1.85v-1.85m-8.78 4.85h3.69m3.47-5.54h3.47m3.46 5.54h3.7"/><path d="m230.05 273.54v-4.86c0-0.92-0.46-3.7-4.85-3.7-4.16 0-4.62 2.78-4.62 3.7v4.86h9.47z"/><path d="m222.19 268.91-2.31-0.23c0-0.92 0.23-2.31 0.93-2.77l2.08 1.62c-0.23 0.23-0.7 0.92-0.7 1.38z"/><path d="m226.12 266.6 1.16-2.08c-0.46-0.23-1.39-0.46-2.08-0.46-0.46 0-1.39 0.23-1.85 0.46l1.15 2.08h1.62z"/><path d="m228.43 268.91 2.31-0.23c0-0.92-0.23-2.31-0.92-2.77l-2.08 1.62c0.23 0.23 0.69 0.92 0.69 1.38z"/><path d="m221.73 260.83v-5.09c0-1.38-0.92-2.54-2.54-2.54s-2.54 1.16-2.54 2.54v5.09h5.08z"/><path d="m228.89 260.83v-5.09c0-1.38 0.93-2.54 2.55-2.54 1.61 0 2.54 1.16 2.54 2.54v5.09h-5.09z"/><path d="m220.11 248.35 0.23-4.62h-4.39l0.47 4.62h3.69z"/><path d="m227.05 248.35 0.46-4.62h-4.39l0.23 4.62h3.7z"/><path d="m230.51 248.35-0.46-4.62h4.62l-0.46 4.62h-3.7z"/><g fill="#0039f0" stroke="none"><path d="m228.43 273.54v-4.16c0-0.7-0.46-2.78-3.23-2.78-2.54 0-3.01 2.08-3.01 2.78v4.16h6.24z"/><path d="m221.27 260.36v-4.39c0-1.15-0.69-2.31-2.08-2.31s-2.08 1.16-2.08 2.31v4.39h4.16z"/><path d="m229.36 260.36v-4.39c0-1.15 0.69-2.31 2.08-2.31 1.38 0 2.08 1.16 2.08 2.31v4.39h-4.16z"/></g></g><path d="m250.28 281.25h50.32v-55.72h-50.32v55.72z" fill="#ccc"/><path d="m275.93 239.26 0.05-0.62 0.09-0.34s-1.61 0.13-2.46-0.11-1.61-0.59-2.4-1.25c-0.79-0.68-1.1-1.1-1.67-1.18-1.36-0.22-2.4 0.4-2.4 0.4s1.02 0.37 1.78 1.31 1.59 1.41 1.95 1.53c0.59 0.18 2.66 0.05 3.22 0.07 0.57 0.03 1.84 0.19 1.84 0.19z" fill="#db4446" stroke-width=".39"/><g fill="none" stroke-width=".39"><path d="m283.46 237s0.01 0.72 0.08 1.4c0.06 0.67-0.22 1.24-0.11 1.61s0.16 0.66 0.3 0.93c0.14 0.26 0.21 0.94 0.21 0.94s-0.38-0.28-0.74-0.54c-0.35-0.27-0.6-0.44-0.6-0.44s0.07 0.72 0.1 1.03c0.04 0.31 0.22 0.89 0.51 1.24 0.29 0.33 0.87 0.89 1.05 1.33 0.18 0.45 0.14 1.44 0.14 1.44s-0.46-0.75-0.87-0.89c-0.39-0.14-1.26-0.62-1.26-0.62s0.79 0.79 0.79 1.55c0 0.75-0.32 1.6-0.32 1.6s-0.36-0.68-0.83-1.12c-0.47-0.45-1.13-0.9-1.13-0.9s0.52 1.17 0.52 1.95c0 0.79-0.15 2.47-0.15 2.47s-0.39-0.64-0.79-0.96c-0.4-0.31-0.87-0.58-1.02-0.78-0.14-0.21 0.48 0.64 0.54 1.16 0.07 0.51 0.32 2.35 1.92 4.69 0.94 1.37 2.39 3.77 5.5 2.98 3.11-0.78 1.96-4.97 1.3-6.92-0.65-1.95-0.98-4.11-0.94-4.87 0.04-0.75 0.58-2.97 0.51-3.39-0.07-0.41-0.24-2 0.14-3.28 0.4-1.33 0.73-1.85 0.95-2.4 0.21-0.55 0.39-0.86 0.46-1.34s0.07-1.37 0.07-1.37 0.58 1.06 0.73 1.44c0.14 0.38 0.14 1.5 0.14 1.5s0.11-1.12 0.98-1.67 1.88-1.13 2.13-1.44 0.33-0.51 0.33-0.51-0.08 1.92-0.62 2.67c-0.36 0.49-1.77 2.09-1.77 2.09s0.73-0.28 1.23-0.3c0.51-0.04 0.87 0 0.87 0s-0.62 0.48-1.41 1.64c-0.8 1.16-0.47 1.26-1.05 2.22s-1.05 1-1.78 1.58c-1.08 0.87-0.5 4.34-0.36 4.86 0.15 0.51 2.03 4.76 2.07 5.79 0.03 1.03 0.21 3.33-1.6 4.8-1.16 0.95-3.07 0.96-3.51 1.23-0.43 0.28-1.29 1.13-1.29 2.91 0 1.79 0.64 2.06 1.15 2.51 0.51 0.44 1.16 0.2 1.3 0.55 0.15 0.34 0.22 0.54 0.44 0.75 0.21 0.2 0.36 0.44 0.29 0.82-0.08 0.38-0.91 1.23-1.2 1.85-0.29 0.61-0.87 2.23-0.87 2.47s-0.07 0.99 0.18 1.37c0 0 0.91 1.06 0.29 1.26-0.4 0.14-0.78-0.25-0.97-0.2-0.54 0.14-0.83 0.47-0.98 0.45-0.36-0.07-0.36-0.25-0.4-0.76-0.03-0.51-0.01-0.72-0.17-0.72-0.22 0-0.33 0.18-0.37 0.45s-0.04 0.89-0.29 0.89-0.61-0.45-0.83-0.55-0.83-0.2-0.87-0.48c-0.03-0.27 0.36-0.85 0.76-0.96 0.4-0.1 0.76-0.3 0.51-0.51-0.26-0.2-0.51-0.2-0.76 0-0.25 0.21-0.79 0.04-0.76-0.27 0.04-0.31 0.11-0.69 0.07-0.86-0.03-0.17-0.47-0.51 0.1-0.82 0.59-0.31 0.84 0.27 1.42 0.17s0.86-0.31 1.08-0.65 0.18-1.06-0.22-1.5c-0.39-0.45-0.79-0.52-0.94-0.8-0.14-0.27-0.36-0.92-0.36-0.92s0.11 1.2 0.04 1.37-0.04 0.89-0.04 0.89-0.39-0.45-0.72-0.79c-0.32-0.34-0.65-1.37-0.65-1.37s-0.03 0.96-0.03 1.34c0 0.37 0.43 0.72 0.29 0.86-0.15 0.13-0.83-0.72-1.02-0.86-0.18-0.14-0.76-0.58-1.01-1.06s-0.44-1.16-0.51-1.41c-0.07-0.24-0.19-1.31-0.07-1.58 0.18-0.4 0.47-1.13 0.47-1.13h-1.41c-0.76 0-1.3-0.23-1.59 0.28s-0.15 1.54 0.21 2.88c0.37 1.33 0.58 1.98 0.48 2.22-0.11 0.24-0.58 0.79-0.76 0.89-0.19 0.11-0.69 0.07-0.91-0.03-0.21-0.1-0.57-0.27-1.26-0.27s-1.12 0.03-1.37-0.03c-0.26-0.07-0.88-0.38-1.17-0.31s-0.79 0.32-0.65 0.72c0.22 0.61-0.21 0.75-0.51 0.72-0.29-0.04-0.53-0.14-0.9-0.24-0.36-0.11-0.9 0-0.83-0.42 0.07-0.41 0.22-0.44 0.4-0.74 0.18-0.32 0.25-0.52 0.04-0.54-0.25-0.02-0.51-0.05-0.7 0.11-0.2 0.16-0.51 0.51-0.76 0.38-0.26-0.14-0.46-0.43-0.46-1.08 0-0.64-0.68-1.2-0.05-1.17 0.62 0.03 1.41 0.48 1.55 0.13s0.06-0.51-0.28-0.78-0.76-0.43-0.31-0.77c0.45-0.35 0.56-0.35 0.74-0.54 0.17-0.18 0.41-0.79 0.73-0.64 0.62 0.3 0.02 0.73 0.65 1.42 0.62 0.69 1.01 0.94 2.06 0.83 1.04-0.11 1.33-0.24 1.33-0.54 0-0.29-0.09-0.82-0.12-1.04-0.02-0.21 0.15-0.99 0.15-0.99s-0.48 0.3-0.63 0.59c-0.13 0.29-0.42 0.8-0.42 0.8s-0.11-0.6-0.08-1.09c0.02-0.29 0.12-0.79 0.11-0.89-0.03-0.27-0.23-0.94-0.23-0.94s-0.16 0.73-0.28 0.94c-0.11 0.21-0.16 1.07-0.16 1.07s-0.67-0.58-0.48-1.55c0.13-0.75-0.12-1.74 0.11-2.06 0.22-0.33 0.75-1.64 2.06-1.69 1.3-0.05 2.31 0.05 2.77 0.03 0.45-0.03 2.06-0.33 2.06-0.33s-2.97-1.52-3.64-1.98c-0.68-0.45-1.73-1.63-2.07-2.16-0.34-0.54-0.65-1.58-0.65-1.58s-0.53 0.02-1.02 0.29c-0.48 0.27-0.96 0.67-1.24 0.99s-0.73 1.05-0.73 1.05 0.08-0.94 0.08-1.23-0.06-0.86-0.06-0.86-0.33 1.28-1.01 1.76c-0.68 0.49-1.47 1.15-1.47 1.15s0.08-0.71 0.08-0.88c0-0.16 0.17-0.99 0.17-0.99s-0.48 0.72-1.21 0.86c-0.74 0.13-1.81 0.11-1.9 0.56-0.08 0.45 0.2 1.07 0.03 1.39s-0.54 0.54-0.54 0.54-0.42-0.35-0.79-0.38c-0.36-0.03-0.71 0.16-0.71 0.16s-0.31-0.4-0.19-0.67c0.11-0.26 0.67-0.66 0.54-0.83-0.15-0.16-0.6 0.06-0.88 0.19-0.28 0.14-0.88 0.27-0.82-0.19 0.05-0.45 0.2-0.72 0.05-1.04-0.14-0.32-0.05-0.53 0.18-0.61 0.22-0.08 1.12 0.02 1.21-0.19 0.08-0.21-0.22-0.48-0.82-0.61-0.59-0.14-0.88-0.49-0.57-0.78 0.32-0.3 0.4-0.38 0.54-0.64 0.14-0.27 0.2-0.76 0.74-0.51 0.53 0.24 0.42 0.83 0.99 1.01 0.56 0.19 1.89-0.08 2.17-0.24s1.19-0.83 1.5-0.99c0.31-0.15 1.61-1.12 1.61-1.12s-0.76-0.53-1.05-0.8c-0.28-0.27-0.78-0.91-1.04-1.05-0.25-0.13-1.5-0.61-1.92-0.64-0.42-0.02-1.72-0.48-1.72-0.48s0.59-0.19 0.79-0.35c0.19-0.16 0.64-0.56 0.87-0.53 0.22 0.02 0.28 0.02 0.28 0.02s-1.21-0.05-1.47-0.13c-0.25-0.08-0.99-0.54-1.27-0.54s-0.84 0.11-0.84 0.11 0.76-0.48 1.38-0.59c0.62-0.1 1.1-0.08 1.1-0.08s-0.96-0.27-1.19-0.58c-0.22-0.33-0.45-0.8-0.62-1.02-0.17-0.21-0.28-0.56-0.59-0.59s-0.85 0.38-1.16 0.35-0.54-0.22-0.57-0.67c-0.02-0.46 0-0.3-0.1-0.54-0.12-0.24-0.57-0.8-0.15-0.93 0.43-0.14 1.33 0.08 1.42-0.08 0.08-0.16-0.48-0.65-0.85-0.83-0.37-0.19-0.96-0.51-0.65-0.78 0.31-0.26 0.62-0.37 0.79-0.61s0.37-0.91 0.74-0.7c0.36 0.21 0.87 1.26 1.16 1.18 0.28-0.08 0.3-0.83 0.25-1.15-0.06-0.32 0-0.88 0.28-0.83s0.51 0.43 0.96 0.46c0.45 0.02 1.13-0.11 1.07 0.21-0.05 0.32-0.31 0.71-0.62 1.06-0.3 0.36-0.45 1.05-0.25 1.5 0.2 0.46 0.71 1.19 1.16 1.48s1.3 0.51 1.84 0.85c0.53 0.35 1.78 1.34 2.2 1.45s0.85 0.32 0.85 0.32 0.48-0.21 1.13-0.21 2.14 0.1 2.71-0.14 1.3-0.64 1.08-1.15c-0.23-0.51-1.47-0.96-1.36-1.36s0.57-0.43 1.33-0.46c0.76-0.02 1.8 0.14 2-0.94 0.2-1.06 0.26-1.68-0.81-1.92-1.08-0.24-1.87-0.27-2.07-1.04-0.2-0.78-0.39-0.97-0.17-1.18 0.23-0.21 0.62-0.32 1.41-0.37 0.8-0.06 1.7-0.06 1.96-0.25 0.25-0.18 0.3-0.69 0.61-0.91 0.31-0.21 1.53-0.4 1.53-0.4s1.46 0.71 2.8 1.71c1.21 0.9 2.3 2.23 2.3 2.23" fill="#ed72aa"/><path d="m269 243.39s-0.8 0.23-1.1 0.67c-0.37 0.53-0.34 1.07-0.34 1.07s0.68-0.56 1.56-0.33c0.87 0.24 0.96 0.33 1.33 0.3s1.27-0.35 1.27-0.35-0.74 0.86-0.65 1.45c0.08 0.58 0.19 0.85 0.17 1.15-0.06 0.72-0.6 1.61-0.6 1.61s0.31-0.19 1.05-0.35c0.73-0.16 1.36-0.51 1.75-0.81 0.39-0.29 0.9-1.02 0.9-1.02s-0.16 1 0 1.42c0.17 0.44 0.23 1.67 0.23 1.67s0.47-0.42 0.85-0.62c0.19-0.11 0.7-0.38 0.9-0.7 0.14-0.22 0.32-1.06 0.32-1.06s0.11 0.9 0.39 1.34c0.28 0.42 0.7 1.74 0.7 1.74s0.29-0.86 0.6-1.21 0.68-0.8 0.7-1.07c0.03-0.27-0.08-0.85-0.08-0.85l0.39 0.85m-11.41 0.61s0.48-0.83 0.93-1.1c0.46-0.26 1.08-0.74 1.25-0.8 0.16-0.05 0.9-0.46 0.9-0.46m0.99 5.17s1.09-0.55 1.41-0.75c0.68-0.4 1.16-1.12 1.16-1.12"/><path d="m282.57 240.9s-0.34-0.48-0.42-0.65c-0.09-0.15-0.23-0.48-0.23-0.48" fill="none" stroke-width=".26"/><path d="m278.33 257.41s2.04 1.26 1.98 2.31c-0.06 1.04-1.13 2.41-1.13 2.41" fill="none"/></g><path d="m273.05 236.24s-0.17-0.48-0.2-0.62c-0.03-0.13-0.12-0.29-0.12-0.29s0.88 0 0.85 0.27c-0.02 0.27-0.28 0.27-0.34 0.37-0.05 0.11-0.19 0.27-0.19 0.27z" stroke-width=".26"/><path d="m277.06 234.85-0.06-0.43s0.77 0 1.13 0.26c0.57 0.4 0.93 1.02 0.91 1.05-0.1 0.09-0.54-0.27-0.85-0.37 0 0-0.23 0.05-0.45 0.05-0.23 0-0.34-0.11-0.37-0.21-0.03-0.12 0.03-0.3 0.03-0.3l-0.34-0.05z" stroke-width=".05"/><g stroke-width=".26"><path d="m273.08 240.14 0.33-0.53 0.34 0.49-0.67 0.04"/><path d="m273.89 240.12 0.4-0.53 0.43 0.48-0.83 0.05"/><path d="m273.53 236.83 0.82 0.29-0.74 0.38-0.08-0.67"/><path d="m274.52 237.1 0.73 0.18-0.59 0.46-0.14-0.64"/></g><g fill="#db4446" stroke-width=".39"><path d="m261.88 236.08s0.48 0.34 0.85 0.4c0.37 0.05 0.76 0.05 0.82 0.05 0.05 0 0.17-0.54 0.11-0.91-0.2-1.2-1.3-1.47-1.3-1.47s0.33 0.73 0.17 1.07c-0.23 0.48-0.65 0.86-0.65 0.86z"/><path d="m259.59 237.12s-0.43-0.77-1.33-0.67c-0.9 0.11-1.5 0.81-1.5 0.81s1-0.03 1.25 0.13c0.37 0.24 0.48 0.86 0.48 0.86s0.54-0.32 0.71-0.54c0.16-0.21 0.39-0.59 0.39-0.59z"/><path d="m258.49 240.25s-0.77 0.11-1.19 0.59c-0.43 0.49-0.36 1.4-0.36 1.4s0.5-0.54 0.95-0.54c0.46 0 1.16 0.16 1.16 0.16s-0.22-0.56-0.22-0.8-0.34-0.81-0.34-0.81z"/><path d="m261.06 250.37s-0.42-0.45-1.16-0.32c-0.74 0.14-1.22 0.97-1.22 0.97s0.63-0.17 1-0.08c0.36 0.08 0.62 0.45 0.62 0.45s0.34-0.29 0.45-0.45 0.31-0.57 0.31-0.57z"/><path d="m260.21 253.34s-0.62-0.1-1.16 0.33c-0.53 0.43-0.56 1.25-0.56 1.25s0.51-0.43 0.91-0.37c0.39 0.05 0.87 0.27 0.87 0.27s0.08-0.51 0.11-0.64c0.09-0.38-0.17-0.84-0.17-0.84z"/><path d="m261.66 256.08s-0.05 0.79 0.33 1.28c0.4 0.51 1.13 0.59 1.13 0.59s-0.24-0.53-0.28-0.8c-0.06-0.4 0.34-0.75 0.34-0.75s-0.37-0.38-0.73-0.38c-0.37 0-0.79 0.06-0.79 0.06z"/><path d="m269 263.12s-0.51-0.64-1.21-0.62c-0.71 0.03-1.45 0.69-1.45 0.69s0.88-0.07 1.11 0.22c0.23 0.3 0.45 0.67 0.45 0.67s0.4-0.21 0.57-0.35c0.17-0.13 0.53-0.61 0.53-0.61z"/><path d="m266.83 265.93s-0.93-0.14-1.39 0.35c-0.45 0.48-0.42 1.36-0.42 1.36s0.56-0.61 1.07-0.56 1.08 0.32 1.08 0.32-0.09-0.53-0.15-0.78c-0.05-0.24-0.19-0.69-0.19-0.69z"/><path d="m268.84 268.9s-0.46 0.64-0.12 1.15 1.05 0.75 1.05 0.75-0.26-0.37-0.14-0.8c0.09-0.34 0.67-0.8 0.67-0.8l-1.46-0.3z"/><path d="m281.24 270.11s-0.81-0.19-1.27 0.08c-0.45 0.26-0.82 1.39-0.82 1.39s0.74-0.62 1.28-0.54c0.53 0.08 0.93 0.3 0.93 0.3s0.08-0.46 0.02-0.78c-0.03-0.19-0.14-0.45-0.14-0.45z"/><path d="m281.64 273.1s-0.62 0.64-0.4 1.18c0.23 0.54 0.62 1.1 0.62 1.1s-0.02-0.8 0.23-1.02c0.37-0.32 1.05-0.37 1.05-0.37s-0.54-0.48-0.71-0.54c-0.17-0.05-0.79-0.35-0.79-0.35z"/><path d="m284.75 274.04s-0.31 0.78 0.28 1.28c0.59 0.52 1.11 0.57 1.11 0.57s-0.46-0.81-0.32-1.23c0.15-0.45 0.54-0.72 0.54-0.72s-0.74-0.25-0.85-0.22c-0.11 0.02-0.76 0.32-0.76 0.32z"/></g><g fill="#c8b100" stroke-width=".26"><path d="m282.88 232.71-0.29 0.02c-0.01 0.03-0.14 0.24-0.26 0.35-0.26 0.25-0.65 0.28-0.86 0.07-0.11-0.11-0.16-0.26-0.14-0.41-0.17 0.09-0.35 0.09-0.51-0.01-0.26-0.15-0.32-0.5-0.14-0.79 0.03-0.06 0.06-0.14 0.11-0.18l-0.02-0.32-0.35 0.08-0.1 0.19c-0.22 0.25-0.54 0.31-0.7 0.17-0.08-0.07-0.14-0.26-0.13-0.27 0 0.01-0.09 0.09-0.17 0.11-0.54 0.13-0.75-1.05-0.77-1.35l-0.17 0.25s0.16 0.7 0.08 1.3c-0.08 0.59-0.29 1.19-0.29 1.19 0.74 0.19 1.86 0.8 2.97 1.65s1.98 1.78 2.34 2.42c0 0 0.58-0.32 1.18-0.51s1.36-0.2 1.36-0.2l0.22-0.21c-0.32 0.05-1.58 0.1-1.56-0.43 0-0.08 0.07-0.18 0.08-0.18-0.01 0.01-0.21-0.01-0.3-0.06-0.18-0.13-0.18-0.43 0.02-0.69l0.18-0.13 0.01-0.34-0.34 0.05c-0.03 0.04-0.11 0.09-0.15 0.13-0.27 0.23-0.65 0.25-0.86 0.03-0.13-0.12-0.17-0.29-0.11-0.46-0.16 0.04-0.32 0.03-0.45-0.05-0.26-0.15-0.31-0.52-0.11-0.8 0.09-0.14 0.28-0.31 0.31-0.32l-0.07-0.3h-0.01z"/><g fill="#000" stroke-width=".05"><path d="m280.63 233.4c0.05-0.07 0.15-0.06 0.23 0s0.1 0.16 0.06 0.21c-0.05 0.06-0.15 0.06-0.24-0.01-0.07-0.05-0.1-0.15-0.05-0.2z"/><path d="m281.58 234.19-0.33-0.25c-0.06-0.04-0.07-0.12-0.04-0.16 0.04-0.04 0.12-0.04 0.18 0l0.33 0.26 0.33 0.25c0.05 0.04 0.08 0.12 0.04 0.16s-0.12 0.04-0.18 0l-0.33-0.26"/><path d="m279.84 233-0.26-0.15c-0.07-0.04-0.1-0.12-0.07-0.17s0.11-0.06 0.17-0.02l0.26 0.16 0.26 0.15c0.06 0.03 0.09 0.11 0.07 0.16-0.03 0.05-0.11 0.06-0.17 0.02l-0.26-0.15"/><path d="m278.8 232.29c0.05-0.06 0.16-0.06 0.24 0 0.08 0.07 0.1 0.16 0.05 0.22-0.05 0.05-0.15 0.05-0.23-0.01s-0.1-0.15-0.06-0.21z"/><path d="m282.63 234.92c0.05-0.05 0.03-0.14-0.05-0.21-0.08-0.06-0.19-0.06-0.24 0-0.04 0.05-0.02 0.15 0.06 0.21s0.18 0.06 0.23 0z"/><path d="m283.2 235.58 0.22 0.21c0.05 0.05 0.13 0.07 0.18 0.03 0.04-0.04 0.04-0.11-0.01-0.16l-0.21-0.21-0.22-0.21c-0.05-0.05-0.14-0.07-0.18-0.03-0.05 0.03-0.04 0.11 0.01 0.16l0.21 0.21"/><path d="m284.15 236.39c0.05-0.06 0.03-0.15-0.05-0.21-0.08-0.07-0.18-0.07-0.23-0.01s-0.03 0.15 0.05 0.22c0.08 0.05 0.18 0.06 0.23 0z"/></g><path d="m281.4 230.36-0.59 0.01-0.11 0.87 0.06 0.14 0.15-0.01 0.76-0.51-0.27-0.5"/><path d="m281.4 230.36-0.59 0.01-0.11 0.87 0.06 0.14 0.15-0.01 0.76-0.51-0.27-0.5"/><path d="m279.8 230.84-0.02 0.54 0.92 0.12 0.15-0.07-0.02-0.15-0.53-0.71-0.5 0.27"/><path d="m281.7 231.92-0.49 0.27-0.54-0.71-0.01-0.15 0.14-0.06 0.93 0.11-0.03 0.54"/><path d="m280.51 231.25c0.08-0.13 0.26-0.17 0.39-0.09 0.14 0.07 0.18 0.24 0.1 0.37s-0.26 0.17-0.39 0.09c-0.14-0.08-0.18-0.24-0.1-0.37z"/><path d="m278.36 230.35c-0.02 0.01-0.13-0.46-0.26-0.71-0.08-0.19-0.39-0.43-0.39-0.43 0.03-0.05 0.42-0.19 0.87 0.09 0.38 0.31-0.03 0.87-0.03 0.87s-0.09 0.14-0.19 0.18z"/><path d="m279.39 230.66-0.42 0.37-0.68-0.6 0.06-0.08 0.03-0.15 0.92-0.07 0.09 0.53"/><path d="m278.24 230.29c0.05-0.15 0.18-0.23 0.28-0.2 0.11 0.04 0.15 0.18 0.1 0.33s-0.18 0.23-0.29 0.2c-0.11-0.04-0.15-0.18-0.09-0.33z"/><path d="m283.67 231.77-0.59-0.06-0.25 0.85 0.05 0.14 0.15 0.01 0.83-0.41-0.19-0.53"/><path d="m282.01 232.03-0.1 0.54 0.9 0.23 0.15-0.04 0.01-0.14-0.43-0.79-0.53 0.2"/><path d="m283.73 233.36-0.53 0.2-0.42-0.78 0.01-0.15 0.15-0.03 0.89 0.23-0.1 0.53"/><path d="m282.65 232.54c0.1-0.12 0.28-0.13 0.4-0.04 0.13 0.09 0.15 0.26 0.05 0.38s-0.28 0.13-0.41 0.04c-0.12-0.09-0.14-0.26-0.04-0.38z"/><path d="m285.64 233.61 0.11 0.55-0.87 0.3-0.16-0.04-0.01-0.14 0.36-0.81 0.57 0.14"/><path d="m285.49 235.2-0.56 0.13-0.31-0.83 0.04-0.15 0.15-0.02 0.85 0.35-0.17 0.52"/><path d="m283.97 233.66-0.18 0.52 0.85 0.34 0.16-0.02 0.03-0.14-0.3-0.83-0.56 0.13"/><path d="m284.91 234.63c0.12-0.11 0.12-0.28 0.02-0.39-0.11-0.11-0.29-0.11-0.41-0.02-0.11 0.11-0.12 0.28-0.01 0.39 0.1 0.11 0.29 0.12 0.4 0.02z"/><path d="m286.29 236.43c0 0.01 0.5 0.03 0.79 0.09 0.2 0.04 0.52 0.27 0.52 0.27 0.06-0.04 0.12-0.42-0.28-0.79-0.39-0.28-0.88 0.22-0.88 0.22s-0.12 0.12-0.15 0.21z"/><path d="m285.75 235.54-0.29 0.46 0.76 0.51 0.09-0.08 0.13-0.04-0.12-0.88-0.57 0.03"/><path d="m286.37 236.53c0.14-0.07 0.21-0.22 0.15-0.31s-0.22-0.1-0.36-0.02-0.2 0.22-0.14 0.31c0.05 0.09 0.21 0.1 0.35 0.02z"/></g><g stroke-width=".61"><ellipse cx="250.43" cy="281.01" rx="16.26" ry="18.3" fill="#ad1519"/><ellipse cx="250.44" cy="280.97" rx="11.44" ry="13.42" fill="#005bbf"/><g id="a" fill="#c8b100" stroke-width=".34"><path d="m245.03 271.74s-1.35 1.48-1.35 2.86c0 1.39 0.57 2.54 0.57 2.54-0.21-0.55-0.76-0.94-1.41-0.94-0.83 0-1.5 0.63-1.5 1.42 0 0.22 0.14 0.58 0.24 0.77l0.49 0.99c0.16-0.37 0.54-0.57 0.98-0.57 0.59 0 1.08 0.45 1.08 1.01 0 0.09-0.01 0.17-0.04 0.25l-1.22 0.01v1.03h1.09l-0.81 1.61 1.07-0.42 0.81 0.91 0.84-0.91 1.07 0.42-0.8-1.61h1.08v-1.03l-1.22-0.01c-0.02-0.08-0.02-0.16-0.02-0.25 0-0.56 0.47-1.01 1.06-1.01 0.44 0 0.82 0.2 0.98 0.57l0.49-0.99c0.1-0.19 0.24-0.55 0.24-0.77 0-0.79-0.67-1.42-1.49-1.42-0.66 0-1.21 0.39-1.41 0.94 0 0 0.57-1.15 0.57-2.54 0-1.38-1.39-2.86-1.39-2.86z" stroke-linejoin="round"/><path d="m242.87 281.11h4.36v-1.03h-4.36v1.03z"/></g><use x="10.63" xlink:href="#a"/><use x="5.31" y="9.14" xlink:href="#a"/></g></g></g></svg>',
    "soundOn": '<svg xmlns="http://www.w3.org/2000/svg" version="1.0" width="500" height="500" viewBox="0 0 75 75"><path d="M39.389,13.769 L22.235,28.606 L6,28.606 L6,47.699 L21.989,47.699 L39.389,62.75 L39.389,13.769z" style="stroke:#111;stroke-width:5;stroke-linejoin:round;fill:#111;"/><path d="M48,27.6a19.5,19.5 0 0 1 0,21.4M55.1,20.5a30,30 0 0 1 0,35.6M61.6,14a38.8,38.8 0 0 1 0,48.6" style="fill:none;stroke:#111;stroke-width:5;stroke-linecap:round"/></svg>',
    "soundOff": '<svg xmlns="http://www.w3.org/2000/svg" width="500" height="500" viewBox="0 0 500 500" fill="none"><path d="M262.593 91.7935L148.233 190.707H40V317.993H146.593L262.593 418.333V91.7935Z" fill="#111111" stroke="#111111" stroke-width="33.3333" stroke-linejoin="round"/><path d="M447 201L340 308M340 201L447 308" stroke="#111111" stroke-width="22" stroke-linecap="round"/></svg>',
};
let placingPawn = false;
let reserve = { white: 10, black: 10 };
let reload = { white: 0, black: 0 };
let toreload = 0;
let area = "bottom";
let gameBoard = [];
let movingBot = false;
let movingBotPath = {};
let offlineGameType = false;
let tutorial = false;
let spectating = false;
let tutorialState = null;

let lang = "en_GB";
const allLanguages = {
    en_GB: {
        genericBack: "Back",
        mainMenuResumeBtn: "Resume",
        mainMenuRecentGamesBtn: "Recent Games",
        mainMenuTutorialBtn: "Tutorial",
        playOnlineBtn: "Play online",
        playOfflineBtn: "Play offline",
        offline: "Offline",
        copyBtn: "Copy",
        shareBtn: "Share",
        randomBtn: "Find player",
        availableOptionsBtn: "Available options",
        gameSettingsBtn: "Game settings",
        confirmPathBtn: "Confirm Robot path",
        placePawnOptionBtn: "Place energy pawn",
        moveRbotBtn: "Move a robot",
        reloadEnergyBtn: "Reload energy",
        rematchBtn: "Rematch",
        mainMenuBtn: "Main Menu",
        playMenuDesc: "How would you like to play?",
        energyPawnsReloadDescritpion: "These energy pawns will be added to your inventory",
        recentGamesMenuDesc: "These are the names of the people you've played with recently",
        unsupportedDesc: "Your browser is outdated. Things might not be aligned, you may encounter bugs.",
        colorSchemeDesc: "Color scheme",
        loaderDesc: "Connecting to server",
        yourTurnDesc: "It is your turn. Click on the button below to see what you can do.",
        yourTurnDescOffline: "It is %name's turn. Click on the button below to see what you can do.",
        placePawnDesc: "These are the pawns you have, click on one of the buttons below to choose a colour and click the cell you want to place it in.",
        moveBotDesc: "Click on the robot you want to move, then click on pawns one by one to create a path.",
        winnerMenuDesc: "The game stops when the last energy pawn of any colour is taken at a reload.",
        shareGameMenuDesc: "Share this link with your friend:",
        serverError: "Couldn't connect to server",
        recentGamesMenuAgainst: "Against %player",
        energyPawnsReloadAction: "You have %actual energy pawns, you have to take %future of any colour to reload to 4.",
        shareTextTitle: "Robotory game!",
        shareTextText: "Come play Robotory with me!",
        playRisk: "Play at your own risk!",
        nameInput: "Enter a name here...",
        ennemyDisplayVS: "VS",
        ennemyDisplayThinking: "Thinking",
        genericConfirm: "Confirm",
        youWon: "You won!",
        youLost: "You lost!",
        tutorialText1: "Pick a color, then click on a cell to place an energy pawn",
        tutorialText2: "Great!",
        tutorialText3: "There are 3 robots on the board, and robots can only move into cells containing a pawn of their color.",
        tutorialText4: "...except the red robot can go in cells with a pawn of any color.",
        tutorialText5: "Let’s move a robot! Click on one of the robots, and then click on each pawn to create a path, when you are done, click on 'confirm robot path'.",
        tutorialText6: "Good job!",
        tutorialText7: "You need to have the robots in your side which is always at the bottom (unless you are playing offline).",
        tutorialText8: "You can only have 4 energy pawns at the same time.",
        tutorialText9: "When you have 3 or less pawns, you can reload your energy pawns from the reserve, but the reserve isn’t unlimited.",
        tutorialText10: "On the top you can see the reserve status. Under your name, you can see how many pawns You have.",
        tutorialText11: "When the last pawn of any color is taken from the reserve, the game immediately stops, and the winner is the player with the most bots in their side.",
        tutorialText12: "The tutorial has ended! You can Play Online with friends or Offline with persons that are physically next to you",
        tutorialYou: "You",
        tutorialTeacher: "Teacher",
        mainMenuUpdateBtn: "Update",
        updateDesc: "An update is available",
        madeBy: "Made by Cazeip",
        lightName: "Light",
        darkName: "Dark",
        nameInputDesc: "This is the name that will be shown to anyone playing against you.",
        sounds: "Sounds",
        soundsDesc: "If enabled, these sounds will be played throughout your experience in order to enhance it.",
        installBtn: "Install",
    },
    fr_FR: {
        genericBack: "Retour",
        mainMenuResumeBtn: "Résumer",
        mainMenuRecentGamesBtn: "Parties Récentes",
        mainMenuTutorialBtn: "Tutoriel",
        playOnlineBtn: "Jouer en ligne",
        playOfflineBtn: "Jouer hors-ligne",
        offline: "Hors-ligne",
        copyBtn: "Copier",
        shareBtn: "Partager",
        randomBtn: "Trouver un joueur",
        availableOptionsBtn: "Options disponibles",
        gameSettingsBtn: "Réglages de partie",
        confirmPathBtn: "Confirmer le chemin du robot",
        placePawnOptionBtn: "Placer un pion d'énergie",
        moveRbotBtn: "Déplacer un robot",
        reloadEnergyBtn: "Recharger l'énergie",
        rematchBtn: "Rejouer",
        mainMenuBtn: "Menu principal",
        playMenuDesc: "Comment voulez vous jouer?",
        energyPawnsReloadDescritpion: "Ces pions d'énergie seront ajoutés à votre inventaire",
        recentGamesMenuDesc: "Voici les noms des gens avec qui vous avez joué récemment",
        unsupportedDesc: "Votre navigateur est ancien. Les objets pourraient ne pas être alignés et vous rencontrez plus de bogues.",
        colorSchemeDesc: "Thème",
        loaderDesc: "Connection au serveur",
        yourTurnDesc: "C'est votre tour. Cliquez sur le bouton ci-dessous pour voir ce que vous pouvez faire.",
        yourTurnDescOffline: "C'est au tour de %name. Cliquez sur le bouton ci-dessous pour voir ce que vous pouvez faire.",
        placePawnDesc: "Voici les pions que vous avez, cliquez sur un des boutons ci-dessous pour séléctionner une couleur et cliquez sur le carreau sur lequel vous voulez le placer.",
        moveBotDesc: "Cliquez sur le robot que vous voulez déplacer, puis cliquez sur les pions un par un pour créer un 'trajet'",
        winnerMenuDesc: "La partie s'arrête quand un joueur prend le dernier pion d'énergie d'une couleur lors d'un rechargement.",
        shareGameMenuDesc: "Partagez ce lien avec un ami:",
        serverError: "Impossible de se connecter au serveur",
        recentGamesMenuAgainst: "Contre %player",
        energyPawnsReloadAction: "Vous avez %actual pions d'énergie, vous devez en prendre %future de n'importe quelle couleur pour en avoir 4 de nouveau.",
        shareTextTitle: "Partie Robotory!",
        shareTextText: "Viens jouer une partie de Robotory avec moi!",
        playRisk: "Je prends des risques!",
        nameInput: "Entrez un nom...",
        ennemyDisplayVS: "VS",
        ennemyDisplayThinking: "Je pense",
        genericConfirm: "Confirmer",
        youWon: "Vous avez gagné!",
        youLost: "Vous avez perdu!",
        tutorialText1: "Choisissez une couleur, puis cliquez sur une case pour placer un pion.",
        tutorialText2: "Parfait!",
        tutorialText3: "Il y a trois robots sur le damier, et les robots ne se déplacent que sur les cases avec un pion de leur couleur.",
        tutorialText4: "...sauf le robot rouge qui fonctionne avec des pions de toutes les couleurs.",
        tutorialText5: "Déplaçons un robot ! Cliquez sur un des robots, puis cliquez sur les pions un par un pour créer un 'trajet' puis cliquez sur confirmer.",
        tutorialText6: "Excellent !",
        tutorialText7: "Il faut que vous ayez les robots de votre côté qui est toujours en bas (sauf si vous jouez hors-ligne).",
        tutorialText8: "Vous ne pouvez garder que 4 pions non posés au même moment.",
        tutorialText9: "Quand vous avez 3 pions ou moins, vous pouvez recharger les pions depuis la réserve qui est limitée.",
        tutorialText10: "En haut, vous pouvez voir la réserve, et sous votre nom, vous pouvez voir vos pions non-posés.",
        tutorialText11: "La partie s'arrête quand un joueur prend le dernier pion d'énergie d'une couleur lors d'un rechargement depuis la reserve. Le gagnant est celui qui a le plus de robots.",
        tutorialText12: "Le tutoriel est fini, vous pouvez jouer en ligne ou hors ligne avec des persones physiquement à côté de vous.",
        tutorialYou: "Vous",
        tutorialTeacher: "Professeur",
        mainMenuUpdateBtn: "Mettre à jour",
        updateDesc: "Une mise à jour est disponible",
        madeBy: "Fait par Cazeip",
        lightName: "Clair",
        darkName: "Foncé",
        nameInputDesc: "Ce nom sera affiché à quiconque jouant contre vous.",
        sounds: "Sons",
        soundsDesc: "Si activé, vous entendrez des sons quand vous jouez.",
        installBtn: "Installer",
    },
    es_ES: {
        genericBack: "Atrás",
        mainMenuResumeBtn: "Continuar",
        mainMenuRecentGamesBtn: "Juegos Recentes",
        mainMenuTutorialBtn: "Tutorial",
        playOnlineBtn: "Jugar en línea",
        playOfflineBtn: "Jugar desconectado",
        offline: "Desconectado",
        copyBtn: "Copiar",
        shareBtn: "Compartir",
        randomBtn: "Buscar un jugador",
        availableOptionsBtn: "Opciones disponibles",
        gameSettingsBtn: "Configuraciones de este juego",
        confirmPathBtn: "Confirmar el camino del robot",
        placePawnOptionBtn: "Poner una pieza de energia",
        moveRbotBtn: "Mover un robot",
        reloadEnergyBtn: "Recargar la energía",
        rematchBtn: "Jugar de nuevo",
        mainMenuBtn: "Menú principal",
        playMenuDesc: "Cómo quieres júgar",
        energyPawnsReloadDescritpion: "Estas piezas de energia se añadirán al inventario",
        recentGamesMenuDesc: "Estos son los nombres de la gente con la que ha jugado recientemente",
        unsupportedDesc: "Su navegador es antiguo. Es posible que los objetos no estén alineados y que haya más errores.",
        colorSchemeDesc: "Tema",
        loaderDesc: "Conexión al servidor",
        yourTurnDesc: "Es su turno. Haz clic en el botón de abajo para ver qué puede hacer.",
        yourTurnDescOffline: "Es el turno de %name. Haz clic en el botón de abajo para ver qué puede hacer.",
        placePawnDesc: "Aquí están las piezas que tiene, haga clic en uno de los botones de abajo para seleccionar un color y haga clic en el azulejo en el que desea colocarlo.",
        moveBotDesc: "Haga clic en el robot que desea mover y haga clic en las piezas una por una para crear un 'trayecto'",
        winnerMenuDesc: "El juego se acaba cuando un jugador toma la última pieza de energía de un color durante una recarga.",
        shareGameMenuDesc: "Comparte este enlace con un amigo:",
        serverError: "No se puede conectar al servidor",
        recentGamesMenuAgainst: "Contra %player",
        energyPawnsReloadAction: "Tiene %actual fichas de energía, tiene que tomar %future de cualquier color para tener 4 de nuevo.",
        shareTextTitle: "Juego Robotory!",
        shareTextText: "¡Ven a jugar a Robotory conmigo!",
        playRisk: "Quiero correr riesgos.",
        nameInput: "Introduzca un nombre...",
        ennemyDisplayVS: "VS",
        ennemyDisplayThinking: "Estoy piensando",
        genericConfirm: "Confirmar",
        youWon: "Usted ha ganado!",
        youLost: "Usted ha perdido!",
        tutorialText1: "Elige un color y haz clic en una casilla para colocar una pieza.",
        tutorialText2: "Perfecto!",
        tutorialText3: "Hay tres robots en el tablero, y los robots sólo se mueven en las cajas con una pieza de su color.",
        tutorialText4: "...excepto el robot rojo que funciona con piezas de todos los colores.",
        tutorialText5: "¡Muevamos un robot! Haga clic en uno de los robots y haga clic en las fichas una por una para crear un 'trayecto' y haga clic en confirmar.",
        tutorialText6: "Estupendo!",
        tutorialText7: "Tienes que tener los robots de tu lado que siempre está abajo (a menos que juegues fuera de línea).",
        tutorialText8: "Sólo puede mantener 4 piezas que no son colocadas al mismo tiempo.",
        tutorialText9: "Cuando tengas 3 piezas o menos, puedes recargar las piezas desde la reserva que no es ilimitada.",
        tutorialText10: "En la parte superior se puede ver la reserva, y bajo su nombre se puede ver sus peones no colocados.",
        tutorialText11: "El juego se acaba cuando un jugador toma la última pieza de energía de un color durante una recarga de la reserva. El ganador es el que tiene más robots.",
        tutorialText12: "El tutorial está terminado, usted puede jugar en línea o fuera de línea con personas físicamente a su lado.",
        tutorialYou: "Ustéd",
        tutorialTeacher: "Profesor",
        mainMenuUpdateBtn: "Actualizar",
        updateDesc: "Una actualización está disponible",
        madeBy: "Escrito por Cazeip",
        lightName: "Claro",
        darkName: "Oscuro",
        nameInputDesc: "Este nombre será mostrado a cualquier otro jugador que jugará contra ti.",
        sounds: "Sonidos",
        soundsDesc: "Si esta opción está activada, oirá unos sonidos cuando jugará.",
        installBtn: "Instalar",
    },
    ar_SA:{

    },
};
//First one is the top, second one is the left
const positionInBoardById = [
    [8.5, 50],
    [16.5, 36.4],
    [16.5, 63.4],
    [25.5, 22.7],
    [25.5, 50],
    [25.5, 77],
    [33.5, 36.4],
    [33.5, 63.4],
    [41.5, 22.7],
    [41.5, 50],
    [41.5, 77],
    [49.5, 36.4],
    [49.5, 63.4],
    [58.5, 22.7],
    [58.5, 50],
    [58.5, 77],
    [66.5, 36.4],
    [66.5, 63.4],
    [74.5, 22.7],
    [74.5, 50],
    [74.5, 77],
    [82.8, 36.4],
    [82.8, 63.4],
    [91.8, 50],
];
let neighbours = [
    [1, 2, 4],
    [3, 6, 4, 0],
    [0, 4, 7, 5],
    [1, 6, 8],
    [0, 1, 2, 6, 7, 9],
    [2, 7, 10],
    [1, 3, 4, 8, 9, 11],
    [2, 4, 5, 9, 10, 12],
    [3, 6, 11, 13],
    [4, 6, 7, 11, 12, 14],
    [5, 7, 12, 15],
    [6, 8, 9, 13, 14, 16],
    [7, 9, 10, 14, 15, 17],
    [8, 11, 16, 18],
    [9, 11, 12, 16, 17, 19],
    [10, 12, 17, 20],
    [11, 13, 14, 18, 19, 21],
    [12, 14, 15, 19, 20, 22],
    [13, 16, 21],
    [14, 16, 17, 21, 22, 23],
    [15, 17, 22],
    [16, 18, 19, 23],
    [17, 19, 20, 23],
    [19, 21, 22],
];

Array.prototype.remove = function () {
    var what,
        a = arguments,
        L = a.length,
        ax;
    while (L && this.length) {
        what = a[--L];
        while ((ax = this.indexOf(what)) !== -1) {
            this.splice(ax, 1);
        }
    }
    return this;
};
let menusStack = [];
class BrowserDetector {
    constructor() {
        (this.browser = {}), (this.unsupportedBrowsers = { Chrome: 70, Firefox: 60, IE: 10, Edge: 15, Opera: 50, Safari: 12 }), this._detectBrowser();
    }
    _detectBrowser() {
        var e, r, s;
        this.browser =
            ((r = navigator.userAgent),
                (s = r.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || []),
                /trident/i.test(s[1])
                    ? { name: "IE", version: (e = /\brv[ :]+(\d+)/g.exec(r) || [])[1] || "" }
                    : "Chrome" === s[1] && null != (e = r.match(/\b(OPR|Edge)\/(\d+)/))
                    ? { name: e[1].replace("OPR", "Opera"), version: e[2] }
                    : ((s = s[2] ? [s[1], s[2]] : [navigator.appName, navigator.appVersion, "-?"]), null != (e = r.match(/version\/(\d+)/i)) && s.splice(1, 1, e[1]), { name: s[0], version: s[1] }));
    }
    get isIE() {
        return "IE" === this.browser.name;
    }
    get isEdge() {
        return "Edge" === this.browser.name;
    }
    get isMicrosoft() {
        return this.isIE || this.isEdge;
    }
    get isFirefox() {
        return "Firefox" === this.browser.name;
    }
    get isChrome() {
        return "Chrome" === this.browser.name;
    }
    get isSafari() {
        return "Safari" === this.browser.name;
    }
    get isAndroid() {
        return /Android/i.test(navigator.userAgent);
    }
    get isBlackBerry() {
        return /BlackBerry/i.test(navigator.userAgent);
    }
    get isWindowsMobile() {
        return /IEMobile/i.test(navigator.userAgent);
    }
    get isIOS() {
        return /iPhone|iPad|iPod/i.test(navigator.userAgent);
    }
    get isMobile() {
        return this.isAndroid || this.isBlackBerry || this.isWindowsMobile || this.isIOS;
    }
    isSupported() {
        return !!(this.unsupportedBrowsers.hasOwnProperty(this.browser.name) && +this.browser.version > this.unsupportedBrowsers[this.browser.name]);
    }
}
class w {
	static get availableSounds() {
		return ["game-end", "game-start", "move", "robot-move", "mousedown", "mouseup", "win"]
	}
	static get allowWithoutUserEventSounds() {
        return ["game-end", "game-start", "move", "robot-move", "mousedown", "mouseup", "win"]
	}
	constructor() {
		window.AudioContext = window.AudioContext || window.webkitAudioContext,
			this.supported = !!AudioContext,
		this.supported && (this.ctx = new AudioContext,
			this.sounds = {},
			this.enabled = !0,
			this.ctx.onstatechange = (() => {
				this.onCtxStatechange()
			}),
			this.boundUserEvent = this.userEvent.bind(this),
			this.addedUserEventListeners = !1,
			this.onCtxStatechange())
	}
	init() {
		if (this.supported)
			for (let t of w.availableSounds)
				this.sounds[t] = new E(t, this.ctx)
	}
	onCtxStatechange() {
		this.supported && ("suspended" == this.ctx.state ? this.addUserEventListeners() : "running" == this.ctx.state && this.removeUserEventListeners())
	}
	addUserEventListeners() {
		this.supported && (this.addedUserEventListeners || (window.addEventListener("touchstart", this.boundUserEvent),
			window.addEventListener("touchend", this.boundUserEvent),
			window.addEventListener("click", this.boundUserEvent),
			this.addedUserEventListeners = !0))
	}
	removeUserEventListeners() {
		this.supported && this.addedUserEventListeners && (window.removeEventListener("touchstart", this.boundUserEvent),
			window.removeEventListener("touchend", this.boundUserEvent),
			window.removeEventListener("click", this.boundUserEvent),
			this.addedUserEventListeners = !1)
	}
	userEvent() {
		this.supported && this.ctx.resume()
	}
	playSound(t, e) {
		if (!this.supported)
			return;
		if (!this.enabled)
			return;
		if ("running" != this.ctx.state && -1 == w.allowWithoutUserEventSounds.indexOf(t))
			return;
		let i = this.sounds[t];
		i && i.play(e)
	}
}
class E {
	constructor(t, e) {
		this.name = t,
			this.ctx = e,
			this.loaded = !1,
			this.buffer = null,
			this.load()
	}
	load() {
		let t = "./sounds/" + this.name + ".mp3?v=" + "20"
			, e = new XMLHttpRequest;
		e.open("GET", t, !0),
			e.responseType = "arraybuffer",
			e.onload = (()=>{
					this.ctx.decodeAudioData(e.response, t=>{
							this.loaded = !0,
								this.buffer = t
						}
					)
				}
			),
			e.send()
	}
	play(t) {
		if (!this.loaded)
			return;
		let e = this.ctx.createBufferSource();
		e.buffer = this.buffer,
		t && t > 0 && e.playbackRate.setValueAtTime(t, this.ctx.currentTime),
			e.connect(this.ctx.destination),
			e.start()
	}
}
for (var i = 0; i < document.getElementsByClassName("mainMenuButtons").length; i++) {
	document.getElementsByClassName("mainMenuButtons")[i].onmousedown = function (){sfx.playSound("mouseup");sfx.userEvent();}
	document.getElementsByClassName("mainMenuButtons")[i].onmouseup = function (){
		setTimeout(function () {
			sfx.playSound("mousedown");
		},150);
	}
}
function getIndexDOM(child){
    let i = 0;
    while( (child = child.previousSibling) != null )
        i++;
    return i;
}
function load() {
    if (localStorage["name"] === undefined || localStorage["name"] == null) {
        localStorage["name"] = "";
    }
    
    if (localStorage["lang"] === undefined || localStorage["lang"] == null) {
        if(/^fr\b/.test(navigator.language)){
            localStorage["lang"] = "fr_FR";
        }else if(/^es\b/.test(navigator.language)){
            localStorage["lang"] = "es_ES";
        } else localStorage["lang"] = "en_GB";
    }
    lang = localStorage["lang"];

    changeLanguageBtn(lang);
    if (!(window.localStorage["recentGames"] === undefined || window.localStorage["recentGames"] === null)) {
        if (JSON.parse(window.localStorage["recentGames"]).length !== 0) {
            updateRecentGames();
        }
    } else {
        window.localStorage["recentGames"] = JSON.stringify([]);
    }
    resizeUpdate();
    let allElements = document.getElementsByTagName("*");
    for (let i = 0; i < allElements.length; i++) {
        if (allElements[i].tagName == "INPUT") break;
        allElements[i].classList.add("disableSelect");
    }
    if (testIfTouch()) {
        let allElements = document.getElementsByTagName("*");
        for (let i = 0; i < allElements.length; i++) {
            allElements[i].classList.add("touchDevice");
        }
    }
    if (!navigator.share) {
        document.getElementById("shareButton").style.display = "none";
    }

    document.getElementById("nameTextInput").value = localStorage["name"];
    if (window.location.hash.charAt(0) == "#") {
        socket.emit("joinroom", { GUID: localStorage["GUID"], roomId: window.location.hash.substr(1), name: localStorage["name"] });
        openMenu("loader");
    } else if (!new BrowserDetector().isSupported()) {
        openMenu("unsupported");
        openDarkerBg();
    } else {
        openMenu("centerMainMenu");
        openDarkerBg();
        //openVsDisplay("ennemyDisplay");
    }
    //setInterval(generateBackgroundParticles, 100);
    (sfx = new w).init();
    if (localStorage["sounds"] === undefined || localStorage["sounds"] == null) {
        localStorage["sounds"] = "true";
    }
    parseSVGs();
    if(JSON.parse(localStorage.sounds) == false){
        sfx.enabled = false;
    }
    window.addEventListener("beforeinstallprompt", t => {
        savedInstallPromptEvent = t,
        t.preventDefault(),
        shouldShowInstallButton = !0
        document.getElementById('installMainMenuBtn').style.display = "";
    });
}
function clickInstall(){
    savedInstallPromptEvent.prompt(),
    savedInstallPromptEvent.userChoice.then(t=>{
        "accepted" === t.outcome && (shouldShowInstallButton = !1,
                document.getElementById('installMainMenuBtn').style.display = "none")
     }
    )
}
function toggleSounds(){
    let soundIcon = document.getElementById('soundIcon');
    if (localStorage["sounds"] === undefined || localStorage["sounds"] == null || JSON.parse(localStorage.sounds) == true) {
        localStorage["sounds"] = "false";
        sfx.enabled = false;
        soundIcon.style.backgroundImage = `url(${forImage("soundOff")})`;
    }else{
        localStorage["sounds"] = "true";
        sfx.enabled = true;
        soundIcon.style.backgroundImage = `url(${forImage("soundOn")})`;
    }
}
function applyTranslation() {
    for (let i = 0; i < document.getElementsByTagName("*").length; i++) {
        if (document.getElementsByTagName("*")[i].getAttribute("data-i18n") != null) {
            if (allLanguages[lang][document.getElementsByTagName("*")[i].getAttribute("data-i18n")] !== undefined) {
                document.getElementsByTagName("*")[i].innerHTML = allLanguages[lang][document.getElementsByTagName("*")[i].getAttribute("data-i18n")];
            }
        } else if (document.getElementsByTagName("*")[i].getAttribute("data-i18n-custom") != null) {
            let elmntCustomTag = document.getElementsByTagName("*")[i].getAttribute("data-i18n-custom");
            let splitElement = elmntCustomTag.split(":");
            if (allLanguages[lang][splitElement[1]] !== undefined) {
                document.getElementsByTagName("*")[i].setAttribute(splitElement[0], allLanguages[lang][splitElement[1]]);
            }
        }
    }
}
function changeLanguageBtn(langChosen) {
    let langBtns = document.getElementsByClassName("langBtn");
    for (let i = 0; i < langBtns.length; i++) {
        langBtns[i].innerText = "";
    }
    document.getElementById(`languageChange${langChosen}`).innerText = ".";
    lang = langChosen;
    localStorage["lang"] = lang;
    applyTranslation();
}
function changeLanguage(){
    openMenu("langMenu");
}
function closeChangeLanguage(){
    closeMenu("langMenu");
}
function notification(text) {
    let n = document.createElement("DIV");
    let z = document.createTextNode(text);
    n.classList.add("topNotification", "rightNotif");
    n.appendChild(z);

    document.getElementById("newNotifs").prepend(n);
    setTimeout(function(){
        let x = document.getElementById("newNotifs");
        x.removeChild(x.lastChild);
    },5000);
}
function updateRecentGames() {
    document.getElementById("recentGamesMenuBtn").style.display = "block";
    document.getElementById("recentGamesList").innerHTML = "";
    let j = JSON.parse(window.localStorage["recentGames"]);
    if (j.length === 0) document.getElementById("recentGamesMenuBtn").style.display = "none";
    for (let i = 0; i < j.length; i++) {
        let x = document.createElement("a");
        x.classList.add("mainMenuButtons");
        x.innerText = allLanguages[lang]["recentGamesMenuAgainst"].replace("%player", useableName(j[i].name));
        x.setAttribute("onclick", `recentGame(${j[i].id})`);
        document.getElementById("recentGamesList").appendChild(x);
    }
}
function testIfTouch() {
    return Boolean('ontouchstart' in window || navigator.msMaxTouchPoints);
}
function isNeighbour(id1, id2) {
    for (let i = 0; i < neighbours[id1].length; i++) {
        if (neighbours[id1][i] === id2) return true;
    }
    return false;
}
function openMenu(id) {
    resizeUpdate();
    document.getElementById(id).style.display = "inline-block";
    menusStack.push(id);
    setTimeout(() => {
        document.getElementById(id).style.opacity = "1";
        document.getElementById(id).style.transform = "translate(-50%,-50%)";
    }, 100);
    for (let i = 0; i < menusStack.length; i++) {
        document.getElementById(menusStack[i]).style.zIndex = i + 100;
    }
}
function closeMenu(id) {
    resizeUpdate();
    document.getElementById(id).style.opacity = "0";
    document.getElementById(id).style.transform = "translate(-50%,-60%)";
    menusStack.remove(id);
    setTimeout(() => {
        document.getElementById(id).style.display = "none";
    }, 500);
    for (let i = 0; i < menusStack.length; i++) {
        document.getElementById(menusStack[i]).style.zIndex = i + 100;
    }
}
function openVsDisplay(id) {
    document.getElementById(id).style.display = "block";
    setTimeout(() => {
        document.getElementById(id).style.opacity = "1";
        document.getElementById(id).style.transform = "translate(-50%,0) scale(1)";
        resizeUpdate();
    }, 100);
}
let timeout;
function closeVsDisplay(id) {
    document.getElementById(id).style.opacity = "0";
    document.getElementById(id).style.transform = "translate(-50%,0) scale(0)";
    setTimeout(() => {
        document.getElementById(id).style.display = "none";
        resizeUpdate();
    }, 500);
}
function openSettingsMenu() {
    openMenu("centerSettingsMenu");
    document.getElementById("centerMainMenu").style.filter = "brightness(0.7)";
}
function closeSettingsMenu() {
    closeMenu("centerSettingsMenu");
    document.getElementById("centerMainMenu").style.filter = "brightness(1)";
}
function openPlayMenu() {
    closeMenu("centerMainMenu");
    setTimeout(() => openMenu("playMenu"), 500);
}
function closePlayMenu() {
    closeMenu("playMenu");
    setTimeout(() => openMenu("centerMainMenu"), 500);
}
function closeCenterShareGameMenu() {
    closeMenu("centerShareGameMenu");
    window.location.hash = "#";
    document.getElementsByClassName("gameUI")[0].style.display = "none";
    document.getElementById("background").style.display = "block";
    setTimeout(() => openMenu("centerMainMenu"), 500);
}
function openRecentGamesMenu() {
    closeMenu("centerMainMenu");
    openMenu("recentGamesMenu");
}

function copyClip(id) {
    var copyText = document.getElementById(id);

    copyText.select();
    copyText.setSelectionRange(0, 99999);
    document.execCommand("copy");
    //Deselection
    if (window.getSelection) {
        window.getSelection().removeAllRanges();
    } else if (document.selection) {
        document.selection.empty();
    }
}
function rematchBtn() {
    if(offlineGameType){
        window.localStorage.removeItem("offlineGame");
        offlineGame();
        closeMenu("winnerMenu");
    }
}
function offlineGame() {
    offlineGameType = true;
    if(localStorage["offlineGame"] == undefined || localStorage["offlineGame"] == null){
        localStorage["offlineGame"] = JSON.stringify({
            p1: {pawns: {white:2,black:2}, name: "Light", turn: true, Oarea: "bottom"},
            p2: {pawns: {white:2,black:2}, name: "Dark", turn: false, Oarea: "top"},
            pawnReserve: {white:10,black:10},
            gameBoard: [null,null,null,null,null,null,null,null,null,"blackBot",null,"whiteBot","redBot",null,null,null,null,null,null,null,null,null,null,null],
            ended: false
        });
        sfx.playSound('game-start');
    }
    fetchGameState(JSON.parse(localStorage["offlineGame"]));
    document.getElementById("background").style.display = "none";
    document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
    closeMenu("playMenu");
    if (!JSON.parse(localStorage["offlineGame"]).ended) closeDarkerBg();

    openVsDisplay("ennemyDisplay");
    openVsDisplay("reserveInfo");
    resizeUpdate();
}
function onlineGame() {
    if (socket.connected) {
        beforeTime = Math.floor(new Date() / 1000);

        socket.emit("createroom", { GUID: localStorage["GUID"], name: localStorage["name"] });
        closeMenu("playMenu");
        openMenu("loader");
    } else {
        notification(allLanguages[lang]["serverError"]);
    }
}
/*window.onbeforeunload = function(){
    socket.disconnect();
};*/
window.onclick = resizeUpdate;
window.onresize = resizeUpdate;

function resizeUpdate(event) {
    let boardHeight = document.getElementsByClassName("gameBoard")[0].clientHeight;
    let windowHeight = window.innerHeight;
    let boardWidth = document.getElementsByClassName("gameBoard")[0].clientWidth;
    let windowWidth = window.innerWidth;
    /*let padding = document.getElementById("yourTurnInfo").clientHeight + document.getElementById("ennemyDisplay").clientHeight + document.getElementById("placePawnMenu").clientHeight + document.getElementById("moveBotMenu").clientHeight;*/
    let padding = 100;
    if (windowWidth < windowHeight) {
        document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(1)`;
        let halfUINodes = document.getElementsByClassName("halfUI");
        for (let i = 0; i < halfUINodes.length; i++) {
            halfUINodes[i].style.display = "block";
            halfUINodes[i].style.width = "100%";
            halfUINodes[i].style.float = "none";
        }
        document.getElementsByClassName("gameBoardContainer")[0].style.width = "100%";

        if ((boardHeight * windowWidth) / ((boardWidth * 384) / 537) > windowHeight - padding) {
            let scaleCoef = (windowHeight - padding) / boardHeight;
            document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(${scaleCoef})`;
            if (area === "top") {
                document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(${scaleCoef}) rotate(180deg) translate(0,-100%)`;
                document.getElementsByClassName("leftVS")[0].classList.add("darkVS");
                document.getElementsByClassName("rightVS")[0].classList.add("lightVS");
                document.getElementsByClassName("leftVS")[0].classList.remove("lightVS");
                document.getElementsByClassName("rightVS")[0].classList.remove("darkVS");
            }else{
                document.getElementsByClassName("leftVS")[0].classList.add("lightVS");
                document.getElementsByClassName("rightVS")[0].classList.add("darkVS");
                document.getElementsByClassName("leftVS")[0].classList.remove("darkVS");
                document.getElementsByClassName("rightVS")[0].classList.remove("lightVS");
            }
        } else if ((boardWidth * 384) / 537 < windowWidth) {
            let scaleCoef = windowWidth / ((boardWidth * 384) / 537);
            document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(${scaleCoef})`;
            if (area === "top") {
                document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(${scaleCoef}) rotate(180deg) translate(0,-100%)`;
                document.getElementsByClassName("leftVS")[0].classList.add("darkVS");
                document.getElementsByClassName("rightVS")[0].classList.add("lightVS");
                document.getElementsByClassName("leftVS")[0].classList.remove("lightVS");
                document.getElementsByClassName("rightVS")[0].classList.remove("darkVS");
            }else{
                document.getElementsByClassName("leftVS")[0].classList.add("lightVS");
                document.getElementsByClassName("rightVS")[0].classList.add("darkVS");
                document.getElementsByClassName("leftVS")[0].classList.remove("darkVS");
                document.getElementsByClassName("rightVS")[0].classList.remove("lightVS");
            }
        }
    } else {
        document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(1)`;
        if (area === "top") {
            document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(1) rotate(180deg) translate(0,-100%)`;
            document.getElementsByClassName("leftVS")[0].classList.add("darkVS");
            document.getElementsByClassName("rightVS")[0].classList.add("lightVS");
            document.getElementsByClassName("leftVS")[0].classList.remove("lightVS");
            document.getElementsByClassName("rightVS")[0].classList.remove("darkVS");
        }else{
            document.getElementsByClassName("leftVS")[0].classList.add("lightVS");
            document.getElementsByClassName("rightVS")[0].classList.add("darkVS");
            document.getElementsByClassName("leftVS")[0].classList.remove("darkVS");
            document.getElementsByClassName("rightVS")[0].classList.remove("lightVS");
        }
        let halfUINodes = document.getElementsByClassName("halfUI");
        for (let i = 0; i < halfUINodes.length; i++) {
            halfUINodes[i].style.display = "inline-block";
            halfUINodes[i].style.width = "50%";
            halfUINodes[i].style.float = "left";
        }
        document.getElementsByClassName("gameBoardContainer")[0].style.width = "50%";
    }
}
function openAvailableActionsMenu() {
    openDarkerBg();
    openMenu("availableActionsMenu");
    document.getElementsByClassName("darkerBg")[0].addEventListener("click", closeAvailableActionsMenu);
}
function closeAvailableActionsMenu() {
    closeDarkerBg();
    closeMenu("availableActionsMenu");
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", closeAvailableActionsMenu);
}
function openReloadEnergyMenu() {
    openMenu("reloadEnergyMenu");
    closeMenu("availableActionsMenu");
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", closeAvailableActionsMenu);
    document.getElementsByClassName("darkerBg")[0].addEventListener("click", cancelReloadPawnsButton);
}
function cancelReloadPawnsButton() {
    closeMenu("reloadEnergyMenu");
    openMenu("availableActionsMenu");
    document.getElementsByClassName("darkerBg")[0].addEventListener("click", closeAvailableActionsMenu);
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
    reload = { white: 0, black: 0 };
    document.getElementById("pawnsReloadContainer").innerHTML = "";
    document.getElementById("reloadPawnsShowNew").innerText = "";
    document.getElementById("confirmReloadButton").style.display = "none";
    document.getElementById("reserveWhite").innerText = reserve.white;
    document.getElementById("reserveBlack").innerText = reserve.black;
}
function placingPawnChange(d) {
    placingPawn = d;
    let buttons = document.getElementsByClassName("pawnPlaceButton");
    for (var i = 0; i < buttons.length; i++) {
        buttons[i].classList.remove("btnActive");
    }
    if (d == "whitePawn") {
        buttons[0].classList.add("btnActive");
    } else {
        buttons[1].classList.add("btnActive");
    }
}
function sendReloadValue() {
    if (!offlineGameType){
        socket.emit("reloadPawns", reload);
        reload = { white: 0, black: 0 };
        document.getElementById("reloadPawnsShowNew").innerText = "";
        document.getElementById("confirmReloadButton").style.display = "none";
        document.getElementById("pawnsReloadContainer").innerHTML = "";
        document.getElementById("reserveWhite").innerText = reserve.white;
        document.getElementById("reserveBlack").innerText = reserve.black;
        closeMenu("reloadEnergyMenu");
        openMenu("availableActionsMenu");
    }else{
        let game = JSON.parse(localStorage["offlineGame"]);
        if(game.p1.turn){
            if (game.p1.pawns.white + game.p1.pawns.black < 4) {
                if (reload.white + reload.black == 4 - game.p1.pawns.white - game.p1.pawns.black || game.pawnReserve.white - reload.white === 0 || game.pawnReserve.black - reload.black === 0) {
                    if (reload.white <= game.pawnReserve.white && reload.black <= game.pawnReserve.black) {
                        game.pawnReserve.white -= reload.white;
                        game.pawnReserve.black -= reload.black;

                        game.p1.pawns.white += reload.white;
                        game.p1.pawns.black += reload.black;

                        game.p1.turn = false;

                        closeMenu("reloadEnergyMenu");
                        closeMenu("availableActionsMenu");

                        if (game.pawnReserve.white === 0 || game.pawnReserve.black === 0) {
                            if (findWinner(game.gameBoard)) {
                                document.getElementById("winnerName").innerText = game.p1.name + " won!";

                                openMenu("winnerMenu");
                                document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
                                openDarkerBg();
                                document.getElementById("yourTurnInfo").style.display = "none";
                            } else {
                                document.getElementById("winnerName").innerText = game.p2.name + " won!";

                                openMenu("winnerMenu");
                                document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
                                openDarkerBg();
                                document.getElementById("yourTurnInfo").style.display = "none";
                            }
                            game.ended = true;
                            sfx.playSound('game-end');
                        } else {
                            closeDarkerBg();
                            game.p2.turn = true;
                        }
                    }
                }
            }
        }else if (game.p2.turn) {
            if (game.p2.pawns.white + game.p2.pawns.black < 4) {
                if (reload.white + reload.black == 4 - game.p2.pawns.white - game.p2.pawns.black || game.pawnReserve.white - reload.white === 0 || game.pawnReserve.black - reload.black === 0) {
                    if (reload.white <= game.pawnReserve.white && reload.black <= game.pawnReserve.black) {
                        game.pawnReserve.white -= reload.white;
                        game.pawnReserve.black -= reload.black;

                        game.p2.pawns.white += reload.white;
                        game.p2.pawns.black += reload.black;

                        game.p2.turn = false;

                        closeMenu("reloadEnergyMenu");
                        closeMenu("availableActionsMenu");

                        if (game.pawnReserve.white === 0 || game.pawnReserve.black === 0) {
                            if (findWinner(game.gameBoard)) {
                                document.getElementById("winnerName").innerText = game.p1.name + " won!";

                                openMenu("winnerMenu");
                                document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
                                openDarkerBg();
                                document.getElementById("yourTurnInfo").style.display = "none";
                            } else {
                                document.getElementById("winnerName").innerText = game.p2.name + " won!";

                                openMenu("winnerMenu");
                                document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
                                openDarkerBg();
                                document.getElementById("yourTurnInfo").style.display = "none";
                            }
                            game.ended = true;
                        } else {
                            closeDarkerBg();
                            game.p1.turn = true;
                        }
                    }
                }
            }
        }

        fetchGameState(game);
        localStorage["offlineGame"] = JSON.stringify(game);
        reload = { white: 0, black: 0 };
    }
}
function findWinner(gameBoard){
    let p1Count = 0, p2Count = 0;
    for (let i = 0; i < gameBoard.length; i++) {
        if(gameBoard[i] === "blackBot" || gameBoard[i] === "whiteBot" || gameBoard[i] === "redBot"){
            if(i <= 9 || i === 13 || i === 11){
                p2Count++;
            }else{
                p1Count++;
            }
        }
    }
    //True is p1, false is p2
    return p1Count > p2Count;
}
function addToReload(p) {
    if (reload.white + reload.black === toreload) return;
    if (isNaN(reload.white)|| isNaN(reload.black)) cancelReloadPawnsButton();
    if (p === "whitePawn") {
        if (parseInt(document.getElementById("reserveWhite").innerText) === 0) return;
        else {
            document.getElementById("reserveWhite").innerText--;
            reload.white++;
        }
    } else if (p === "blackPawn") {
        if (parseInt(document.getElementById("reserveBlack").innerText) === 0) return;
        else {
            document.getElementById("reserveBlack").innerText--;
            reload.black++;
        }
    }
    let dot = document.createElement("div");
    dot.classList.add("pawnDot");
    dot.classList.add("reloadPawnDot");
    if (p === "whitePawn") dot.classList.add("whitePawnDot");

    document.getElementById("reloadPawnsShowNew").innerText = allLanguages[lang]["energyPawnsReloadDescritpion"];
    document.getElementById("confirmReloadButton").style.display = "block";
    document.getElementById("pawnsReloadContainer").appendChild(dot);
}
function closeRecentGamesMenu() {
    closeMenu("recentGamesMenu");
    openMenu("centerMainMenu");
}
function fetchGameState(gameState){
    let you, ennemy;
    if (tutorial){
        document.getElementById("yourName").innerText = useableName(gameState.p1.name);
        document.getElementById("ennemyName").innerText = useableName(gameState.p2.name);

        document.getElementById("myPawns").innerHTML = "";
        document.getElementById("ennemyPawns").innerHTML = "";
        for (let i = 0; i < gameState.p1.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p1.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p2.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p2.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        document.getElementById("placePawnWhite").innerText = gameState.p1.pawns.white;
        document.getElementById("placePawnBlack").innerText = gameState.p1.pawns.black;
        let tableOverlay = document.getElementsByClassName("tableOverlay")[0];
        tableOverlay.innerHTML = "";
        for (let i = 0; i < gameState.gameBoard.length; i++) {
            let x = document.createElement("img");
            x.classList.add("boardElement");
            x.classList.add("botBoardElement");
            if (gameState.gameBoard[i] == "blackBot") {
                x.setAttribute("src", forImage("BlackRobot"));
                x.id = "blackBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whiteBot") {
                x.setAttribute("src", forImage("WhiteRobot"));
                x.id = "whiteBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "redBot") {
                x.setAttribute("src", forImage("RedRobot"));
                x.id = "redBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "blackPawn") {
                x.setAttribute("src", forImage("blackPawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whitePawn") {
                x.setAttribute("src", forImage("whitePawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            }
        }
        if (tutorialState.step === 0){
            document.getElementById("cancelPlacePawn").remove();
        }
    }else if (offlineGameType){
        document.title = `Robotory - ${allLanguages[lang]["offline"]}`;
        document.getElementById("yourName").innerText = useableName(gameState.p1.name);
        document.getElementById("ennemyName").innerText = useableName(gameState.p2.name);

        clearHighlightedCells();
        movingBot = false;
        placingPawn = false;
        gameBoard = gameState.gameBoard;


        if (gameState.p1.turn){
            you = gameState.p1;
            ennemy = gameState.p2;
        }else{
            you = gameState.p2;
            ennemy = gameState.p1;
        }
        document.getElementById("thinking").style.display = "none";
        if (you.turn) {
            document.getElementById("yourTurnInfo").style.display = "block";
        }else{
            document.getElementById("yourTurnInfo").style.display = "none";
        }
        document.getElementById("myPawns").innerHTML = "";
        document.getElementById("ennemyPawns").innerHTML = "";
        for (let i = 0; i < gameState.p1.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p1.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p2.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p2.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        document.getElementById("placePawnWhite").innerText = you.pawns.white;
        document.getElementById("placePawnBlack").innerText = you.pawns.black;

        let tableOverlay = document.getElementsByClassName("tableOverlay")[0];
        tableOverlay.innerHTML = "";
        for (let i = 0; i < gameState.gameBoard.length; i++) {
            let x = document.createElement("img");
            x.classList.add("boardElement");
            x.classList.add("botBoardElement");
            if (gameState.gameBoard[i] == "blackBot") {
                x.setAttribute("src", forImage("BlackRobot"));
                x.id = "blackBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whiteBot") {
                x.setAttribute("src", forImage("WhiteRobot"));
                x.id = "whiteBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "redBot") {
                x.setAttribute("src", forImage("RedRobot"));
                x.id = "redBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "blackPawn") {
                x.setAttribute("src", forImage("blackPawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whitePawn") {
                x.setAttribute("src", forImage("whitePawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            }
        }
        reserve = gameState.pawnReserve;

        document.getElementById("reserveWhite").innerText = gameState.pawnReserve.white;
        document.getElementById("reserveBlack").innerText = gameState.pawnReserve.black;
        document.getElementById("topReserveWhite").innerText = gameState.pawnReserve.white;
        document.getElementById("topReserveBlack").innerText = gameState.pawnReserve.black;
        document.getElementById("textReloadPawns").innerText = allLanguages[lang]["energyPawnsReloadAction"].replace("%actual", you.pawns.white + you.pawns.black).replace("%future", 4 - you.pawns.white - you.pawns.black);
        document.getElementById("yourTurnDesc").innerText = allLanguages[lang]["yourTurnDescOffline"].replace("%name", useableName(you.name));
        document.getElementById("pawnsReloadContainer").innerHTML = "";

        document.getElementById("reloadPawnsShowNew").innerText = "";
        document.getElementById("confirmReloadButton").style.display = "none";

        toreload = 4 - you.pawns.white - you.pawns.black;

        if (you.pawns.white + you.pawns.black === 4) {
            document.getElementById("reloadEnergyOptionButton").classList.add("disabledOptionButton");
            document.getElementById("placePawnOptionButton").classList.remove("disabledOptionButton");
        } else if (you.pawns.white + you.pawns.black === 0) {
            document.getElementById("placePawnOptionButton").classList.add("disabledOptionButton");
        } else {
            document.getElementById("reloadEnergyOptionButton").classList.remove("disabledOptionButton");
            document.getElementById("placePawnOptionButton").classList.remove("disabledOptionButton");
        }

        let buttons = document.getElementsByClassName("pawnPlaceButton");
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].classList.remove("btnActive");
        }
        if (gameState.ended) {
            openMenu("winnerMenu");
            openDarkerBg();
        }
    }else{
        movingBot = false;
        document.title = `Robotory - ${gameState.id}`;
        clearHighlightedCells();
        if (gameState.p1.you) {
            you = gameState.p1;
            ennemy = gameState.p2;
        } else {
            you = gameState.p2;
            ennemy = gameState.p1;
        }

        let recentGames = JSON.parse(localStorage["recentGames"]);
        for (let i = 0; i < recentGames.length; i++) {
            if (recentGames[i].id === gameState.id) {
                recentGames.splice(i, 1);
            }
        }
        recentGames.push({id: gameState.id, name: ennemy.name});

        localStorage["recentGames"] = JSON.stringify(recentGames);

        if (ennemy.turn) document.getElementById("thinking").style.display = "inline-block";
        else document.getElementById("thinking").style.display = "none";

        gameBoard = gameState.gameBoard;
        area = you.area;

        if (you.turn) {
            document.getElementById("yourTurnInfo").style.display = "block";
        } else {
            document.getElementById("yourTurnInfo").style.display = "none";
        }
        placingPawn = false;
        document.getElementById("yourName").innerText = useableName(you.name);
        document.getElementById("ennemyName").innerText = useableName(ennemy.name);

        document.getElementById("myPawns").innerHTML = "";
        document.getElementById("ennemyPawns").innerHTML = "";
        for (let i = 0; i < you.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < you.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < ennemy.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        for (let i = 0; i < ennemy.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        document.getElementById("placePawnWhite").innerText = you.pawns.white;
        document.getElementById("placePawnBlack").innerText = you.pawns.black;
        //Clear displayed game board
        let tableOverlay = document.getElementsByClassName("tableOverlay")[0];
        tableOverlay.innerHTML = "";
        for (let i = 0; i < gameState.gameBoard.length; i++) {
            let x = document.createElement("img");
            if (area === "top") {
                x.classList.add("botTopArea");
            }
            x.classList.add("boardElement");
            x.classList.add("botBoardElement");
            if (gameState.gameBoard[i] == "blackBot") {
                x.setAttribute("src", forImage("BlackRobot"));
                x.id = "blackBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whiteBot") {
                x.setAttribute("src", forImage("WhiteRobot"));
                x.id = "whiteBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "redBot") {
                x.setAttribute("src", forImage("RedRobot"));
                x.id = "redBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "blackPawn") {
                x.setAttribute("src", forImage("blackPawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whitePawn") {
                x.setAttribute("src", forImage("whitePawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            } else {

            }
        }
        reserve = gameState.pawnReserve;
        document.getElementById("reserveWhite").innerText = gameState.pawnReserve.white;
        document.getElementById("reserveBlack").innerText = gameState.pawnReserve.black;
        document.getElementById("topReserveWhite").innerText = gameState.pawnReserve.white;
        document.getElementById("topReserveBlack").innerText = gameState.pawnReserve.black;
        document.getElementById("textReloadPawns").innerText = allLanguages[lang]["energyPawnsReloadAction"].replace("%actual", you.pawns.white + you.pawns.black).replace("%future", 4 - you.pawns.white - you.pawns.black);
        document.getElementById("yourTurnDesc").innerText = allLanguages[lang]["yourTurnDesc"];
        document.getElementById("pawnsReloadContainer").innerHTML = "";

        document.getElementById("reloadPawnsShowNew").innerText = "";
        document.getElementById("confirmReloadButton").style.display = "none";

        toreload = 4 - you.pawns.white - you.pawns.black;

        if (you.pawns.white + you.pawns.black === 4) {
            document.getElementById("reloadEnergyOptionButton").classList.add("disabledOptionButton");
            document.getElementById("placePawnOptionButton").classList.remove("disabledOptionButton");
        } else if (you.pawns.white + you.pawns.black === 0) {
            document.getElementById("placePawnOptionButton").classList.add("disabledOptionButton");
        } else {
            document.getElementById("reloadEnergyOptionButton").classList.remove("disabledOptionButton");
            document.getElementById("placePawnOptionButton").classList.remove("disabledOptionButton");
        }

        let buttons = document.getElementsByClassName("pawnPlaceButton");
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].classList.remove("btnActive");
        }
        if (gameState.ended) {
            openMenu("winnerMenu");
            openDarkerBg();
        }
    }
}
function placePawnOption() {
    closeMenu("availableActionsMenu");
    closeDarkerBg();
    openVsDisplay("placePawnMenu");
    document.getElementById("yourTurnInfo").style.display = "none";
}
function cancelPlacePawnOption() {
    placingPawn = false;
    openMenu("availableActionsMenu");
    openDarkerBg();
    closeVsDisplay("placePawnMenu");
    document.getElementById("yourTurnInfo").style.display = "block";
}

function clearHighlightedCells() {
    try {
        for (let i = 0; i < 24; i++) {   
            document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        }
    } catch (e) {}
}
function showIds() {
    let tableOverlay = document.getElementsByClassName("tableOverlay")[0];
    tableOverlay.innerHTML = "";
    for (let i = 0; i < 24; i++) {
        x = document.createElement("span");
        x.classList.add("boardElement");
        x.style.fontSize = "40px";
        x.innerText = i;
        x.style.top = positionInBoardById[i][0] + "%";
        x.style.left = positionInBoardById[i][1] + "%";
        tableOverlay.appendChild(x);
    }
}
function  animateRobotsTutorial(){
    let duration = 12000;

    let x = document.createElement("img");
    x.setAttribute("src", forImage("BlackRobot"));
    x.classList.add("tutorialAnimationSVG");
    document.getElementById("tutorialSVG").appendChild(x);

    setTimeout(() => {
        let x = document.createElement("img");
        x.setAttribute("src", forImage("plusIcon"));
        x.classList.add("tutorialAnimationSVG");
        document.getElementById("tutorialSVG").appendChild(x);
    }, duration / 9);
    setTimeout(() => {
        let x = document.createElement("img");
        x.setAttribute("src", forImage("blackPawn"));
        x.classList.add("tutorialAnimationSVG");
        document.getElementById("tutorialSVG").appendChild(x);
    }, duration / 9*2);

    setTimeout(() => {
        document.getElementById("tutorialSVG").innerHTML = "";
        let x = document.createElement("img");
        x.setAttribute("src", forImage("WhiteRobot"));
        x.classList.add("tutorialAnimationSVG");
        document.getElementById("tutorialSVG").appendChild(x);
    }, duration / 9*3);
    setTimeout(() => {
        let x = document.createElement("img");
        x.setAttribute("src", forImage("plusIcon"));
        x.classList.add("tutorialAnimationSVG");
        document.getElementById("tutorialSVG").appendChild(x);
    }, duration / 9*4);
    setTimeout(() => {
        let x = document.createElement("img");
        x.setAttribute("src", forImage("whitePawn"));
        x.classList.add("tutorialAnimationSVG");
        document.getElementById("tutorialSVG").appendChild(x);
    }, duration / 9*5);

    setTimeout(() => {
        document.getElementById("tutorialSVG").innerHTML = "";
        let x = document.createElement("img");
        x.setAttribute("src", forImage("RedRobot"));
        x.classList.add("tutorialAnimationSVG","tutorialAnimationSVGQuarter");
        document.getElementById("tutorialSVG").appendChild(x);
    }, duration / 3/4*8);
    setTimeout(() => {
        let x = document.createElement("img");
        x.setAttribute("src", forImage("plusIcon"));
        x.classList.add("tutorialAnimationSVG","tutorialAnimationSVGQuarter");
        document.getElementById("tutorialSVG").appendChild(x);
        x.style.width = "50px";
    }, duration / 3/4*9);
    setTimeout(() => {
        let x = document.createElement("img");
        x.setAttribute("src", forImage("whitePawn"));
        x.classList.add("tutorialAnimationSVG","tutorialAnimationSVGQuarter");
        document.getElementById("tutorialSVG").appendChild(x);
        x.style.width = "50px";
    }, duration / 3/4*10);
    setTimeout(() => {
        let x = document.createElement("img");
        x.setAttribute("src", forImage("blackPawn"));
        x.classList.add("tutorialAnimationSVG","tutorialAnimationSVGQuarter");
        document.getElementById("tutorialSVG").appendChild(x);
        x.style.width = "50px";
    }, duration / 3/4*11);
}
function boardClick(element, n) {
    if(tutorial){
        if(tutorialState.step === 0){
            if(placingPawn == "blackPawn" && tutorialState.state.gameBoard[n] == null){
                tutorialState.state.gameBoard[n] = "blackPawn";
                tutorialState.state.p1.pawns.black--;
            }else if(placingPawn == "whitePawn" && tutorialState.state.gameBoard[n] == null) {
                tutorialState.state.gameBoard[n] = "whitePawn";
                tutorialState.state.p1.pawns.white--;
            }else return;
            sfx.playSound('move');
            openWhiteCurtain();
            tutorialState.step = 1;
            document.getElementById("cancelMoveBotOption").remove();
            showFullscreenText(allLanguages[lang]["tutorialText2"],function(){
                animateRobotsTutorial();
                showFullscreenText(allLanguages[lang]["tutorialText3"],function(){
                    showFullscreenText(allLanguages[lang]["tutorialText4"],function(){
                        document.getElementById("tutorialSVG").innerHTML = "";
                        showFullscreenText(allLanguages[lang]["tutorialText5"],function(){
                            closeVsDisplay("placePawnMenu");
                            openVsDisplay("moveBotMenu");
                            tutorialState.state.gameBoard[14] = 'whitePawn';
                            tutorialState.state.gameBoard[19] = 'whitePawn';
                            tutorialState.state.gameBoard[21] = 'whitePawn';
                            tutorialState.state.gameBoard[18] = 'whitePawn';
                            fetchGameState(tutorialState.state);
                            moveTextToTop();
                            closeWhiteCurtain();
                        },false,7000);
                    },true,6000);
                },true,8000);
            }, true,2000);
            fetchGameState(tutorialState.state);
        }else if(tutorialState.step === 1){
            if (tutorialState.state.gameBoard[n] === "blackBot" || tutorialState.state.gameBoard[n] === "whiteBot" || tutorialState.state.gameBoard[n] === "redBot") {
                clearHighlightedCells();
                element.firstElementChild.classList.add("highlightedCells");
                movingBotPath.bot = tutorialState.state.gameBoard[n];
                movingBotPath.path = [n];
                document.getElementById("confirmRobotPath").style.display = "none";
            } else if (
                (tutorialState.state.gameBoard[n] === "blackPawn" && movingBotPath.bot === "blackBot") ||
                (tutorialState.state.gameBoard[n] === "whitePawn" && movingBotPath.bot === "whiteBot") ||
                ((tutorialState.state.gameBoard[n] === "blackPawn" || tutorialState.state.gameBoard[n] === "whitePawn") && movingBotPath.bot === "redBot")
            ) {
                if (isNeighbour(n, movingBotPath.path[movingBotPath.path.length - 1])) {
                    element.firstElementChild.classList.add("highlightedCells");
                    movingBotPath.path.push(n);
                    document.getElementById("confirmRobotPath").style.display = "block";
                }
            }
        }
    }else {
        if (placingPawn) {
            if (!offlineGameType) socket.emit("placingPawn", {color: placingPawn, pos: n});
            else {
                let gameState = JSON.parse(localStorage["offlineGame"]);
                if (gameState.p1.turn) {
                    if (placingPawn == "whitePawn" && gameState.p1.pawns.white >= 1) {
                        if (gameState.gameBoard[n] == null) {
                            gameState.gameBoard[n] = "whitePawn";
                            gameState.p1.pawns.white--;
                        } else return;
                    } else if (placingPawn == "blackPawn" && gameState.p1.pawns.black >= 1) {
                        if (gameState.gameBoard[n] == null) {
                            gameState.gameBoard[n] = "blackPawn";
                            gameState.p1.pawns.black--;
                        } else return;
                    } else return;
                    gameState.p1.turn = false;
                    gameState.p2.turn = true;
                } else if (gameState.p2.turn) {
                    if (placingPawn == "whitePawn" && gameState.p2.pawns.white >= 1) {
                        if (gameState.gameBoard[n] == null) {
                            gameState.gameBoard[n] = "whitePawn";
                            gameState.p2.pawns.white--;
                        } else return;
                    } else if (placingPawn == "blackPawn" && gameState.p2.pawns.black >= 1) {
                        if (gameState.gameBoard[n] == null) {
                            gameState.gameBoard[n] = "blackPawn";
                            gameState.p2.pawns.black--;
                        } else return;
                    } else return;
                    gameState.p1.turn = true;
                    gameState.p2.turn = false;
                }
                closeVsDisplay("placePawnMenu");
                fetchGameState(gameState);
                localStorage["offlineGame"] = JSON.stringify(gameState);
                sfx.playSound('move');
            }
        } else if (movingBot) {
            if (gameBoard[n] === "blackBot" || gameBoard[n] === "whiteBot" || gameBoard[n] === "redBot") {
                clearHighlightedCells();
                element.firstElementChild.classList.add("highlightedCells");
                movingBotPath.bot = gameBoard[n];
                movingBotPath.path = [n];
                document.getElementById("confirmRobotPath").style.display = "none";
            } else if (
                (gameBoard[n] === "blackPawn" && movingBotPath.bot === "blackBot") ||
                (gameBoard[n] === "whitePawn" && movingBotPath.bot === "whiteBot") ||
                ((gameBoard[n] === "blackPawn" || gameBoard[n] === "whitePawn") && movingBotPath.bot === "redBot")
            ) {
                if (isNeighbour(n, movingBotPath.path[movingBotPath.path.length - 1])) {
                    element.firstElementChild.classList.add("highlightedCells");
                    movingBotPath.path.push(n);
                    document.getElementById("confirmRobotPath").style.display = "block";
                }
            }
        }
    }
}
function updateName() {
    socket.emit("updateName", document.getElementById("nameTextInput").value);
    localStorage["name"] = document.getElementById("nameTextInput").value;
}
function randomOkEmoji(){
    let items = ["😁","😆","🤓","🤖","😸","(＾ω＾)"];
    return items[Math.floor(Math.random() * items.length)];
}
function showText(text, hideAfter, duration=5000, methodAfter){
    document.getElementsByClassName("tutorialDisplay")[0].style.display = "block";
    setTimeout(() => document.getElementsByClassName("tutorialDisplay")[0].style.opacity = "1",100);
    document.getElementsByClassName("tutorialText")[0].innerText = text;
    document.getElementsByClassName("verticalAlign")[0].style.height = `${document.getElementsByClassName("tutorialDisplay")[0].offsetHeight + 10}px`;
    if(hideAfter) setTimeout( () => document.getElementsByClassName("tutorialDisplay")[0].style.opacity = "0", duration - 400);
    setTimeout(() => {
        methodAfter();
    },duration);
}
function confirmRobotPath() {
    if(!offlineGameType && !tutorial) socket.emit("moveRobot", movingBotPath);
    else if(tutorial && tutorialState.step === 1){
        for (let i = 0; i < tutorialState.state.gameBoard.length; i++) {
            if(tutorialState.state.gameBoard[i] === movingBotPath.bot && movingBotPath.path[0] === i){
                for (let j = 0; j < movingBotPath.path.length - 1; j++) {
                    if(!((tutorialState.state.gameBoard[movingBotPath.path[j+1]]   === "blackPawn" && movingBotPath.bot === "blackBot") ||
                        (tutorialState.state.gameBoard[movingBotPath.path[j+1]]  === "whitePawn" && movingBotPath.bot === "whiteBot") ||
                        ((tutorialState.state.gameBoard[movingBotPath.path[j+1]] === "blackPawn" || tutorialState.state.gameBoard[movingBotPath.path[j+1]] === "whitePawn") && movingBotPath.bot === "redBot"))) {
                        return;
                    }
                }
                for (let j = 0; j < movingBotPath.path.length; j++) {
                    tutorialState.state.gameBoard[movingBotPath.path[j]] = null;
                }

                tutorialState.state.gameBoard[movingBotPath.path[movingBotPath.path.length - 1]] = movingBotPath.bot;


                for (let i = 0; i < movingBotPath.path.length; i++) {
                    setTimeout(() => {
                        let x = document.getElementById(movingBotPath.bot);
                        x.style.top = positionInBoardById[movingBotPath.path[i]][0] + "%";
                        x.style.left = positionInBoardById[movingBotPath.path[i]][1] + "%";
                        document.getElementById(`boardOverlayPawn${movingBotPath.path[i]}`).style.display = "none";
                    }, i * 500);
                }
                setTimeout(() => {
                    openWhiteCurtain();
                    showFullscreenText(`${allLanguages[lang]["tutorialText6"]} ${randomOkEmoji()}`, () => {
                        showFullscreenText(allLanguages[lang]["tutorialText7"], () => {
                            showFullscreenText(allLanguages[lang]["tutorialText8"], () => {
                                showFullscreenText(allLanguages[lang]["tutorialText9"], () => {
                                    openVsDisplay("reserveInfo");
                                    closeVsDisplay("moveBotMenu");
                                    document.querySelector("#reserveInfo > div").classList.add("glowing");
                                    document.getElementsByClassName("leftVS")[0].classList.add("glowing");
                                    document.getElementsByClassName("gameBoardContainer")[0].style.display = "none";
                                    showText(allLanguages[lang]["tutorialText10"],true,15000, ()=>{
                                        openWhiteCurtain();
                                        showFullscreenText(allLanguages[lang]["tutorialText11"],()=>{
                                            showFullscreenText(allLanguages[lang]['tutorialText12'],()=>{
                                                window.location.reload();
                                            },true,8000);
                                        },true,10000);
                                    });
                                    moveTextToTop();
                                    closeWhiteCurtain();
                                }, true, 8000);
                            }, true, 4800);
                        }, true, 6000);
                    }, true, 2500);
                }, movingBotPath.path.length * 500);
            }
        }
    }else{
        let game = JSON.parse(localStorage["offlineGame"]);
        if(game.p1.turn){
            for (let i = 0; i < game.gameBoard.length; i++) {
                if(game.gameBoard[i] === movingBotPath.bot && movingBotPath.path[0] === i){
                    for (let j = 0; j < movingBotPath.path.length - 1; j++) {
                        if(!((game.gameBoard[movingBotPath.path[j+1]]   === "blackPawn" && movingBotPath.bot === "blackBot") ||
                            (game.gameBoard[movingBotPath.path[j+1]]  === "whitePawn" && movingBotPath.bot === "whiteBot") ||
                            ((game.gameBoard[movingBotPath.path[j+1]] === "blackPawn" || game.gameBoard[movingBotPath.path[j+1]] === "whitePawn") && movingBotPath.bot === "redBot"))) {
                            return;
                        }
                    }
                    for (let j = 0; j < movingBotPath.path.length; j++) {
                        game.gameBoard[movingBotPath.path[j]] = null;
                    }

                    game.gameBoard[movingBotPath.path[movingBotPath.path.length - 1]] = movingBotPath.bot;

                    game.p1.turn = false;
                    game.p2.turn = true;

                    closeVsDisplay("moveBotMenu");
                    document.getElementById("confirmRobotPath").style.display = "none";

                    for (let i = 0; i < movingBotPath.path.length; i++) {
                        setTimeout(() => {
                            sfx.playSound('robot-move');
                            let x = document.getElementById(movingBotPath.bot);
                            x.style.top = positionInBoardById[movingBotPath.path[i]][0] + "%";
                            x.style.left = positionInBoardById[movingBotPath.path[i]][1] + "%";
                            document.getElementById(`boardOverlayPawn${movingBotPath.path[i]}`).style.display = "none";
                        }, i * 500);
                    }
                    setTimeout(() => {
                        fetchGameState(game);
                        localStorage["offlineGame"] = JSON.stringify(game);
                        movingBotPath = {};
                    }, movingBotPath.path.length * 500);
                }
            }
        }else if(game.p2.turn){
            for (let i = 0; i < game.gameBoard.length; i++) {
                if(game.gameBoard[i] === movingBotPath.bot && movingBotPath.path[0] === i){
                    for (let j = 0; j < movingBotPath.path.length - 1; j++) {
                        if(!((game.gameBoard[movingBotPath.path[j+1]]   === "blackPawn" && movingBotPath.bot === "blackBot") ||
                            (game.gameBoard[movingBotPath.path[j+1]]  === "whitePawn" && movingBotPath.bot === "whiteBot") ||
                            ((game.gameBoard[movingBotPath.path[j+1]] === "blackPawn" || game.gameBoard[movingBotPath.path[j+1]] === "whitePawn") && movingBotPath.bot === "redBot"))) {
                            return;
                        }
                    }
                    for (let j = 0; j < movingBotPath.path.length; j++) {
                        game.gameBoard[movingBotPath.path[j]] = null;
                    }

                    game.gameBoard[movingBotPath.path[movingBotPath.path.length - 1]] = movingBotPath.bot;

                    game.p1.turn = true;
                    game.p2.turn = false;

                    closeVsDisplay("moveBotMenu");
                    document.getElementById("confirmRobotPath").style.display = "none";

                    for (let i = 0; i < movingBotPath.path.length; i++) {
                        setTimeout(() => {
                            sfx.playSound('robot-move');
                            let x = document.getElementById(movingBotPath.bot);
                            x.style.top = positionInBoardById[movingBotPath.path[i]][0] + "%";
                            x.style.left = positionInBoardById[movingBotPath.path[i]][1] + "%";
                            document.getElementById(`boardOverlayPawn${movingBotPath.path[i]}`).style.display = "none";
                        }, i * 500);
                    }
                    setTimeout(() => {
                        fetchGameState(game);
                        localStorage["offlineGame"] = JSON.stringify(game);
                        movingBotPath = {};
                    }, movingBotPath.path.length * 500);
                }
            }
        }
        
    }
}
function cancelMoveBotOption() {
    movingBot = false;
    movingBotPath = {};
    clearHighlightedCells();
    closeVsDisplay("moveBotMenu");
    openMenu("availableActionsMenu");
    openDarkerBg();
    document.getElementById("yourTurnInfo").style.display = "block";
    document.getElementById("confirmRobotPath").style.display = "none";
}
function openMainMenu() {
    openMenu("centerMainMenu");
    openDarkerBg();
    document.getElementById("mainMenuResumeBtn").style.display = "block";
    document.getElementsByClassName("darkerBg")[0].addEventListener("click", closeMainMenu);
}
function closeMainMenu() {
    if (menusStack[menusStack.length - 1] === "centerSettingsMenu") {
        closeSettingsMenu();
        return;
    } else if (menusStack[menusStack.length - 1] === "recentGamesMenu") {
        closeRecentGamesMenu();
        return;
    } else if (menusStack[menusStack.length - 1] === "playMenu") {
        closePlayMenu();
        return;
    }else if (menusStack[menusStack.length - 1] === "langMenu") {
        closeChangeLanguage();
        return;
    }else if (menusStack[menusStack.length - 1] === "centerShareGameMenu" || menusStack[menusStack.length - 1] === "loader") {
        document.getElementsByClassName("darkerBg")[0].removeEventListener("click", closeMainMenu);
        return;
    }
    closeDarkerBg();
    setTimeout(() => (document.getElementById("mainMenuResumeBtn").style.display = "none"), 300);
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", closeMainMenu);
    closeMenu("centerMainMenu");
}
function recentGame(id) {
    if (!socket.connected) notification(allLanguages[lang]["serverError"]);
    else {
        socket.emit("joinroom", {GUID: localStorage["GUID"], roomId: id, name: localStorage["name"],reconnect:true});
        closeRecentGamesMenu();
    }
}
function openDarkerBg() {
    document.getElementById("darkerBg").style.display = "inline-block";
    setTimeout(() => {
        document.getElementById("darkerBg").style.opacity = "1";
    }, 100);
}
function closeDarkerBg() {
    document.getElementById("darkerBg").style.opacity = "0";
    setTimeout(() => {
        document.getElementById("darkerBg").style.display = "none";
    }, 500);
}
function openWhiteCurtain() {
    document.getElementById("whiteCurtain").style.display = "inline-block";
    setTimeout(() => {
        document.getElementById("whiteCurtain").style.opacity = "1";
    }, 100);
}
function closeWhiteCurtain() {
    document.getElementById("whiteCurtain").style.opacity = "0";
    setTimeout(() => {
        document.getElementById("whiteCurtain").style.display = "none";
    }, 500);
}
function moveBot() {
    movingBot = true;
    openVsDisplay("moveBotMenu");
    closeMenu("availableActionsMenu");
    closeDarkerBg();
    document.getElementById("yourTurnInfo").style.display = "none";
}
socket.on("gotoroom", (data) => {
    afterTime = Math.floor(new Date() / 1000);
    offlineGameType = false;
    console.log(data);
    document.getElementById("mainMenuResumeBtn").style.display = "none";
    try {
        if (beforeTime + 2 > afterTime) {
            setTimeout(() => {
                closeMenu("loader");
                openMenu("centerShareGameMenu");
                openDarkerBg();
                document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
                resizeUpdate();
                window.location.hash = `#${data.id}`;
                document.getElementById("background").style.display = "none";
            }, (afterTime + 2 - beforeTime) * 1000);
        } else throw "err";
    } catch (e) {
        closeMenu("loader");
        openMenu("centerShareGameMenu");
        openDarkerBg();
        document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
        resizeUpdate();
        window.location.hash = `#${data.id}`;
        document.getElementById("background").style.display = "none";
    }
    document.getElementById("linkTextInput").value = `${window.location.host}/#${data.id}`;
    localStorage["GUID"] = data.GUID;
});
function useableName(input){
    if(input == "Light"){
        return allLanguages[lang].lightName;
    }else if(input == "Dark"){
        return allLanguages[lang].darkName;
    }else{
        return input;
    }
}
socket.on("GUID", (data) => {
    localStorage["GUID"] = data;
});
socket.on("nameChanged", (data) => {
    if (data.you) {
        document.getElementById("yourName").innerText = useableName(data.name);
    } else {
        document.getElementById("ennemyName").innerText = useableName(data.name);

        let recentGames = JSON.parse(localStorage["recentGames"]);
        for (let i = 0; i < recentGames.length; i++) {
            if (recentGames[i].id === data.id) {
                recentGames.splice(i, 1);
            }
        }
        recentGames.push({ id: data.id, name: data.name });

        localStorage["recentGames"] = JSON.stringify(recentGames);
        updateRecentGames();
    }
});
socket.on("ennemyOffline", () => console.info("Ennemy is offline."));
socket.on("ennemyOnline", () => console.info("Ennemy is online."));

socket.on("yourTurn", (data) => {
    clearTimeout(timeout);
    document.getElementById("yourTurnInfo").style.display = "block";
    document.getElementById("thinking").style.display = "none";
});
socket.on("ennemmyTurn", () => {
    document.getElementById("thinking").style.display = "inline-block";
});
socket.on("wrongReconnect", (data) => {
    let x = JSON.parse(localStorage["recentGames"]);
    for (let i = 0; i < x.length; i++) {
        if(x[i].id === data){
            x.splice(i, 1);
            localStorage["recentGames"] = JSON.stringify(x);
            updateRecentGames();
        }
    }
});
socket.on("wrongroom", () => {
    window.location.hash = "";
    load();
    closeMenu("loader");
});
socket.on("startgame", (data) => {
    if (!data.ended) closeDarkerBg();
    offlineGameType = false;
    closeMenu("centerShareGameMenu");
    closeMenu("centerMainMenu");
    document.getElementById("background").style.display = "none";
    window.location.hash = `#${data.id}`;
    closeMenu("loader");
    fetchGameState(data);
    document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
    resizeUpdate();
    openVsDisplay("ennemyDisplay");
    openVsDisplay("reserveInfo");
    sfx.playSound('game-start');
});
socket.on("placedPawn", (data) => {
    closeVsDisplay("placePawnMenu");
    sfx.playSound('move');
    fetchGameState(data.state);
});
function mainMenuAfterGame() {
    window.location.hash = "";
    window.location.reload();
}
socket.on("reloadedPawn", (data) => {
    fetchGameState(data);
    closeMenu("reloadEnergyMenu");
    closeMenu("availableActionsMenu");
    closeDarkerBg();
});
socket.on("movedBot", (data) => {
    console.log(data);
    console.log(JSON.stringify(data));

    closeVsDisplay("moveBotMenu");
    document.getElementById("confirmRobotPath").style.display = "none";

    for (let i = 0; i < data.move.path.length; i++) {
        setTimeout(() => {
            sfx.playSound('robot-move');
            let x = document.getElementById(data.move.bot);
            x.style.top = positionInBoardById[data.move.path[i]][0] + "%";
            x.style.left = positionInBoardById[data.move.path[i]][1] + "%";
            document.getElementById(`boardOverlayPawn${data.move.path[i]}`).style.display = "none";
        }, i * 500);
    }
    setTimeout(() => fetchGameState(data.state), data.move.path.length * 500);
});

socket.on("winner", (data) => {
    if (data.you) {
        document.getElementById("winnerName").innerText = allLanguages[lang]["youWon"];
        sfx.playSound('win');
    } else {
        document.getElementById("winnerName").innerText = allLanguages[lang]["youLost"];
    }
    openMenu("winnerMenu");
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", closeAvailableActionsMenu);
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
    closeMenu('availableActionsMenu');
    openDarkerBg();
    document.getElementById("yourTurnInfo").style.display = "none";
    sfx.playSound('game-end');
});

const shareBtn = document.getElementById("shareButton");

shareBtn.addEventListener("click", () => {
    if (navigator.share) {
        navigator
            .share({
                title: allLanguages[lang]["shareTextTitle"],
                text: allLanguages[lang]["shareTextText"],
                url: window.location.href,
            })
            .then(() => {
                console.log("Thanks for sharing!");
            })
            .catch((err) => {
                console.log(`Couldn't share because of`, err.message);
            });
    } else {
        console.log("web share not supported");
    }
});
function openTutorial(){
    closeMenu("centerMainMenu");
    closeDarkerBg();
    tutorial = true;
    offlineGameType = false;
    document.getElementById("background").style.display = "none";
    resizeUpdate();
    openWhiteCurtain();
    closeVsDisplay("reserveInfo");
    document.title = `Robotory - ${allLanguages[lang]["mainMenuTutorialBtn"]}`;
    showFullscreenText(allLanguages[lang]["tutorialText1"],function(){
        document.getElementsByClassName("pawnPlaceButton")[0].classList.add("glowing");document.getElementsByClassName("pawnPlaceButton")[1].classList.add("glowing");
        document.getElementsByClassName("openMainMenuButton")[0].style.display = "none";
        document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
        tutorialState = {
            step: 0,
            state: {
                p1: {pawns: {white: 2, black: 2}, name: allLanguages[lang]["tutorialYou"], turn: true, Oarea: "bottom"},
                p2: {pawns: {white: 2, black: 2}, name: allLanguages[lang]["tutorialTeacher"], turn: false, Oarea: "top"},
                pawnReserve: {white: 10, black: 10},
                gameBoard: [null, null, null, null, null, null, null, null, null, "blackBot", null, "whiteBot", "redBot", null, null, null, null, null, null, null, null, null, null, null],
                ended: false
            }
        };
        openVsDisplay("ennemyDisplay");
        moveTextToTop();
        closeWhiteCurtain();
        placePawnOption();
        fetchGameState(tutorialState.state);
    }, false,4000);
}
function showFullscreenText(text, methodAfter, hideAfter, duration=5000) {
    document.getElementsByClassName("tutorialDisplay")[0].style.display = "block";
    setTimeout(() => document.getElementsByClassName("tutorialDisplay")[0].style.opacity = "1",100);
    document.getElementsByClassName("tutorialDisplay")[0].style.top = "50%";
    document.getElementsByClassName("tutorialDisplay")[0].style.left = "50%";
    document.getElementsByClassName("tutorialDisplay")[0].style.transform = "translate(-50%,-50%)";
    document.getElementsByClassName("tutorialText")[0].innerText = text;
    document.getElementsByClassName("verticalAlign")[0].style.height = `${document.getElementsByClassName("tutorialDisplay")[0].offsetHeight + 10}px`;
    if(hideAfter) setTimeout( () => document.getElementsByClassName("tutorialDisplay")[0].style.opacity = "0", duration - 400);
    setTimeout(() => {
        methodAfter();
    },duration);
}
function moveTextToTop() {
    document.getElementsByClassName("tutorialDisplay")[0].style.top = "10px";
    document.getElementsByClassName("tutorialDisplay")[0].style.transform = "translateX(-50%)";
}
function generateBackgroundParticles(q = 1) {
    setTimeout(() => {
        for (let i = 0; i < q; i++) {
            let x = document.createElement("img");
            x.classList.add("bckElement");
            x.style.top = `${Math.floor(Math.random() * 20)}%`;
            x.style.left = `${Math.floor(Math.random() * 101)}%`;
            x.style.width = `${Math.floor(Math.random() * 32) + 20}px`;
            switch (Math.floor(Math.random() * 6)) {
                case 0:
                    x.setAttribute("src", forImage("BlackRobot"));
                    break;
                case 1:
                    x.setAttribute("src", forImage("WhiteRobot"));
                    break;
                case 2:
                    x.setAttribute("src", forImage("RedRobot"));
                    break;
                case 3:
                    x.setAttribute("src", forImage("robotoriLogo"));
                    break;
                case 4:
                    x.setAttribute("src", forImage("blackPawn"));
                    break;
                case 5:
                    x.setAttribute("src", forImage("whitePawn"));
                    break;
            }
            document.getElementById("background").appendChild(x);
            setTimeout(() => {
                x.style.opacity = "1";
                //x.style.left = `${Math.floor(Math.random() * 101)}%`;
                x.style.top = `${100 - Math.floor(Math.random() * 20)}%`;
            }, 10);
            setTimeout(() => {
                x.style.opacity = "0";
            }, 1000);
            setTimeout(() => {
                document.getElementById("background").removeChild(x);
            }, 1500);
        }
    }, Math.floor(Math.random() * 101));
}

function parseSVGs() {
    let allElements = document.querySelectorAll("*");
    for (let i = 0; i < allElements.length; i++) {
        if (allElements[i].getAttribute("data-childSVG") != null) {
            if (SVGsUsed[allElements[i].getAttribute("data-childSVG")] !== undefined) {
                allElements[i].innerHTML = SVGsUsed[allElements[i].getAttribute("data-childSVG")];
            }
        }else if (allElements[i].getAttribute("data-bgSVG") != null) {
            if (SVGsUsed[allElements[i].getAttribute("data-bgSVG")] !== undefined) {
                allElements[i].style.backgroundImage = `url(${forImage(allElements[i].getAttribute("data-bgSVG"))})`;
            }else if (allElements[i].getAttribute("data-bgSVG") == "soundIcon") {
                let soundsenabled = JSON.parse(localStorage.sounds);
                if(soundsenabled){
                    allElements[i].style.backgroundImage = `url(${forImage("soundOn")})`;
                }else{
                    allElements[i].style.backgroundImage = `url(${forImage("soundOff")})`;
                }
            }
        }
    }
}
function forImage(name) {
    return "data:image/svg+xml;base64," + window.btoa(SVGsUsed[name]);
}
document.ontouchmove = function(event){
    event.preventDefault();
}