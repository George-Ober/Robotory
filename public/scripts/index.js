socket = io();
const SVGsUsed = {
    "BlackRobot":'<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2000/svg "><defs><path d="M527.32 181.01C538.37 181.01 547.32 189.97 547.32 201.01C547.32 249.18 547.32 373.67 547.32 421.84C547.32 432.89 538.37 441.84 527.32 441.84C440.39 441.84 199.61 441.84 112.68 441.84C101.63 441.84 92.68 432.89 92.68 421.84C92.68 373.67 92.68 249.18 92.68 201.01C92.68 189.97 101.63 181.01 112.68 181.01C199.61 181.01 440.39 181.01 527.32 181.01Z" id="a2jRTuAgf4"></path><path d="M315.13 181.01C307.57 150.77 319.94 127.06 352.24 109.88" id="c5KQHsstR"></path><path d="M476.58 603.8C468.76 493.14 414.33 439.19 313.3 441.94C212.27 444.69 157.63 498.64 149.38 603.8L476.58 603.8Z" id="g277tyYdMJ"></path><path d="M149.38 248.49L269.66 248.49L269.66 368.77L149.38 368.77L149.38 248.49Z" id="c3BhLthGm3"></path><path d="M367.77 248.49L488.05 248.49L488.05 368.77L367.77 368.77L367.77 248.49Z" id="e1xHNhECeH"></path><path d="M367.77 308.63L269.66 308.63" id="a3rl76Id3o"></path><path d="M384.78 20.1L478.1 63.54L434.67 156.86L341.34 113.42L384.78 20.1Z" id="d2fC7ibLRk"></path></defs><g><g><g><use xlink:href="#a2jRTuAgf4" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#a2jRTuAgf4" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#c5KQHsstR" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#g277tyYdMJ" opacity="1" fill="#000000" fill-opacity="1"></use><g><use xlink:href="#g277tyYdMJ" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#c3BhLthGm3" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#e1xHNhECeH" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#a3rl76Id3o" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#d2fC7ibLRk" opacity="1" fill="#000000" fill-opacity="1"></use></g></g></g></svg>',
    "WhiteRobot": '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M527.32 188.76C538.37 188.76 547.32 197.72 547.32 208.76C547.32 256.93 547.32 381.42 547.32 429.59C547.32 440.63 538.37 449.59 527.32 449.59C440.39 449.59 199.61 449.59 112.68 449.59C101.63 449.59 92.68 440.63 92.68 429.59C92.68 381.42 92.68 256.93 92.68 208.76C92.68 197.72 101.63 188.76 112.68 188.76C199.61 188.76 440.39 188.76 527.32 188.76Z" id="c2tVnYjFu1"></path><path d="M476.58 611.54C468.76 500.89 414.33 446.94 313.3 449.69C212.27 452.44 157.63 506.39 149.38 611.54L476.58 611.54Z" id="h1yzJbwWh0"></path><path d="M363.3 73.04C363.3 97.65 343.32 117.63 318.72 117.63C294.11 117.63 274.13 97.65 274.13 73.04C274.13 48.44 294.11 28.46 318.72 28.46C343.32 28.46 363.3 48.44 363.3 73.04Z" id="b1wRnktR2R"></path><path d="M318.72 188.76L320 117.63" id="aa8Gv7Bmq"></path><path d="M256.83 283.9C256.83 311.19 240.57 333.35 220.54 333.35C200.5 333.35 184.24 311.19 184.24 283.9C184.24 256.62 200.5 234.46 220.54 234.46C240.57 234.46 256.83 256.62 256.83 283.9Z" id="dhu3MuNiF"></path><path d="M318.72 405.03C290.72 424.82 237.93 416.23 160.35 379.26C197.06 389.9 227.57 387.87 251.87 373.19C276.18 358.5 298.46 361.54 318.72 382.3" id="a5ehv2Ss2"></path><path d="M318.72 405.03C346.71 424.82 399.5 416.23 477.09 379.26C440.38 389.9 409.87 387.87 385.56 373.19C361.25 358.5 338.97 361.54 318.72 382.3" id="c5aYfgfMO"></path><path d="M453.2 283.9C453.2 311.19 436.93 333.35 416.9 333.35C396.87 333.35 380.6 311.19 380.6 283.9C380.6 256.62 396.87 234.46 416.9 234.46C436.93 234.46 453.2 256.62 453.2 283.9Z" id="docYOy9tw"></path></defs><g><g><g><use xlink:href="#c2tVnYjFu1" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#c2tVnYjFu1" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#h1yzJbwWh0" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#h1yzJbwWh0" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#b1wRnktR2R" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#b1wRnktR2R" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#aa8Gv7Bmq" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#dhu3MuNiF" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#dhu3MuNiF" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#a5ehv2Ss2" opacity="1" fill="#000000" fill-opacity="1"></use><g><use xlink:href="#a5ehv2Ss2" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="0" stroke-opacity="1"></use></g></g><g><use xlink:href="#c5aYfgfMO" opacity="1" fill="#000000" fill-opacity="1"></use><g><use xlink:href="#c5aYfgfMO" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="0" stroke-opacity="1"></use></g></g><g><use xlink:href="#docYOy9tw" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#docYOy9tw" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g></g></g></svg>',
    "RedRobot": '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M527.32 181.01C538.37 181.01 547.32 189.97 547.32 201.01C547.32 249.18 547.32 373.67 547.32 421.84C547.32 432.89 538.37 441.84 527.32 441.84C440.39 441.84 199.61 441.84 112.68 441.84C101.63 441.84 92.68 432.89 92.68 421.84C92.68 373.67 92.68 249.18 92.68 201.01C92.68 189.97 101.63 181.01 112.68 181.01C199.61 181.01 440.39 181.01 527.32 181.01Z" id="f3D5UTrnSB"></path><path d="M315.13 181.01C307.57 150.77 319.94 127.06 352.24 109.88" id="b5yDId5Kz"></path><path d="M476.58 603.7C468.76 493.04 414.33 439.09 313.3 441.84C212.27 444.59 157.63 498.54 149.38 603.7L476.58 603.7Z" id="cpXlvPsBn"></path><path d="M184.52 343.44C199.62 357.93 226.77 360.98 265.97 352.59L175.36 265.65C166.36 303.02 169.42 328.95 184.52 343.44Z" id="g2RqPu51M7"></path><path d="M455.48 343.44C440.38 357.93 413.23 360.98 374.03 352.59L464.64 265.65C473.64 303.02 470.58 328.95 455.48 343.44Z" id="j4yihXumG"></path><path d="M430.99 96.44L442.18 55.19L407.92 77.56L412.11 36.3L369.46 46.1C343.99 66.71 338.26 87.97 352.24 109.88C366.23 131.79 399.24 137.57 451.27 127.21L465.26 82.46L430.99 96.44Z" id="ask76xbvO"></path></defs><g><g><g><use xlink:href="#f3D5UTrnSB" opacity="1" fill="#ffffff" fill-opacity="1"></use><g><use xlink:href="#f3D5UTrnSB" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><g><use xlink:href="#b5yDId5Kz" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#cpXlvPsBn" opacity="1" fill="#fd4141" fill-opacity="1"></use><g><use xlink:href="#cpXlvPsBn" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#g2RqPu51M7" opacity="1" fill="#fd4141" fill-opacity="1"></use><g><use xlink:href="#g2RqPu51M7" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#j4yihXumG" opacity="1" fill="#fd4141" fill-opacity="1"></use><g><use xlink:href="#j4yihXumG" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g><g><use xlink:href="#ask76xbvO" opacity="1" fill="#fd4141" fill-opacity="1"></use><g><use xlink:href="#ask76xbvO" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="20" stroke-opacity="1"></use></g></g></g></g></svg>',
    "PlayButton": '<svg style="width: 100%;height:100%;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M353.95 426.8L196.72 512.81L196.73 340.75L196.74 168.7L353.97 254.73L511.19 340.78L353.95 426.8Z" id="aa6QjnnCS"/><path d="M353.95 395.67L196.72 481.68L196.73 309.62L196.74 137.56L353.97 223.6L511.19 309.64L353.95 395.67Z" id="aM9fmlY29"/></defs><g><g><g><use xlink:href="#aa6QjnnCS" opacity="1" fill="var(--menuBottom)" fill-opacity="1"/></g><g><use xlink:href="#aM9fmlY29" opacity="1" fill="var(--menuBg)" fill-opacity="1"/></g></g></g></svg>',
    "SettingsButton": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" style="width: 100%;height: 100%;" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M358.06 72.94L358.53 73L359 73.09L359.44 73.2L359.88 73.34L360.3 73.49L360.7 73.67L361.1 73.88L361.49 74.1L361.86 74.35L362.22 74.61L362.57 74.9L362.91 75.2L363.24 75.53L363.57 75.87L363.88 76.23L364.18 76.61L364.48 77L364.76 77.41L365.04 77.84L365.32 78.28L365.58 78.74L365.84 79.21L366.1 79.7L366.34 80.2L366.58 80.71L366.82 81.24L367.05 81.77L367.28 82.32L367.51 82.88L367.73 83.45L367.95 84.03L368.16 84.62L368.38 85.22L368.59 85.83L368.8 86.44L369.01 87.07L369.22 87.69L369.42 88.33L380.11 128.42L383.46 129.46L390.88 132.09L398.15 135L405.29 138.18L412.27 141.63L412.85 141.94L448.87 121.09L449.46 120.79L450.06 120.49L450.64 120.2L451.23 119.91L451.81 119.63L452.38 119.36L452.95 119.09L453.52 118.84L454.07 118.59L454.63 118.35L455.18 118.13L455.72 117.91L456.26 117.71L456.8 117.52L457.32 117.34L457.85 117.17L458.36 117.02L458.88 116.89L459.38 116.77L459.88 116.66L460.38 116.58L460.86 116.51L461.35 116.45L461.82 116.42L462.29 116.41L462.75 116.41L463.21 116.44L463.66 116.48L464.11 116.55L464.54 116.64L464.97 116.75L465.4 116.89L465.81 117.05L466.22 117.24L466.62 117.45L467.02 117.69L467.41 117.95L467.79 118.24L468.16 118.56L468.53 118.91L520.95 171.33L521.29 171.69L521.62 172.07L521.91 172.45L522.18 172.85L522.43 173.25L522.65 173.66L522.84 174.08L523.01 174.51L523.16 174.95L523.29 175.39L523.39 175.84L523.48 176.3L523.54 176.76L523.58 177.23L523.59 177.71L523.59 178.19L523.57 178.68L523.53 179.17L523.47 179.67L523.4 180.18L523.3 180.69L523.19 181.2L523.06 181.72L522.92 182.25L522.76 182.77L522.58 183.3L522.39 183.84L522.19 184.38L521.97 184.92L521.73 185.46L521.49 186L521.23 186.55L520.96 187.1L520.68 187.65L520.38 188.21L520.08 188.76L519.76 189.32L519.44 189.87L519.1 190.43L518.76 190.99L497.94 226.95L498.37 227.73L501.82 234.71L505 241.85L507.91 249.12L510.54 256.54L511.58 259.89L551.67 270.58L552.31 270.73L552.93 270.89L553.56 271.05L554.17 271.22L554.78 271.4L555.38 271.58L555.97 271.77L556.55 271.97L557.12 272.17L557.68 272.38L558.23 272.6L558.76 272.83L559.29 273.06L559.8 273.31L560.3 273.56L560.79 273.82L561.26 274.08L561.72 274.36L562.16 274.65L562.59 274.94L563 275.24L563.39 275.55L563.77 275.88L564.13 276.21L564.47 276.55L564.8 276.9L565.1 277.26L565.39 277.63L565.65 278.01L565.9 278.4L566.12 278.81L566.33 279.22L566.51 279.64L566.66 280.08L566.8 280.53L566.91 280.98L567 281.45L567.06 281.93L567.1 282.43L567.11 282.93L567.11 357.07L567.1 357.57L567.06 358.06L567 358.53L566.91 359L566.8 359.44L566.66 359.88L566.51 360.3L566.33 360.7L566.12 361.1L565.9 361.49L565.65 361.86L565.39 362.22L565.1 362.57L564.8 362.91L564.47 363.24L564.13 363.57L563.77 363.88L563.39 364.18L563 364.48L562.59 364.76L562.16 365.04L561.72 365.32L561.26 365.58L560.79 365.84L560.3 366.1L559.8 366.34L559.29 366.58L558.76 366.82L558.23 367.05L557.68 367.28L557.12 367.51L556.55 367.73L555.97 367.95L555.38 368.16L554.78 368.38L554.17 368.59L553.56 368.8L552.93 369.01L552.31 369.22L551.67 369.42L511.58 380.11L510.54 383.46L507.91 390.88L505 398.15L501.82 405.29L498.37 412.27L497.98 412.97L518.76 448.87L519.1 449.42L519.44 449.98L519.76 450.54L520.08 451.09L520.38 451.65L520.68 452.2L520.96 452.75L521.23 453.3L521.49 453.85L521.73 454.39L521.97 454.94L522.19 455.48L522.39 456.01L522.58 456.55L522.76 457.08L522.92 457.61L523.06 458.13L523.19 458.65L523.3 459.16L523.4 459.67L523.47 460.18L523.53 460.68L523.57 461.17L523.59 461.66L523.59 462.14L523.58 462.62L523.54 463.09L523.48 463.56L523.39 464.01L523.29 464.46L523.16 464.91L523.01 465.34L522.84 465.77L522.65 466.19L522.43 466.6L522.18 467L521.91 467.4L521.62 467.78L521.29 468.16L520.95 468.53L468.53 520.95L468.16 521.29L467.79 521.61L467.41 521.9L467.02 522.17L466.62 522.4L466.22 522.61L465.81 522.8L465.4 522.96L464.97 523.1L464.54 523.21L464.11 523.3L463.66 523.37L463.21 523.42L462.75 523.44L462.29 523.45L461.82 523.43L461.35 523.4L460.86 523.35L460.38 523.28L459.88 523.19L459.38 523.08L458.88 522.96L458.36 522.83L457.85 522.68L457.32 522.51L456.8 522.33L456.26 522.14L455.72 521.94L455.18 521.72L454.63 521.5L454.07 521.26L453.52 521.01L452.95 520.76L452.38 520.49L451.81 520.22L451.23 519.94L450.64 519.66L450.06 519.36L449.46 519.06L448.87 518.76L412.97 497.98L412.27 498.37L405.29 501.82L398.15 505L390.88 507.91L383.46 510.54L380.11 511.58L369.42 551.67L369.22 552.31L369.01 552.93L368.8 553.56L368.59 554.17L368.38 554.78L368.16 555.38L367.95 555.97L367.73 556.55L367.51 557.12L367.28 557.68L367.05 558.23L366.82 558.76L366.58 559.29L366.34 559.8L366.1 560.3L365.84 560.79L365.58 561.26L365.32 561.72L365.04 562.16L364.76 562.59L364.48 563L364.18 563.39L363.88 563.77L363.57 564.13L363.24 564.47L362.91 564.8L362.57 565.1L362.22 565.39L361.86 565.65L361.49 565.9L361.1 566.12L360.7 566.33L360.3 566.51L359.88 566.66L359.44 566.8L359 566.91L358.53 567L358.06 567.06L357.57 567.1L357.07 567.11L282.93 567.11L282.43 567.1L281.93 567.06L281.45 567L280.98 566.91L280.53 566.8L280.08 566.66L279.64 566.51L279.22 566.33L278.81 566.12L278.4 565.9L278.01 565.65L277.63 565.39L277.26 565.1L276.9 564.8L276.55 564.47L276.21 564.13L275.88 563.77L275.55 563.39L275.24 563L274.94 562.59L274.65 562.16L274.36 561.72L274.08 561.26L273.82 560.79L273.56 560.3L273.31 559.8L273.06 559.29L272.83 558.76L272.6 558.23L272.38 557.68L272.17 557.12L271.97 556.55L271.77 555.97L271.58 555.38L271.4 554.78L271.22 554.17L271.05 553.56L270.89 552.93L270.73 552.31L270.58 551.67L259.89 511.58L256.54 510.54L249.12 507.91L241.85 505L234.71 501.82L227.73 498.37L226.89 497.91L191.13 518.61L190.58 518.96L190.02 519.29L189.46 519.62L188.91 519.93L188.35 520.24L187.8 520.53L187.25 520.81L186.7 521.08L186.15 521.34L185.61 521.59L185.06 521.82L184.52 522.04L183.99 522.24L183.45 522.44L182.92 522.61L182.39 522.77L181.87 522.92L181.35 523.04L180.84 523.16L180.33 523.25L179.82 523.33L179.32 523.39L178.83 523.43L178.34 523.45L177.86 523.45L177.38 523.43L176.91 523.39L176.44 523.33L175.99 523.25L175.54 523.14L175.09 523.02L174.66 522.87L174.23 522.7L173.81 522.5L173.4 522.28L173 522.03L172.6 521.76L172.22 521.47L171.84 521.15L171.47 520.8L119.05 468.38L118.71 468.01L118.39 467.64L118.1 467.26L117.83 466.87L117.6 466.48L117.39 466.07L117.2 465.66L117.04 465.25L116.9 464.82L116.79 464.39L116.7 463.96L116.63 463.51L116.58 463.06L116.56 462.61L116.55 462.14L116.57 461.67L116.6 461.2L116.65 460.72L116.72 460.23L116.81 459.73L116.92 459.23L117.04 458.73L117.17 458.22L117.32 457.7L117.49 457.18L117.67 456.65L117.86 456.12L118.06 455.58L118.28 455.03L118.5 454.48L118.74 453.93L118.99 453.37L119.24 452.8L119.51 452.23L119.78 451.66L120.06 451.08L120.34 450.5L120.64 449.91L120.94 449.32L121.24 448.72L141.98 412.9L141.63 412.27L138.18 405.29L135 398.15L132.09 390.88L129.46 383.46L128.42 380.11L88.33 369.42L87.69 369.22L87.07 369.01L86.44 368.8L85.83 368.59L85.22 368.38L84.62 368.16L84.03 367.95L83.45 367.73L82.88 367.51L82.32 367.28L81.77 367.05L81.24 366.82L80.71 366.58L80.2 366.34L79.7 366.1L79.21 365.84L78.74 365.58L78.28 365.32L77.84 365.04L77.41 364.76L77 364.48L76.61 364.18L76.23 363.88L75.87 363.57L75.53 363.24L75.2 362.91L74.9 362.57L74.61 362.22L74.35 361.86L74.1 361.49L73.88 361.1L73.67 360.7L73.49 360.3L73.34 359.88L73.2 359.44L73.09 359L73 358.53L72.94 358.06L72.9 357.57L72.89 357.07L72.89 282.93L72.9 282.43L72.94 281.93L73 281.45L73.09 280.98L73.2 280.53L73.34 280.08L73.49 279.64L73.67 279.22L73.88 278.81L74.1 278.4L74.35 278.01L74.61 277.63L74.9 277.26L75.2 276.9L75.53 276.55L75.87 276.21L76.23 275.88L76.61 275.55L77 275.24L77.41 274.94L77.84 274.65L78.28 274.36L78.74 274.08L79.21 273.82L79.7 273.56L80.2 273.31L80.71 273.06L81.24 272.83L81.77 272.6L82.32 272.38L82.88 272.17L83.45 271.97L84.03 271.77L84.62 271.58L85.22 271.4L85.83 271.22L86.44 271.05L87.07 270.89L87.69 270.73L88.33 270.58L128.42 259.89L129.46 256.54L132.09 249.12L135 241.85L138.18 234.71L141.63 227.73L142.02 227.03L121.24 191.13L120.94 190.54L120.64 189.94L120.34 189.36L120.06 188.77L119.78 188.19L119.51 187.62L119.24 187.05L118.99 186.48L118.74 185.93L118.5 185.37L118.28 184.82L118.06 184.28L117.86 183.74L117.67 183.2L117.49 182.68L117.32 182.15L117.17 181.64L117.04 181.12L116.92 180.62L116.81 180.12L116.72 179.62L116.65 179.14L116.6 178.65L116.57 178.18L116.55 177.71L116.56 177.25L116.58 176.79L116.63 176.34L116.7 175.89L116.79 175.46L116.9 175.03L117.04 174.6L117.2 174.19L117.39 173.78L117.6 173.38L117.83 172.98L118.1 172.59L118.39 172.21L118.71 171.84L119.05 171.47L171.47 119.05L171.84 118.71L172.22 118.38L172.6 118.09L173 117.82L173.4 117.57L173.81 117.35L174.23 117.16L174.66 116.99L175.09 116.84L175.54 116.71L175.99 116.61L176.44 116.52L176.91 116.46L177.38 116.42L177.86 116.41L178.34 116.41L178.83 116.43L179.32 116.47L179.82 116.53L180.33 116.6L180.84 116.7L181.35 116.81L181.87 116.94L182.39 117.08L182.92 117.24L183.45 117.42L183.99 117.61L184.52 117.81L185.06 118.03L185.61 118.27L186.15 118.51L186.7 118.77L187.25 119.04L187.8 119.32L188.35 119.62L188.91 119.92L189.46 120.24L190.02 120.56L190.58 120.9L191.13 121.24L227.03 142.02L227.73 141.63L234.71 138.18L241.85 135L249.12 132.09L256.54 129.46L259.89 128.42L270.58 88.33L270.73 87.69L270.89 87.07L271.05 86.44L271.22 85.83L271.4 85.22L271.58 84.62L271.77 84.03L271.97 83.45L272.17 82.88L272.38 82.32L272.6 81.77L272.83 81.24L273.06 80.71L273.31 80.2L273.56 79.7L273.82 79.21L274.08 78.74L274.36 78.28L274.65 77.84L274.94 77.41L275.24 77L275.55 76.61L275.88 76.23L276.21 75.87L276.55 75.53L276.9 75.2L277.26 74.9L277.63 74.61L278.01 74.35L278.4 74.1L278.81 73.88L279.22 73.67L279.64 73.49L280.08 73.34L280.53 73.2L280.98 73.09L281.45 73L281.93 72.94L282.43 72.9L282.93 72.89L357.07 72.89L357.57 72.9L358.06 72.94ZM311.13 212.25L306.77 212.69L302.46 213.3L298.21 214.08L294.02 215.03L289.89 216.14L285.83 217.4L281.84 218.82L277.92 220.38L274.08 222.1L270.32 223.96L266.64 225.95L263.05 228.09L259.55 230.35L256.15 232.75L252.85 235.27L249.64 237.91L246.54 240.68L243.55 243.55L240.68 246.54L237.91 249.64L235.27 252.85L232.75 256.15L230.35 259.55L228.09 263.05L225.95 266.64L223.96 270.32L222.1 274.08L220.38 277.92L218.82 281.84L217.4 285.83L216.14 289.89L215.03 294.02L214.08 298.21L213.3 302.46L212.69 306.77L212.25 311.13L211.98 315.54L211.89 320L211.98 324.46L212.25 328.87L212.69 333.23L213.3 337.54L214.08 341.79L215.03 345.98L216.14 350.11L217.4 354.17L218.82 358.16L220.38 362.08L222.1 365.92L223.96 369.68L225.95 373.36L228.09 376.95L230.35 380.45L232.75 383.85L235.27 387.15L237.91 390.36L240.68 393.46L243.55 396.45L246.54 399.32L249.64 402.09L252.85 404.73L256.15 407.25L259.55 409.65L263.05 411.91L266.64 414.05L270.32 416.04L274.08 417.9L277.92 419.62L281.84 421.18L285.83 422.6L289.89 423.86L294.02 424.97L298.21 425.92L302.46 426.7L306.77 427.31L311.13 427.75L315.54 428.02L320 428.11L324.46 428.02L328.87 427.75L333.23 427.31L337.54 426.7L341.79 425.92L345.98 424.97L350.11 423.86L354.17 422.6L358.16 421.18L362.08 419.62L365.92 417.9L369.68 416.04L373.36 414.05L376.95 411.91L380.45 409.65L383.85 407.25L387.15 404.73L390.36 402.09L393.46 399.32L396.45 396.45L399.32 393.46L402.09 390.36L404.73 387.15L407.25 383.85L409.65 380.45L411.91 376.95L414.05 373.36L416.04 369.68L417.9 365.92L419.62 362.08L421.18 358.16L422.6 354.17L423.86 350.11L424.97 345.98L425.92 341.79L426.7 337.54L427.31 333.23L427.75 328.87L428.02 324.46L428.11 320L428.02 315.54L427.75 311.13L427.31 306.77L426.7 302.46L425.92 298.21L424.97 294.02L423.86 289.89L422.6 285.83L421.18 281.84L419.62 277.92L417.9 274.08L416.04 270.32L414.05 266.64L411.91 263.05L409.65 259.55L407.25 256.15L404.73 252.85L402.09 249.64L399.32 246.54L396.45 243.55L393.46 240.68L390.36 237.91L387.15 235.27L383.85 232.75L380.45 230.35L376.95 228.09L373.36 225.95L369.68 223.96L365.92 222.1L362.08 220.38L358.16 218.82L354.17 217.4L350.11 216.14L345.98 215.03L341.79 214.08L337.54 213.3L333.23 212.69L328.87 212.25L324.46 211.98L320 211.89L315.54 211.98L311.13 212.25Z" id="d20qQ0g6NM"/><path d="M358.06 55.26L358.53 55.32L359 55.41L359.44 55.52L359.88 55.66L360.3 55.82L360.7 56L361.1 56.2L361.49 56.42L361.86 56.67L362.22 56.93L362.57 57.22L362.91 57.52L363.24 57.85L363.57 58.19L363.88 58.55L364.18 58.93L364.48 59.32L364.76 59.73L365.04 60.16L365.32 60.6L365.58 61.06L365.84 61.53L366.1 62.02L366.34 62.52L366.58 63.03L366.82 63.56L367.05 64.09L367.28 64.64L367.51 65.2L367.73 65.77L367.95 66.35L368.16 66.94L368.38 67.54L368.59 68.15L368.8 68.76L369.01 69.39L369.22 70.02L369.42 70.65L380.11 110.74L383.46 111.78L390.88 114.41L398.15 117.32L405.29 120.5L412.27 123.95L412.85 124.26L448.87 103.41L449.46 103.11L450.06 102.81L450.64 102.52L451.23 102.23L451.81 101.95L452.38 101.68L452.95 101.42L453.52 101.16L454.07 100.91L454.63 100.68L455.18 100.45L455.72 100.23L456.26 100.03L456.8 99.84L457.32 99.66L457.85 99.5L458.36 99.35L458.88 99.21L459.38 99.09L459.88 98.99L460.38 98.9L460.86 98.83L461.35 98.78L461.82 98.74L462.29 98.73L462.75 98.73L463.21 98.76L463.66 98.8L464.11 98.87L464.54 98.96L464.97 99.08L465.4 99.21L465.81 99.37L466.22 99.56L466.62 99.77L467.02 100.01L467.41 100.27L467.79 100.56L468.16 100.88L468.53 101.23L520.95 153.65L521.29 154.02L521.62 154.39L521.91 154.78L522.18 155.17L522.43 155.57L522.65 155.98L522.84 156.4L523.01 156.83L523.16 157.27L523.29 157.71L523.39 158.16L523.48 158.62L523.54 159.08L523.58 159.55L523.59 160.03L523.59 160.51L523.57 161L523.53 161.5L523.47 162L523.4 162.5L523.3 163.01L523.19 163.53L523.06 164.04L522.92 164.57L522.76 165.1L522.58 165.63L522.39 166.16L522.19 166.7L521.97 167.24L521.73 167.78L521.49 168.33L521.23 168.87L520.96 169.42L520.68 169.97L520.38 170.53L520.08 171.08L519.76 171.64L519.44 172.19L519.1 172.75L518.76 173.31L497.94 209.27L498.37 210.05L501.82 217.04L505 224.17L507.91 231.45L510.54 238.86L511.58 242.21L551.67 252.9L552.31 253.05L552.93 253.21L553.56 253.37L554.17 253.54L554.78 253.72L555.38 253.9L555.97 254.09L556.55 254.29L557.12 254.49L557.68 254.7L558.23 254.92L558.76 255.15L559.29 255.39L559.8 255.63L560.3 255.88L560.79 256.14L561.26 256.41L561.72 256.68L562.16 256.97L562.59 257.26L563 257.56L563.39 257.88L563.77 258.2L564.13 258.53L564.47 258.87L564.8 259.22L565.1 259.58L565.39 259.95L565.65 260.33L565.9 260.72L566.12 261.13L566.33 261.54L566.51 261.96L566.66 262.4L566.8 262.85L566.91 263.3L567 263.77L567.06 264.26L567.1 264.75L567.11 265.25L567.11 339.39L567.1 339.89L567.06 340.38L567 340.86L566.91 341.32L566.8 341.76L566.66 342.2L566.51 342.62L566.33 343.03L566.12 343.42L565.9 343.81L565.65 344.18L565.39 344.54L565.1 344.89L564.8 345.23L564.47 345.56L564.13 345.89L563.77 346.2L563.39 346.5L563 346.8L562.59 347.09L562.16 347.37L561.72 347.64L561.26 347.9L560.79 348.16L560.3 348.42L559.8 348.66L559.29 348.91L558.76 349.14L558.23 349.38L557.68 349.6L557.12 349.83L556.55 350.05L555.97 350.27L555.38 350.48L554.78 350.7L554.17 350.91L553.56 351.12L552.93 351.33L552.31 351.54L551.67 351.74L511.58 362.43L510.54 365.78L507.91 373.2L505 380.47L501.82 387.61L498.37 394.59L497.98 395.3L518.76 431.19L519.1 431.75L519.44 432.3L519.76 432.86L520.08 433.41L520.38 433.97L520.68 434.52L520.96 435.07L521.23 435.62L521.49 436.17L521.73 436.71L521.97 437.26L522.19 437.8L522.39 438.34L522.58 438.87L522.76 439.4L522.92 439.93L523.06 440.45L523.19 440.97L523.3 441.48L523.4 441.99L523.47 442.5L523.53 443L523.57 443.49L523.59 443.98L523.59 444.47L523.58 444.94L523.54 445.41L523.48 445.88L523.39 446.33L523.29 446.79L523.16 447.23L523.01 447.66L522.84 448.09L522.65 448.51L522.43 448.92L522.18 449.32L521.91 449.72L521.62 450.1L521.29 450.48L520.95 450.85L468.53 503.27L468.16 503.61L467.79 503.93L467.41 504.22L467.02 504.49L466.62 504.72L466.22 504.94L465.81 505.12L465.4 505.28L464.97 505.42L464.54 505.53L464.11 505.62L463.66 505.69L463.21 505.74L462.75 505.76L462.29 505.77L461.82 505.75L461.35 505.72L460.86 505.67L460.38 505.6L459.88 505.51L459.38 505.41L458.88 505.29L458.36 505.15L457.85 505L457.32 504.83L456.8 504.66L456.26 504.46L455.72 504.26L455.18 504.05L454.63 503.82L454.07 503.58L453.52 503.34L452.95 503.08L452.38 502.82L451.81 502.54L451.23 502.26L450.64 501.98L450.06 501.68L449.46 501.39L448.87 501.08L412.97 480.3L412.27 480.69L405.29 484.14L398.15 487.32L390.88 490.23L383.46 492.87L380.11 493.9L369.42 533.99L369.22 534.63L369.01 535.26L368.8 535.88L368.59 536.49L368.38 537.1L368.16 537.7L367.95 538.29L367.73 538.87L367.51 539.44L367.28 540L367.05 540.55L366.82 541.09L366.58 541.61L366.34 542.12L366.1 542.62L365.84 543.11L365.58 543.58L365.32 544.04L365.04 544.48L364.76 544.91L364.48 545.32L364.18 545.72L363.88 546.09L363.57 546.45L363.24 546.8L362.91 547.12L362.57 547.42L362.22 547.71L361.86 547.98L361.49 548.22L361.1 548.44L360.7 548.65L360.3 548.83L359.88 548.99L359.44 549.12L359 549.23L358.53 549.32L358.06 549.38L357.57 549.42L357.07 549.43L282.93 549.43L282.43 549.42L281.93 549.38L281.45 549.32L280.98 549.23L280.53 549.12L280.08 548.99L279.64 548.83L279.22 548.65L278.81 548.44L278.4 548.22L278.01 547.98L277.63 547.71L277.26 547.42L276.9 547.12L276.55 546.8L276.21 546.45L275.88 546.09L275.55 545.72L275.24 545.32L274.94 544.91L274.65 544.48L274.36 544.04L274.08 543.58L273.82 543.11L273.56 542.62L273.31 542.12L273.06 541.61L272.83 541.09L272.6 540.55L272.38 540L272.17 539.44L271.97 538.87L271.77 538.29L271.58 537.7L271.4 537.1L271.22 536.49L271.05 535.88L270.89 535.26L270.73 534.63L270.58 533.99L259.89 493.9L256.54 492.87L249.12 490.23L241.85 487.32L234.71 484.14L227.73 480.69L226.89 480.23L191.13 500.94L190.58 501.28L190.02 501.61L189.46 501.94L188.91 502.25L188.35 502.56L187.8 502.85L187.25 503.13L186.7 503.4L186.15 503.66L185.61 503.91L185.06 504.14L184.52 504.36L183.99 504.57L183.45 504.76L182.92 504.93L182.39 505.09L181.87 505.24L181.35 505.37L180.84 505.48L180.33 505.57L179.82 505.65L179.32 505.71L178.83 505.75L178.34 505.77L177.86 505.77L177.38 505.75L176.91 505.71L176.44 505.65L175.99 505.57L175.54 505.46L175.09 505.34L174.66 505.19L174.23 505.02L173.81 504.82L173.4 504.6L173 504.36L172.6 504.09L172.22 503.79L171.84 503.47L171.47 503.12L119.05 450.7L118.71 450.33L118.39 449.96L118.1 449.58L117.83 449.19L117.6 448.8L117.39 448.4L117.2 447.99L117.04 447.57L116.9 447.15L116.79 446.72L116.7 446.28L116.63 445.84L116.58 445.39L116.56 444.93L116.55 444.47L116.57 444L116.6 443.52L116.65 443.04L116.72 442.55L116.81 442.06L116.92 441.56L117.04 441.05L117.17 440.54L117.32 440.02L117.49 439.5L117.67 438.97L117.86 438.44L118.06 437.9L118.28 437.35L118.5 436.8L118.74 436.25L118.99 435.69L119.24 435.12L119.51 434.55L119.78 433.98L120.06 433.4L120.34 432.82L120.64 432.23L120.94 431.64L121.24 431.04L141.98 395.23L141.63 394.59L138.18 387.61L135 380.47L132.09 373.2L129.46 365.78L128.42 362.43L88.33 351.74L87.69 351.54L87.07 351.33L86.44 351.12L85.83 350.91L85.22 350.7L84.62 350.48L84.03 350.27L83.45 350.05L82.88 349.83L82.32 349.6L81.77 349.38L81.24 349.14L80.71 348.91L80.2 348.66L79.7 348.42L79.21 348.16L78.74 347.9L78.28 347.64L77.84 347.37L77.41 347.09L77 346.8L76.61 346.5L76.23 346.2L75.87 345.89L75.53 345.56L75.2 345.23L74.9 344.89L74.61 344.54L74.35 344.18L74.1 343.81L73.88 343.42L73.67 343.03L73.49 342.62L73.34 342.2L73.2 341.76L73.09 341.32L73 340.86L72.94 340.38L72.9 339.89L72.89 339.39L72.89 265.25L72.9 264.75L72.94 264.26L73 263.77L73.09 263.3L73.2 262.85L73.34 262.4L73.49 261.96L73.67 261.54L73.88 261.13L74.1 260.72L74.35 260.33L74.61 259.95L74.9 259.58L75.2 259.22L75.53 258.87L75.87 258.53L76.23 258.2L76.61 257.88L77 257.56L77.41 257.26L77.84 256.97L78.28 256.68L78.74 256.41L79.21 256.14L79.7 255.88L80.2 255.63L80.71 255.39L81.24 255.15L81.77 254.92L82.32 254.7L82.88 254.49L83.45 254.29L84.03 254.09L84.62 253.9L85.22 253.72L85.83 253.54L86.44 253.37L87.07 253.21L87.69 253.05L88.33 252.9L128.42 242.21L129.46 238.86L132.09 231.45L135 224.17L138.18 217.04L141.63 210.05L142.02 209.35L121.24 173.45L120.94 172.86L120.64 172.26L120.34 171.68L120.06 171.09L119.78 170.51L119.51 169.94L119.24 169.37L118.99 168.81L118.74 168.25L118.5 167.69L118.28 167.14L118.06 166.6L117.86 166.06L117.67 165.53L117.49 165L117.32 164.47L117.17 163.96L117.04 163.44L116.92 162.94L116.81 162.44L116.72 161.95L116.65 161.46L116.6 160.98L116.57 160.5L116.55 160.03L116.56 159.57L116.58 159.11L116.63 158.66L116.7 158.22L116.79 157.78L116.9 157.35L117.04 156.93L117.2 156.51L117.39 156.1L117.6 155.7L117.83 155.3L118.1 154.92L118.39 154.53L118.71 154.16L119.05 153.8L171.47 101.38L171.84 101.03L172.22 100.71L172.6 100.41L173 100.14L173.4 99.9L173.81 99.67L174.23 99.48L174.66 99.31L175.09 99.16L175.54 99.03L175.99 98.93L176.44 98.85L176.91 98.79L177.38 98.75L177.86 98.73L178.34 98.73L178.83 98.75L179.32 98.79L179.82 98.85L180.33 98.92L180.84 99.02L181.35 99.13L181.87 99.26L182.39 99.4L182.92 99.56L183.45 99.74L183.99 99.93L184.52 100.13L185.06 100.35L185.61 100.59L186.15 100.83L186.7 101.09L187.25 101.36L187.8 101.65L188.35 101.94L188.91 102.24L189.46 102.56L190.02 102.88L190.58 103.22L191.13 103.56L227.03 124.34L227.73 123.95L234.71 120.5L241.85 117.32L249.12 114.41L256.54 111.78L259.89 110.74L270.58 70.65L270.73 70.02L270.89 69.39L271.05 68.76L271.22 68.15L271.4 67.54L271.58 66.94L271.77 66.35L271.97 65.77L272.17 65.2L272.38 64.64L272.6 64.09L272.83 63.56L273.06 63.03L273.31 62.52L273.56 62.02L273.82 61.53L274.08 61.06L274.36 60.6L274.65 60.16L274.94 59.73L275.24 59.32L275.55 58.93L275.88 58.55L276.21 58.19L276.55 57.85L276.9 57.52L277.26 57.22L277.63 56.93L278.01 56.67L278.4 56.42L278.81 56.2L279.22 56L279.64 55.82L280.08 55.66L280.53 55.52L280.98 55.41L281.45 55.32L281.93 55.26L282.43 55.22L282.93 55.21L357.07 55.21L357.57 55.22L358.06 55.26ZM311.13 194.57L306.77 195.01L302.46 195.62L298.21 196.41L294.02 197.35L289.89 198.46L285.83 199.72L281.84 201.14L277.92 202.71L274.08 204.42L270.32 206.28L266.64 208.27L263.05 210.41L259.55 212.67L256.15 215.07L252.85 217.59L249.64 220.23L246.54 223L243.55 225.87L240.68 228.86L237.91 231.96L235.27 235.17L232.75 238.47L230.35 241.87L228.09 245.37L225.95 248.96L223.96 252.64L222.1 256.4L220.38 260.24L218.82 264.16L217.4 268.15L216.14 272.21L215.03 276.34L214.08 280.53L213.3 284.79L212.69 289.09L212.25 293.45L211.98 297.87L211.89 302.32L211.98 306.78L212.25 311.19L212.69 315.55L213.3 319.86L214.08 324.11L215.03 328.3L216.14 332.43L217.4 336.49L218.82 340.49L220.38 344.4L222.1 348.24L223.96 352.01L225.95 355.68L228.09 359.27L230.35 362.77L232.75 366.17L235.27 369.48L237.91 372.68L240.68 375.78L243.55 378.77L246.54 381.65L249.64 384.41L252.85 387.05L256.15 389.57L259.55 391.97L263.05 394.24L266.64 396.37L270.32 398.37L274.08 400.22L277.92 401.94L281.84 403.5L285.83 404.92L289.89 406.19L294.02 407.29L298.21 408.24L302.46 409.02L306.77 409.63L311.13 410.08L315.54 410.34L320 410.43L324.46 410.34L328.87 410.08L333.23 409.63L337.54 409.02L341.79 408.24L345.98 407.29L350.11 406.19L354.17 404.92L358.16 403.5L362.08 401.94L365.92 400.22L369.68 398.37L373.36 396.37L376.95 394.24L380.45 391.97L383.85 389.57L387.15 387.05L390.36 384.41L393.46 381.65L396.45 378.77L399.32 375.78L402.09 372.68L404.73 369.48L407.25 366.17L409.65 362.77L411.91 359.27L414.05 355.68L416.04 352.01L417.9 348.24L419.62 344.4L421.18 340.49L422.6 336.49L423.86 332.43L424.97 328.3L425.92 324.11L426.7 319.86L427.31 315.55L427.75 311.19L428.02 306.78L428.11 302.32L428.02 297.87L427.75 293.45L427.31 289.09L426.7 284.79L425.92 280.53L424.97 276.34L423.86 272.21L422.6 268.15L421.18 264.16L419.62 260.24L417.9 256.4L416.04 252.64L414.05 248.96L411.91 245.37L409.65 241.87L407.25 238.47L404.73 235.17L402.09 231.96L399.32 228.86L396.45 225.87L393.46 223L390.36 220.23L387.15 217.59L383.85 215.07L380.45 212.67L376.95 210.41L373.36 208.27L369.68 206.28L365.92 204.42L362.08 202.71L358.16 201.14L354.17 199.72L350.11 198.46L345.98 197.35L341.79 196.41L337.54 195.62L333.23 195.01L328.87 194.57L324.46 194.3L320 194.21L315.54 194.3L311.13 194.57Z" id="a2MvuWcCyS"/></defs><g><g><g><use xlink:href="#d20qQ0g6NM" opacity="1" fill="var(--menuBottom)" fill-opacity="1"/></g><g><use xlink:href="#a2MvuWcCyS" opacity="1" fill="var(--menuBg)" fill-opacity="1"/></g></g></g></svg>',
    "robotoriLogo": '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M321.74 101.76C309.06 101.76 298.33 104.75 289.56 110.74C207.23 154.79 160.55 181.45 149.52 190.72C142.16 196.9 135.57 205.91 129.74 217.74C124.89 227.59 122.26 238.39 122.05 249.37C120.68 320.06 120.79 368.27 122.37 393.99C124.14 422.68 134.51 442.55 153.49 453.58C229.86 495.08 273.78 520.02 285.25 528.4C296.73 536.79 308.89 540.32 321.74 539C321.37 537.5 321.13 536.56 321.04 536.18C313.65 506.23 327.34 475.05 354.41 460.23C354.88 459.97 356.06 459.32 357.96 458.29C406.17 430.22 431.59 415.5 434.21 414.12C449.44 406.11 457.34 396.4 457.93 384.99C458.09 309.26 458.09 267.32 457.93 259.18C457.75 249.81 453.02 240.89 443.74 232.45C423.76 221 408.7 212.4 398.54 206.67C388.39 200.93 376.47 200.46 362.78 205.25C315.48 233.28 294.91 245.53 301.09 242C306.58 238.87 316.89 238.19 332.01 239.97C334.55 240.27 336.99 241.11 339.17 242.45C358.29 254.14 372.49 262.44 381.77 267.35C391.78 272.65 397.37 280.59 398.54 291.19C398.84 315.32 398.84 333.71 398.54 346.36C398.25 359.02 392.66 368.49 381.77 374.79L338.64 399.07C305.68 419.08 284.35 431.44 274.64 436.15C264.93 440.86 254.77 440.56 244.18 435.27C229.47 426.44 216.22 418.64 204.45 411.87C192.68 405.1 185.78 392.74 183.75 374.79C183.75 334.53 183.75 301.16 183.75 274.68C183.75 248.19 196.7 229.65 222.59 219.06C248.97 203.49 273.55 189.09 296.32 175.86C319.1 162.62 327.57 137.93 321.74 101.76" id="b45qDbGKZ8"></path><linearGradient id="gradienth1WQGksUvg" gradientUnits="userSpaceOnUse" x1="296.39" y1="113.18" x2="302.06" y2="539.27"><stop style="stop-color: #a6a6a6;stop-opacity: 0.48" offset="0%"></stop><stop style="stop-color: #fdf3fe;stop-opacity: 1" offset="100%"></stop></linearGradient><path d="M321.15 538.47C328.69 539.22 340.22 536.46 355.72 530.19L368.91 522.75C432.92 485.46 474.08 461.37 492.37 450.47C510.66 439.56 519.41 424.79 518.64 406.15C518.99 309.95 518.99 252.36 518.64 233.36C518.29 214.37 505.8 197.84 481.18 183.77C404.93 138.96 361.35 113.56 350.44 107.58C339.54 101.61 329.78 99.54 321.15 101.38C321.29 102.33 321.38 102.93 321.41 103.17C325.45 130.93 314.69 158.79 293.02 176.63C293.01 176.64 292.98 176.66 292.94 176.7C251.86 201.22 223.61 217.51 208.18 225.58C192.76 233.65 184.45 248.4 183.26 269.83C183.35 324.16 183.23 359.19 182.9 374.91C182.57 390.63 188.37 402.23 200.3 409.69C223.77 423.94 239.47 432.99 247.38 436.84C255.3 440.69 263.95 440.83 273.32 437.27L302.31 420.84C337.92 400.01 351.93 392.08 344.34 397.02C336.76 401.97 323.54 402.72 304.69 399.28C276.48 383.11 259.35 373.05 253.3 369.09C247.26 365.13 244.22 359.41 244.18 351.92C244.29 319.65 244.29 298.63 244.18 288.84C244.07 279.06 249.46 271.42 260.34 265.92C323.06 229.53 358.18 209.42 365.7 205.59C373.21 201.76 383.48 201.76 396.48 205.59C416.81 216.88 432.04 225.75 442.16 232.22C452.28 238.69 457.55 248.94 457.95 262.99C457.67 328.19 457.67 367.26 457.95 380.19C458.23 393.13 452.46 402.96 440.64 409.69C411.42 426.35 381.76 443.42 351.68 460.87C321.59 478.33 311.42 504.34 321.15 538.89" id="c1c7thxHPR"></path><linearGradient id="gradientf2lVdRekJK" gradientUnits="userSpaceOnUse" x1="350.9" y1="100.73" x2="350.9" y2="538.89"><stop style="stop-color: #fcf2fd;stop-opacity: 1" offset="0%"></stop><stop style="stop-color: #a6a6a6;stop-opacity: 0.48" offset="100%"></stop></linearGradient></defs><g><g><g><use xlink:href="#b45qDbGKZ8" opacity="1" fill="url(#gradienth1WQGksUvg)"></use></g><g><use xlink:href="#c1c7thxHPR" opacity="1" fill="url(#gradientf2lVdRekJK)"></use><g><use xlink:href="#c1c7thxHPR" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="0" stroke-opacity="1"></use></g></g></g></g></svg>',
    "blackPawn": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M529.86 320C529.86 435.82 435.82 529.86 320 529.86C204.18 529.86 110.14 435.82 110.14 320C110.14 204.18 204.18 110.14 320 110.14C435.82 110.14 529.86 204.18 529.86 320Z" id="aeF0Xtu0d"/></defs><g><g><g><filter id="shadow5227381" x="79.14" y="79.14" width="481.72" height="507.72" filterUnits="userSpaceOnUse" primitiveUnits="userSpaceOnUse"><feFlood/><feComposite in2="SourceAlpha" operator="in"/><feGaussianBlur stdDeviation="0"/><feOffset dx="0" dy="26" result="afterOffset"/><feFlood flood-color="#000000" flood-opacity="1"/><feComposite in2="afterOffset" operator="in"/><feMorphology operator="dilate" radius="0"/><feComposite in2="SourceAlpha" operator="out"/></filter><path d="M529.86 320C529.86 435.82 435.82 529.86 320 529.86C204.18 529.86 110.14 435.82 110.14 320C110.14 204.18 204.18 110.14 320 110.14C435.82 110.14 529.86 204.18 529.86 320Z" id="eRwIKmtaf" fill="white" fill-opacity="1" filter="url(#shadow5227381)"/></g><use xlink:href="#aeF0Xtu0d" opacity="1" fill="#212121" fill-opacity="1"/></g></g></svg>',
    "whitePawn": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><defs><path d="M529.86 320C529.86 435.82 435.82 529.86 320 529.86C204.18 529.86 110.14 435.82 110.14 320C110.14 204.18 204.18 110.14 320 110.14C435.82 110.14 529.86 204.18 529.86 320Z" id="f7mS77rnBa"/></defs><g><g><g><filter id="shadow15465084" x="79.14" y="79.14" width="481.72" height="507.72" filterUnits="userSpaceOnUse" primitiveUnits="userSpaceOnUse"><feFlood/><feComposite in2="SourceAlpha" operator="in"/><feGaussianBlur stdDeviation="0"/><feOffset dx="0" dy="26" result="afterOffset"/><feFlood flood-color="#b8b8b8" flood-opacity="1"/><feComposite in2="afterOffset" operator="in"/><feMorphology operator="dilate" radius="0"/><feComposite in2="SourceAlpha" operator="out"/></filter><path d="M529.86 320C529.86 435.82 435.82 529.86 320 529.86C204.18 529.86 110.14 435.82 110.14 320C110.14 204.18 204.18 110.14 320 110.14C435.82 110.14 529.86 204.18 529.86 320Z" id="c1bzUBQfUY" fill="white" fill-opacity="1" filter="url(#shadow15465084)"/></g><use xlink:href="#f7mS77rnBa" opacity="1" fill="#ffffff" fill-opacity="1"/></g></g></svg>',
    "shareBtn": '<svg width="365" height="365" viewBox="0 0 365 365" fill="none" xmlns="http://www.w3.org/2000/svg" style="width: 100%;height: 100%;"><path d="M182.5 179.5V20M182.5 20L125.5 77M182.5 20L239 77" stroke="black" stroke-width="26" stroke-linecap="round" stroke-linejoin="round"/><path d="M116.5 129H86C72.7452 129 62 139.745 62 153V322C62 335.255 72.7452 346 86 346H279.5C292.755 346 303.5 335.255 303.5 322V153C303.5 139.745 292.755 129 279.5 129H248" stroke="black" stroke-width="26" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    "copyBtn": '<svg width="365" height="365" viewBox="0 0 365 365" fill="none" xmlns="http://www.w3.org/2000/svg" style="width: 100%; height: 100%;"><rect x="121" y="91" width="164" height="223" rx="19" stroke="black" stroke-width="19" stroke-linejoin="round"/><path d="M81 255V51H212" stroke="black" stroke-width="19" stroke-linecap="round" stroke-linejoin="round"/></svg>',
};
const redColorScheme = [
    ["menuBg", "#FFEBEE"],
    ["menuBottom", "#FFCDD2"],
    ["buttonBg", "#EF9A9A"],
    ["buttonBottom", "#E57373"],
];
const purpleColorScheme = [
    ["menuBg", "#f3e5f5"],
    ["menuBottom", "#e1bee7"],
    ["buttonBg", "#CE93D8"],
    ["buttonBottom", "#BA68C8"],
];
const blueColorScheme = [
    ["menuBg", "#e8eaf6"],
    ["menuBottom", "#c5cae9"],
    ["buttonBg", "#9FA8DA"],
    ["buttonBottom", "#7986CB"],
];
const cyanColorScheme = [
    ["menuBg", "#e0f7fa"],
    ["menuBottom", "#b2ebf2"],
    ["buttonBg", "#80DEEA"],
    ["buttonBottom", "#4DD0E1"],
];
const greenColorScheme = [
    ["menuBg", "#e8f5e9"],
    ["menuBottom", "#c8e6c9"],
    ["buttonBg", "#A5D6A7"],
    ["buttonBottom", "#81C784"],
];
const yellowColorScheme = [
    ["menuBg", "#fff3e0"],
    ["menuBottom", "#ffe0b2"],
    ["buttonBg", "#ffcc80"],
    ["buttonBottom", "#ffb74d"],
];

let placingPawn = false;
let reserve = { white: 10, black: 10 };
let reload = { white: 0, black: 0 };
let toreload = 0;
let area = "bottom";
let gameBoard = [];
let movingBot = false;
let movingBotPath = {};
let offlineGameType = false;
let tutorial = false;
let tutorialState = null;

let lang = "en_GB";
const allLanguages = {
    en_GB: {
        genericBack: "Back",
        mainMenuResumeBtn: "Resume",
        mainMenuRecentGamesBtn: "Recent Games",
        mainMenuTutorialBtn: "Tutorial",
        playOnlineBtn: "Play online",
        playOfflineBtn: "Play offline",
        copyBtn: "Copy",
        shareBtn: "Share",
        randomBtn: "Find player",
        availableOptionsBtn: "Available options",
        gameSettingsBtn: "Game settings",
        confirmPathBtn: "Confirm Robot path",
        placePawnOptionBtn: "Place energy pawn",
        moveRbotBtn: "Move a robot",
        reloadEnergyBtn: "Reload energy",
        rematchBtn: "Rematch",
        mainMenuBtn: "Main Menu",
        playMenuDesc: "How would you like to play?",
        energyPawnsReloadDescritpion: "These energy pawns will be added to your inventory",
        recentGamesMenuDesc: "These are the names of the people you've played with recently",
        unsupportedDesc: "Your browser is outdated. Things might not be aligned, you may encounter bugs.",
        colorSchemeDesc: "Color scheme",
        loaderDesc: "Connecting to server",
        yourTurnDesc: "It is your turn. Click on the button below to see what you can do.",
        yourTurnDescOffline: "It is %name's turn. Click on the button below to see what you can do.",
        placePawnDesc: "These are the pawns you have, click on one of the buttons below to choose a colour and click the cell you want to place it in.",
        moveBotDesc: "Click on the robot you want to move, then click on pawns one by one to create a path.",
        winnerMenuDesc: "The game stops when the last energy pawn of any colour is taken at a reload.",
        shareGameMenuDesc: "Share this link with your friend:",
        serverError: "Couldn't connect to server",
        recentGamesMenuAgainst: "Against %player",
        energyPawnsReloadAction: "You have %actual energy pawns, you have to take %future of any colour to reload to 4.",
        shareTextTitle: "Robotory game!",
        shareTextText: "Come play Robotory with me!",
        playRisk: "Play at your own risk!",
        nameInput: "Enter a name here...",
        ennemyDisplayVS: "VS",
        ennemyDisplayThinking: "Thinking",
        genericConfirm: "Confirm",
        youWon: "You won!",
        youLost: "You lost!",
    },
    fr_FR: {
        genericBack: "Retour",
        mainMenuResumeBtn: "Résumer",
        mainMenuRecentGamesBtn: "Parties Récentes",
        mainMenuTutorialBtn: "Tutoriel",
        playOnlineBtn: "Jouer en ligne",
        playOfflineBtn: "Jouer hors-ligne",
        copyBtn: "Copier",
        shareBtn: "Partager",
        randomBtn: "Trouver un joueur",
        availableOptionsBtn: "Options disponibles",
        gameSettingsBtn: "Réglages de partie",
        confirmPathBtn: "Confirmer le chemin du robot",
        placePawnOptionBtn: "Placer un pion d'énergie",
        moveRbotBtn: "Déplacer un robot",
        reloadEnergyBtn: "Recharger l'énergie",
        rematchBtn: "Rejouer",
        mainMenuBtn: "Menu principal",
        playMenuDesc: "Comment voulez vous jouer?",
        energyPawnsReloadDescritpion: "Ces pions d'énergie seront ajoutés à votre inventaire",
        recentGamesMenuDesc: "Voici les noms des gens avec qui vous avez joué récemment",
        unsupportedDesc: "Votre navigateur est ancien. Les objets pourraient ne pas être alignés et vous rencontrez plus de bogues.",
        colorSchemeDesc: "Thème",
        loaderDesc: "Connection au serveur",
        yourTurnDesc: "C'est votre tour. Cliquez sur le bouton ci-dessous pour voir ce que vous pouvez faire.",
        yourTurnDescOffline: "C'est au tour de %name. Cliquez sur le bouton ci-dessous pour voir ce que vous pouvez faire.",
        placePawnDesc: "Voici les pions que vous avez, cliquez sur un des boutons ce dessous pour séléctionner une couleur et cliquez sur le carreau sur lequel vous voulez le placer.",
        moveBotDesc: "Cliquez sur le robot que vous voulez déplacer, puis cliquez sur les pions un par un pour créer un 'trajet'",
        winnerMenuDesc: "La partie s'arrête quand un joueur prend le dernier pion d'énergie d'une couleur lors d'un rechargement.",
        shareGameMenuDesc: "Partagez ce lien avec un ami:",
        serverError: "Impossible de se connecter au serveur",
        recentGamesMenuAgainst: "Contre %player",
        energyPawnsReloadAction: "Vous avez %actual pions d'énergie, vous devez en prendre %future de n'importe quelle couleur pour en avoir 4 de nouveau.",
        shareTextTitle: "Partie Robotory!",
        shareTextText: "Viens jouer une partie de Robotory avec moi!",
        playRisk: "Je prends des risques!",
        nameInput: "Entrez un nom...",
        ennemyDisplayVS: "Contre",
        ennemyDisplayThinking: "Je pense",
        genericConfirm: "Confirmer",
        youWon: "Vous avez gagné!",
        youLost: "Vous avez perdu!",
    },
    es_ES: {
        genericBack: "Atrás",
        mainMenuResumeBtn: "Continuar",
        mainMenuRecentGamesBtn: "Juegos Recentes",
        mainMenuTutorialBtn: "Tutorial",
        playOnlineBtn: "Jugar en línea",
        playOfflineBtn: "Jouer desconectado",
        copyBtn: "Copiar",
        shareBtn: "Compartir",
        randomBtn: "Buscar un jugador",
        availableOptionsBtn: "Opciones disponibles",
        gameSettingsBtn: "Configuraciones de este juego",
        confirmPathBtn: "Confirmar el camino del robot",
        placePawnOptionBtn: "Poner una pieza de energia",
        moveRbotBtn: "Mover un robot",
        reloadEnergyBtn: "Recargar la energía",
        rematchBtn: "Jugar de nuevo",
        mainMenuBtn: "Menú principal",
        playMenuDesc: "Cómo quieres júgar",
        energyPawnsReloadDescritpion: "Estas piezas de energia se añadirán al inventario",
        recentGamesMenuDesc: "Estos son los nombres de la gente con la que ha jugado recientemente",
        unsupportedDesc: "Su navegador es antiguo. Es posible que los objetos no estén alineados y que haya más errores.",
        colorSchemeDesc: "Tema",
        loaderDesc: "Conexión al servidor",
        yourTurnDesc: "Es su turno. Haz clic en el botón de abajo para ver qué puede hacer.",
        yourTurnDescOffline: "Es el turno de %name. Haz clic en el botón de abajo para ver qué puede hacer.",
        placePawnDesc: "Aquí están las piezas que tiene, haga clic en uno de los botones de abajo para seleccionar un color y haga clic en el azulejo en el que desea colocarlo.",
        moveBotDesc: "Haga clic en el robot que desea mover y haga clic en las piezas una por una para crear un 'trayecto'",
        winnerMenuDesc: "El juego se acaba cuando un jugador toma la última pieza de energía de un color durante una recarga.",
        shareGameMenuDesc: "Comparte este enlace con un amigo:",
        serverError: "No se puede conectar al servidor",
        recentGamesMenuAgainst: "aontra %player",
        energyPawnsReloadAction: "Tiene %actual fichas de energía, tiene que tomar %future de cualquier color para tener 4 de nuevo.",
        shareTextTitle: "Juego Robotory!",
        shareTextText: "¡Ven a jugar a Robotory conmigo!",
        playRisk: "Quiero correr riesgos.",
        nameInput: "Introduzca un nombre...",
        ennemyDisplayVS: "Contra",
        ennemyDisplayThinking: "Estoy piensando",
        genericConfirm: "Confirmar",
        youWon: "Usted ha ganado!",
        youLost: "Usted ha perdido!",
    },
};
//First one is the top, second one is the left
const positionInBoardById = [
    [8.5, 50],
    [16.5, 36.4],
    [16.5, 63.4],
    [25.5, 22.7],
    [25.5, 50],
    [25.5, 77],
    [33.5, 36.4],
    [33.5, 63.4],
    [41.5, 22.7],
    [41.5, 50],
    [41.5, 77],
    [49.5, 36.4],
    [49.5, 63.4],
    [58.5, 22.7],
    [58.5, 50],
    [58.5, 77],
    [66.5, 36.4],
    [66.5, 63.4],
    [74.5, 22.7],
    [74.5, 50],
    [74.5, 77],
    [82.8, 36.4],
    [82.8, 63.4],
    [91.8, 50],
];
let neighbours = [
    [1, 2, 4],
    [3, 6, 4, 0],
    [0, 4, 7, 5],
    [1, 6, 8],
    [0, 1, 2, 6, 7, 9],
    [2, 7, 10],
    [1, 3, 4, 8, 9, 11],
    [2, 4, 5, 9, 10, 12],
    [3, 6, 11, 13],
    [4, 6, 7, 11, 12, 14],
    [5, 7, 12, 15],
    [6, 8, 9, 13, 14, 16],
    [7, 9, 10, 14, 15, 17],
    [8, 11, 16, 18],
    [9, 11, 12, 16, 17, 19],
    [10, 12, 17, 20],
    [11, 13, 14, 18, 19, 21],
    [12, 14, 15, 19, 20, 22],
    [13, 16, 21],
    [14, 16, 17, 21, 22, 23],
    [15, 17, 22],
    [16, 18, 19, 23],
    [17, 19, 20, 23],
    [19, 21, 22],
];

Array.prototype.remove = function () {
    var what,
        a = arguments,
        L = a.length,
        ax;
    while (L && this.length) {
        what = a[--L];
        while ((ax = this.indexOf(what)) !== -1) {
            this.splice(ax, 1);
        }
    }
    return this;
};
let menusStack = [];
class BrowserDetector {
    constructor() {
        (this.browser = {}), (this.unsupportedBrowsers = { Chrome: 70, Firefox: 60, IE: 10, Edge: 15, Opera: 50, Safari: 12 }), this._detectBrowser();
    }
    _detectBrowser() {
        var e, r, s;
        this.browser =
            ((r = navigator.userAgent),
                (s = r.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || []),
                /trident/i.test(s[1])
                    ? { name: "IE", version: (e = /\brv[ :]+(\d+)/g.exec(r) || [])[1] || "" }
                    : "Chrome" === s[1] && null != (e = r.match(/\b(OPR|Edge)\/(\d+)/))
                    ? { name: e[1].replace("OPR", "Opera"), version: e[2] }
                    : ((s = s[2] ? [s[1], s[2]] : [navigator.appName, navigator.appVersion, "-?"]), null != (e = r.match(/version\/(\d+)/i)) && s.splice(1, 1, e[1]), { name: s[0], version: s[1] }));
    }
    get isIE() {
        return "IE" === this.browser.name;
    }
    get isEdge() {
        return "Edge" === this.browser.name;
    }
    get isMicrosoft() {
        return this.isIE || this.isEdge;
    }
    get isFirefox() {
        return "Firefox" === this.browser.name;
    }
    get isChrome() {
        return "Chrome" === this.browser.name;
    }
    get isSafari() {
        return "Safari" === this.browser.name;
    }
    get isAndroid() {
        return /Android/i.test(navigator.userAgent);
    }
    get isBlackBerry() {
        return /BlackBerry/i.test(navigator.userAgent);
    }
    get isWindowsMobile() {
        return /IEMobile/i.test(navigator.userAgent);
    }
    get isIOS() {
        return /iPhone|iPad|iPod/i.test(navigator.userAgent);
    }
    get isMobile() {
        return this.isAndroid || this.isBlackBerry || this.isWindowsMobile || this.isIOS;
    }
    isSupported() {
        return !!(this.unsupportedBrowsers.hasOwnProperty(this.browser.name) && +this.browser.version > this.unsupportedBrowsers[this.browser.name]);
    }
}
function load() {
    if (window.localStorage["colorScheme"] === undefined || window.localStorage["colorScheme"] === null) {
        window.localStorage["colorScheme"] = "greenColorScheme";
    } else {
        applyColorScheme(eval(window.localStorage["colorScheme"]));
    }
    if (!(window.localStorage["recentGames"] === undefined || window.localStorage["recentGames"] === null)) {
        if (JSON.parse(window.localStorage["recentGames"]).length !== 0) {
            updateRecentGames();
        }
    } else {
        window.localStorage["recentGames"] = JSON.stringify([]);
    }
    document.getElementsByClassName(window.localStorage["colorScheme"] + "Button")[0].classList.add("activeColorSchemeButton");
    resizeUpdate();
    let allElements = document.getElementsByTagName("*");
    for (let i = 0; i < allElements.length; i++) {
        if (allElements[i].tagName == "INPUT") break;
        allElements[i].classList.add("disableSelect");
    }
    if (testIfTouch()) {
        let allElements = document.getElementsByTagName("*");
        for (let i = 0; i < allElements.length; i++) {
            allElements[i].classList.add("touchDevice");
        }
    }
    if (!navigator.share) {
        document.getElementById("shareButton").style.display = "none";
    }
    if (localStorage["name"] === undefined || localStorage["name"] == null) {
        localStorage["name"] = "";
    }
    if (localStorage["lang"] === undefined || localStorage["lang"] == null) {
        localStorage["lang"] = "en_GB";
    }
    lang = localStorage["lang"];

    applyTranslation();
    document.getElementById("nameTextInput").value = localStorage["name"];
    if (window.location.hash.charAt(0) == "#") {
        socket.emit("joinroom", { GUID: localStorage["GUID"], roomId: window.location.hash.substr(1), name: localStorage["name"] });
        openMenu("loader");
    } else if (!new BrowserDetector().isSupported()) {
        openMenu("unsupported");
        openDarkerBg();
    } else {
        openMenu("centerMainMenu");
        openDarkerBg();
        //openVsDisplay("ennemyDisplay");
    }
    setInterval(generateBackgroundParticles, 100);
    parseSVGs();
}

function applyTranslation() {
    for (let i = 0; i < document.getElementsByTagName("*").length; i++) {
        if (document.getElementsByTagName("*")[i].getAttribute("data-i18n") != null) {
            if (allLanguages[lang][document.getElementsByTagName("*")[i].getAttribute("data-i18n")] !== undefined) {
                document.getElementsByTagName("*")[i].innerHTML = allLanguages[lang][document.getElementsByTagName("*")[i].getAttribute("data-i18n")];
            }
        } else if (document.getElementsByTagName("*")[i].getAttribute("data-i18n-custom") != null) {
            let elmntCustomTag = document.getElementsByTagName("*")[i].getAttribute("data-i18n-custom");
            let splitElement = elmntCustomTag.split(":");
            if (allLanguages[lang][splitElement[1]] !== undefined) {
                document.getElementsByTagName("*")[i].setAttribute(splitElement[0], allLanguages[lang][splitElement[1]]);
            }
        }
    }
}

function notification(text) {
    let n = document.createElement("DIV");
    let z = document.createTextNode(text);
    n.classList.add("topNotification", "rightNotif");
    n.appendChild(z);

    document.getElementById("newNotifs").prepend(n);
    /*setTimeout(function(){
        let x = document.getElementById("newNotifs");
        x.removeChild(x.lastChild);
    },5000);*/
}
function updateRecentGames() {
    document.getElementById("recentGamesMenuBtn").style.display = "block";
    document.getElementById("recentGamesList").innerHTML = "";
    let j = JSON.parse(window.localStorage["recentGames"]);
    for (let i = 0; i < j.length; i++) {
        let x = document.createElement("a");
        x.classList.add("mainMenuButtons");
        x.innerText = allLanguages[lang]["recentGamesMenuAgainst"].replace("%player", j[i].name);
        x.setAttribute("onclick", `recentGame(${j[i].id})`);
        document.getElementById("recentGamesList").appendChild(x);
    }
}
function testIfTouch() {
    return "ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
}
function isNeighbour(id1, id2) {
    for (let i = 0; i < neighbours[id1].length; i++) {
        if (neighbours[id1][i] === id2) return true;
    }
    return false;
}
function openMenu(id) {
    document.getElementById(id).style.display = "inline-block";
    menusStack.push(id);
    setTimeout(() => {
        document.getElementById(id).style.opacity = "1";
        document.getElementById(id).style.transform = "translate(-50%,-50%)";
    }, 100);
    for (let i = 0; i < menusStack.length; i++) {
        document.getElementById(menusStack[i]).style.zIndex = i + 100;
    }
}
function closeMenu(id) {
    document.getElementById(id).style.opacity = "0";
    document.getElementById(id).style.transform = "translate(-50%,-60%)";
    menusStack.remove(id);
    setTimeout(() => {
        document.getElementById(id).style.display = "none";
    }, 500);
    for (let i = 0; i < menusStack.length; i++) {
        document.getElementById(menusStack[i]).style.zIndex = i + 100;
    }
}
function generateName(){let e=["abandoned","able","absolute","adorable","adventurous","academic","acceptable","acclaimed","accomplished","accurate","aching","acidic","acrobatic","active","actual","adept","admirable","admired","adolescent","adorable","adored","advanced","afraid","affectionate","aged","aggravating","aggressive","agile","agitated","agonizing","agreeable","ajar","alarmed","alarming","alert","alienated","alive","all","altruistic","amazing","ambitious","ample","amused","amusing","anchored","ancient","angelic","angry","anguished","animated","annual","another","antique","anxious","any","apprehensive","appropriate","apt","arctic","arid","aromatic","artistic","ashamed","assured","astonishing","athletic","attached","attentive","attractive","austere","authentic","authorized","automatic","avaricious","average","aware","awesome","awful","awkward","babyish","bad","back","baggy","bare","barren","basic","beautiful","belated","beloved","beneficial","better","best","bewitched","big","big-hearted","biodegradable","bite-sized","bitter","black","black-and-white","bland","blank","blaring","bleak","blind","blissful","blond","blue","blushing","bogus","boiling","bold","bony","boring","bossy","both","bouncy","bountiful","bowed","brave","breakable","brief","bright","brilliant","brisk","broken","bronze","brown","bruised","bubbly","bulky","bumpy","buoyant","burdensome","burly","bustling","busy","buttery","buzzing","calculating","calm","candid","canine","capital","carefree","careful","careless","caring","cautious","cavernous","celebrated","charming","cheap","cheerful","cheery","chief","chilly","chubby","circular","classic","clean","clear","clear-cut","clever","close","closed","cloudy","clueless","clumsy","cluttered","coarse","cold","colorful","colorless","colossal","comfortable","common","compassionate","competent","complete","complex","complicated","composed","concerned","concrete","confused","conscious","considerate","constant","content","conventional","cooked","cool","cooperative","coordinated","corny","corrupt","costly","courageous","courteous","crafty","crazy","creamy","creative","creepy","criminal","crisp","critical","crooked","crowded","cruel","crushing","cuddly","cultivated","cultured","cumbersome","curly","curvy","cute","cylindrical","damaged","damp","dangerous","dapper","daring","darling","dark","dazzling","deadly","deafening","dear","dearest","decent","decimal","decisive","deep","defenseless","defensive","defiant","deficient","definite","definitive","delayed","delectable","delicious","delightful","delirious","demanding","dense","dental","dependable","dependent","descriptive","deserted","detailed","determined","devoted","different","difficult","digital","diligent","dim","dimpled","dimwitted","direct","disastrous","discrete","disfigured","disgusting","disloyal","dismal","distant","downright","dreary","dirty","disguised","dishonest","dismal","distant","distinct","distorted","dizzy","dopey","doting","double","downright","drab","drafty","dramatic","dreary","droopy","dry","dual","dull","dutiful","each","eager","earnest","early","easy","easy-going","ecstatic","edible","educated","elaborate","elastic","elated","elderly","electric","elegant","elementary","elliptical","embarrassed","embellished","eminent","emotional","empty","enchanted","enchanting","energetic","enlightened","enormous","enraged","entire","envious","equal","equatorial","essential","esteemed","ethical","euphoric","even","evergreen","everlasting","every","evil","exalted","excellent","exemplary","exhausted","excitable","excited","exciting","exotic","expensive","experienced","expert","extraneous","extroverted","extra-large","extra-small","fabulous","failing","faint","fair","faithful","fake","false","familiar","famous","fancy","fantastic","far","faraway","far-flung","far-off","fast","fat","fatal","fatherly","favorable","favorite","fearful","fearless","feisty","feline","female","feminine","few","fickle","filthy","fine","finished","firm","first","firsthand","fitting","fixed","flaky","flamboyant","flashy","flat","flawed","flawless","flickering","flimsy","flippant","flowery","fluffy","fluid","flustered","focused","fond","foolhardy","foolish","forceful","forked","formal","forsaken","forthright","fortunate","fragrant","frail","frank","frayed","free","French","fresh","frequent","friendly","frightened","frightening","frigid","frilly","frizzy","frivolous","front","frosty","frozen","frugal","fruitful","full","fumbling","functional","funny","fussy","fuzzy","gargantuan","gaseous","general","generous","gentle","genuine","giant","giddy","gigantic","gifted","giving","glamorous","glaring","glass","gleaming","gleeful","glistening","glittering","gloomy","glorious","glossy","glum","golden","good","good-natured","gorgeous","graceful","gracious","grand","grandiose","granular","grateful","grave","gray","great","greedy","green","gregarious","grim","grimy","gripping","grizzled","gross","grotesque","grouchy","grounded","growing","growling","grown","grubby","gruesome","grumpy","guilty","gullible","gummy","hairy","half","handmade","handsome","handy","happy","happy-go-lucky","hard","hard-to-find","harmful","harmless","harmonious","harsh","hasty","hateful","haunting","healthy","heartfelt","hearty","heavenly","heavy","hefty","helpful","helpless","hidden","hideous","high","high-level","hilarious","hoarse","hollow","homely","honest","honorable","honored","hopeful","horrible","hospitable","hot","huge","humble","humiliating","humming","humongous","hungry","hurtful","husky","icky","icy","ideal","idealistic","identical","idle","idiotic","idolized","ignorant","ill","illegal","ill-fated","ill-informed","illiterate","illustrious","imaginary","imaginative","immaculate","immaterial","immediate","immense","impassioned","impeccable","impartial","imperfect","imperturbable","impish","impolite","important","impossible","impractical","impressionable","impressive","improbable","impure","inborn","incomparable","incompatible","incomplete","inconsequential","incredible","indelible","inexperienced","indolent","infamous","infantile","infatuated","inferior","infinite","informal","innocent","insecure","insidious","insignificant","insistent","instructive","insubstantial","intelligent","intent","intentional","interesting","internal","international","intrepid","ironclad","irresponsible","irritating","itchy","jaded","jagged","jam-packed","jaunty","jealous","jittery","joint","jolly","jovial","joyful","joyous","jubilant","judicious","juicy","jumbo","junior","jumpy","juvenile","kaleidoscopic","keen","key","kind","kindhearted","kindly","klutzy","knobby","knotty","knowledgeable","knowing","known","kooky","kosher","lame","lanky","large","last","lasting","late","lavish","lawful","lazy","leading","lean","leafy","left","legal","legitimate","light","lighthearted","likable","likely","limited","limp","limping","linear","lined","liquid","little","live","lively","livid","loathsome","lone","lonely","long","long-term","loose","lopsided","lost","loud","lovable","lovely","loving","low","loyal","lucky","lumbering","luminous","lumpy","lustrous","luxurious","mad","made-up","magnificent","majestic","major","male","mammoth","married","marvelous","masculine","massive","mature","meager","mealy","mean","measly","meaty","medical","mediocre","medium","meek","mellow","melodic","memorable","menacing","merry","messy","metallic","mild","milky","mindless","miniature","minor","minty","miserable","miserly","misguided","misty","mixed","modern","modest","moist","monstrous","monthly","monumental","moral","mortified","motherly","motionless","mountainous","muddy","muffled","multicolored","mundane","murky","mushy","musty","muted","mysterious","naive","narrow","nasty","natural","naughty","nautical","near","neat","necessary","needy","negative","neglected","negligible","neighboring","nervous","new","next","nice","nifty","nimble","nippy","nocturnal","noisy","nonstop","normal","notable","noted","noteworthy","novel","noxious","numb","nutritious","nutty","obedient","obese","oblong","oily","oblong","obvious","occasional","odd","oddball","offbeat","offensive","official","old","old-fashioned","only","open","optimal","optimistic","opulent","orange","orderly","organic","ornate","ornery","ordinary","original","other","our","outlying","outgoing","outlandish","outrageous","outstanding","oval","overcooked","overdue","overjoyed","overlooked","palatable","pale","paltry","parallel","parched","partial","passionate","past","pastel","peaceful","peppery","perfect","perfumed","periodic","perky","personal","pertinent","pesky","pessimistic","petty","phony","physical","piercing","pink","pitiful","plain","plaintive","plastic","playful","pleasant","pleased","pleasing","plump","plush","polished","polite","political","pointed","pointless","poised","poor","popular","portly","posh","positive","possible","potable","powerful","powerless","practical","precious","present","prestigious","pretty","precious","previous","pricey","prickly","primary","prime","pristine","private","prize","probable","productive","profitable","profuse","proper","proud","prudent","punctual","pungent","puny","pure","purple","pushy","putrid","puzzled","puzzling","quaint","qualified","quarrelsome","quarterly","queasy","querulous","questionable","quick","quick-witted","quiet","quintessential","quirky","quixotic","quizzical","radiant","ragged","rapid","rare","rash","raw","recent","reckless","rectangular","ready","real","realistic","reasonable","red","reflecting","regal","regular","reliable","relieved","remarkable","remorseful","remote","repentant","required","respectful","responsible","repulsive","revolving","rewarding","rich","rigid","right","ringed","ripe","roasted","robust","rosy","rotating","rotten","rough","round","rowdy","royal","rubbery","rundown","ruddy","rude","runny","rural","rusty","sad","safe","salty","same","sandy","sane","sarcastic","sardonic","satisfied","scaly","scarce","scared","scary","scented","scholarly","scientific","scornful","scratchy","scrawny","second","secondary","second-hand","secret","self-assured","self-reliant","selfish","sentimental","separate","serene","serious","serpentine","several","severe","shabby","shadowy","shady","shallow","shameful","shameless","sharp","shimmering","shiny","shocked","shocking","shoddy","short","short-term","showy","shrill","shy","sick","silent","silky","silly","silver","similar","simple","simplistic","sinful","single","sizzling","skeletal","skinny","sleepy","slight","slim","slimy","slippery","slow","slushy","small","smart","smoggy","smooth","smug","snappy","snarling","sneaky","sniveling","snoopy","sociable","soft","soggy","solid","somber","some","spherical","sophisticated","sore","sorrowful","soulful","soupy","sour","Spanish","sparkling","sparse","specific","spectacular","speedy","spicy","spiffy","spirited","spiteful","splendid","spotless","spotted","spry","square","squeaky","squiggly","stable","staid","stained","stale","standard","starchy","stark","starry","steep","sticky","stiff","stimulating","stingy","stormy","straight","strange","steel","strict","strident","striking","striped","strong","studious","stunning","stupendous","stupid","sturdy","stylish","subdued","submissive","substantial","subtle","suburban","sudden","sugary","sunny","super","superb","superficial","superior","supportive","sure-footed","surprised","suspicious","svelte","sweaty","sweet","sweltering","swift","sympathetic","tall","talkative","tame","tan","tangible","tart","tasty","tattered","taut","tedious","teeming","tempting","tender","tense","tepid","terrible","terrific","testy","thankful","that","these","thick","thin","third","thirsty","this","thorough","thorny","those","thoughtful","threadbare","thrifty","thunderous","tidy","tight","timely","tinted","tiny","tired","torn","total","tough","traumatic","treasured","tremendous","tragic","trained","tremendous","triangular","tricky","trifling","trim","trivial","troubled","true","trusting","trustworthy","trusty","truthful","tubby","turbulent","twin","ugly","ultimate","unacceptable","unaware","uncomfortable","uncommon","unconscious","understated","unequaled","uneven","unfinished","unfit","unfolded","unfortunate","unhappy","unhealthy","uniform","unimportant","unique","united","unkempt","unknown","unlawful","unlined","unlucky","unnatural","unpleasant","unrealistic","unripe","unruly","unselfish","unsightly","unsteady","unsung","untidy","untimely","untried","untrue","unused","unusual","unwelcome","unwieldy","unwilling","unwitting","unwritten","upbeat","upright","upset","urban","usable","used","useful","useless","utilized","utter","vacant","vague","vain","valid","valuable","vapid","variable","vast","velvety","venerated","vengeful","verifiable","vibrant","vicious","victorious","vigilant","vigorous","villainous","violet","violent","virtual","virtuous","visible","vital","vivacious","vivid","voluminous","wan","warlike","warm","warmhearted","warped","wary","wasteful","watchful","waterlogged","watery","wavy","wealthy","weak","weary","webbed","wee","weekly","weepy","weighty","weird","welcome","well-documented","well-groomed","well-informed","well-lit","well-made","well-off","well-to-do","well-worn","wet","which","whimsical","whirlwind","whispered","white","whole","whopping","wicked","wide","wide-eyed","wiggly","wild","willing","wilted","winding","windy","winged","wiry","wise","witty","wobbly","woeful","wonderful","wooden","woozy","wordy","worldly","worn","worried","worrisome","worse","worst","worthless","worthwhile","worthy","wrathful","wretched","writhing","wrong","wry","yawning","yearly","yellow","yellowish","young","youthful","yummy","zany","zealous","zesty","zigzag","rocky"],i=["people","history","way","art","world","information","map","family","government","health","system","computer","meat","year","thanks","music","person","reading","method","data","food","understanding","theory","law","bird","literature","problem","software","control","knowledge","power","ability","economics","love","internet","television","science","library","nature","fact","product","idea","temperature","investment","area","society","activity","story","industry","media","thing","oven","community","definition","safety","quality","development","language","management","player","variety","video","week","security","country","exam","movie","organization","equipment","physics","analysis","policy","series","thought","basis","boyfriend","direction","strategy","technology","army","camera","freedom","paper","environment","child","instance","month","truth","marketing","university","writing","article","department","difference","goal","news","audience","fishing","growth","income","marriage","user","combination","failure","meaning","medicine","philosophy","teacher","communication","night","chemistry","disease","disk","energy","nation","road","role","soup","advertising","location","success","addition","apartment","education","math","moment","painting","politics","attention","decision","event","property","shopping","student","wood","competition","distribution","entertainment","office","population","president","unit","category","cigarette","context","introduction","opportunity","performance","driver","flight","length","magazine","newspaper","relationship","teaching","cell","dealer","debate","finding","lake","member","message","phone","scene","appearance","association","concept","customer","death","discussion","housing","inflation","insurance","mood","woman","advice","blood","effort","expression","importance","opinion","payment","reality","responsibility","situation","skill","statement","wealth","application","city","county","depth","estate","foundation","grandmother","heart","perspective","photo","recipe","studio","topic","collection","depression","imagination","passion","percentage","resource","setting","ad","agency","college","connection","criticism","debt","description","memory","patience","secretary","solution","administration","aspect","attitude","director","personality","psychology","recommendation","response","selection","storage","version","alcohol","argument","complaint","contract","emphasis","highway","loss","membership","possession","preparation","steak","union","agreement","cancer","currency","employment","engineering","entry","interaction","limit","mixture","preference","region","republic","seat","tradition","virus","actor","classroom","delivery","device","difficulty","drama","election","engine","football","guidance","hotel","match","owner","priority","protection","suggestion","tension","variation","anxiety","atmosphere","awareness","bread","climate","comparison","confusion","construction","elevator","emotion","employee","employer","guest","height","leadership","mall","manager","operation","recording","respect","sample","transportation","boring","charity","cousin","disaster","editor","efficiency","excitement","extent","feedback","guitar","homework","leader","mom","outcome","permission","presentation","promotion","reflection","refrigerator","resolution","revenue","session","singer","tennis","basket","bonus","cabinet","childhood","church","clothes","coffee","dinner","drawing","hair","hearing","initiative","judgment","lab","measurement","mode","mud","orange","poetry","police","possibility","procedure","queen","ratio","relation","restaurant","satisfaction","sector","signature","significance","song","tooth","town","vehicle","volume","wife","accident","airport","appointment","arrival","assumption","baseball","chapter","committee","conversation","database","enthusiasm","error","explanation","farmer","gate","girl","hall","historian","hospital","injury","instruction","maintenance","manufacturer","meal","perception","pie","poem","presence","proposal","reception","replacement","revolution","river","son","speech","tea","village","warning","winner","worker","writer","assistance","breath","buyer","chest","chocolate","conclusion","contribution","cookie","courage","desk","drawer","establishment","examination","garbage","grocery","honey","impression","improvement","independence","insect","inspection","inspector","king","ladder","menu","penalty","piano","potato","profession","professor","quantity","reaction","requirement","salad","sister","supermarket","tongue","weakness","wedding","affair","ambition","analyst","apple","assignment","assistant","bathroom","bedroom","beer","birthday","celebration","championship","cheek","client","consequence","departure","diamond","dirt","ear","fortune","friendship","funeral","gene","girlfriend","hat","indication","intention","lady","midnight","negotiation","obligation","passenger","pizza","platform","poet","pollution","recognition","reputation","shirt","speaker","stranger","surgery","sympathy","tale","throat","trainer","uncle","youth","time","work","film","water","money","example","while","business","study","game","life","form","air","day","place","number","part","field","fish","back","process","heat","hand","experience","job","book","end","point","type","home","economy","value","body","market","guide","interest","state","radio","course","company","price","size","card","list","mind","trade","line","care","group","risk","word","fat","force","key","light","training","name","school","top","amount","level","order","practice","research","sense","service","piece","web","boss","sport","fun","house","page","term","test","answer","sound","focus","matter","kind","soil","board","oil","picture","access","garden","range","rate","reason","future","site","demand","exercise","image","case","cause","coast","action","age","bad","boat","record","result","section","building","mouse","cash","class","period","plan","store","tax","side","subject","space","rule","stock","weather","chance","figure","man","model","source","beginning","earth","program","chicken","design","feature","head","material","purpose","question","rock","salt","act","birth","car","dog","object","scale","sun","note","profit","rent","speed","style","war","bank","craft","half","inside","outside","standard","bus","exchange","eye","fire","position","pressure","stress","advantage","benefit","box","frame","issue","step","cycle","face","item","metal","paint","review","room","screen","structure","view","account","ball","discipline","medium","share","balance","bit","black","bottom","choice","gift","impact","machine","shape","tool","wind","address","average","career","culture","morning","pot","sign","table","task","condition","contact","credit","egg","hope","ice","network","north","square","attempt","date","effect","link","post","star","voice","capital","challenge","friend","self","shot","brush","couple","exit","front","function","lack","living","plant","plastic","spot","summer","taste","theme","track","wing","brain","button","click","desire","foot","gas","influence","notice","rain","wall","base","damage","distance","feeling","pair","savings","staff","sugar","target","text","animal","author","budget","discount","file","ground","lesson","minute","officer","phase","reference","register","sky","stage","stick","title","trouble","bowl","bridge","campaign","character","club","edge","evidence","fan","letter","lock","maximum","novel","option","pack","park","quarter","skin","sort","weight","baby","background","carry","dish","factor","fruit","glass","joint","master","muscle","red","strength","traffic","trip","vegetable","appeal","chart","gear","ideal","kitchen","land","log","mother","net","party","principle","relative","sale","season","signal","spirit","street","tree","wave","belt","bench","commission","copy","drop","minimum","path","progress","project","sea","south","status","stuff","ticket","tour","angle","blue","breakfast","confidence","daughter","degree","doctor","dot","dream","duty","essay","father","fee","finance","hour","juice","luck","milk","mouth","peace","pipe","stable","storm","substance","team","trick","afternoon","bat","beach","blank","catch","chain","consideration","cream","crew","detail","gold","interview","kid","mark","mission","pain","pleasure","score","screw","sex","shop","shower","suit","tone","window","agent","band","bath","block","bone","calendar","candidate","cap","coat","contest","corner","court","cup","district","door","east","finger","garage","guarantee","hole","hook","implement","layer","lecture","lie","manner","meeting","nose","parking","partner","profile","rice","routine","schedule","swimming","telephone","tip","winter","airline","bag","battle","bed","bill","bother","cake","code","curve","designer","dimension","dress","ease","emergency","evening","extension","farm","fight","gap","grade","holiday","horror","horse","host","husband","loan","mistake","mountain","nail","noise","occasion","package","patient","pause","phrase","proof","race","relief","sand","sentence","shoulder","smoke","stomach","string","tourist","towel","vacation","west","wheel","wine","arm","aside","associate","bet","blow","border","branch","breast","brother","buddy","bunch","chip","coach","cross","document","draft","dust","expert","floor","golf","habit","iron","judge","knife","landscape","league","mail","mess","native","opening","parent","pattern","pin","pool","pound","request","salary","shame","shelter","shoe","silver","tackle","tank","trust","assist","bake","bar","bell","bike","blame","boy","brick","chair","closet","clue","collar","comment","conference","devil","diet","fear","fuel","glove","jacket","lunch","monitor","mortgage","nurse","pace","panic","peak","plane","reward","row","sandwich","shock","spite","spray","surprise","till","transition","weekend","welcome","yard","alarm","bend","bicycle","bite","blind","bottle","cable","candle","clerk","cloud","concert","counter","flower","grandfather","harm","knee","lawyer","leather","load","mirror","neck","pension","plate","purple","ruin","ship","skirt","slice","snow","specialist","stroke","switch","trash","tune","zone","anger","award","bid","bitter","boot","bug","camp","candy","carpet","cat","champion","channel","clock","comfort","cow","crack","engineer","entrance","fault","grass","guy","hell","highlight","incident","island","joke","jury","leg","lip","mate","motor","nerve","passage","pen","pride","priest","prize","promise","resident","resort","ring","roof","rope","sail","scheme","script","sock","station","toe","tower","truck","witness","can","will","other","use","make","good","look","help","go","great","being","still","public","read","keep","start","give","human","local","general","specific","long","play","feel","high","put","common","set","change","simple","past","big","possible","particular","major","personal","current","national","cut","natural","physical","show","try","check","second","call","move","pay","let","increase","single","individual","turn","ask","buy","guard","hold","main","offer","potential","professional","international","travel","cook","alternative","special","working","whole","dance","excuse","cold","commercial","low","purchase","deal","primary","worth","fall","necessary","positive","produce","search","present","spend","talk","creative","tell","cost","drive","green","support","glad","remove","return","run","complex","due","effective","middle","regular","reserve","independent","leave","original","reach","rest","serve","watch","beautiful","charge","active","break","negative","safe","stay","visit","visual","affect","cover","report","rise","walk","white","junior","pick","unique","classic","final","lift","mix","private","stop","teach","western","concern","familiar","fly","official","broad","comfortable","gain","rich","save","stand","young","heavy","lead","listen","valuable","worry","handle","leading","meet","release","sell","finish","normal","press","ride","secret","spread","spring","tough","wait","brown","deep","display","flow","hit","objective","shoot","touch","cancel","chemical","cry","dump","extreme","push","conflict","eat","fill","formal","jump","kick","opposite","pass","pitch","remote","total","treat","vast","abuse","beat","burn","deposit","print","raise","sleep","somewhere","advance","consist","dark","double","draw","equal","fix","hire","internal","join","kill","sensitive","tap","win","attack","claim","constant","drag","drink","guess","minor","pull","raw","soft","solid","wear","weird","wonder","annual","count","dead","doubt","feed","forever","impress","repeat","round","sing","slide","strip","wish","combine","command","dig","divide","equivalent","hang","hunt","initial","march","mention","spiritual","survey","tie","adult","brief","crazy","escape","gather","hate","prior","repair","rough","sad","scratch","sick","strike","employ","external","hurt","illegal","laugh","lay","mobile","nasty","ordinary","respond","royal","senior","split","strain","struggle","swim","train","upper","wash","yellow","convert","crash","dependent","fold","funny","grab","hide","miss","permit","quote","recover","resolve","roll","sink","slip","spare","suspect","sweet","swing","twist","upstairs","usual","abroad","brave","calm","concentrate","estimate","grand","male","mine","prompt","quiet","refuse","regret","reveal","rush","shake","shift","shine","steal","suck","surround","bear","brilliant","dare","dear","delay","drunk","female","hurry","inevitable","invite","kiss","neat","pop","punch","quit","reply","representative","resist","rip","rub","silly","smile","spell","stretch","stupid","tear","temporary","tomorrow","wake","wrap","yesterday","Thomas","Tom","Lieuwe"];return capFirst(e[getRandomInt(0,e.length+1)])+capFirst(i[getRandomInt(0,i.length+1)])}
function openVsDisplay(id) {
    document.getElementById(id).style.display = "block";
    setTimeout(() => {
        document.getElementById(id).style.opacity = "1";
        document.getElementById(id).style.transform = "translate(-50%,0) scale(1)";
        resizeUpdate();
    }, 100);
}
let timeout;
function closeVsDisplay(id) {
    document.getElementById(id).style.opacity = "0";
    document.getElementById(id).style.transform = "translate(-50%,0) scale(0)";
    setTimeout(() => {
        document.getElementById(id).style.display = "none";
        resizeUpdate();
    }, 500);
}
function openSettingsMenu() {
    openMenu("centerSettingsMenu");
    document.getElementById("centerMainMenu").style.filter = "brightness(0.7)";
}
function closeSettingsMenu() {
    closeMenu("centerSettingsMenu");
    document.getElementById("centerMainMenu").style.filter = "brightness(1)";
}
function openPlayMenu() {
    closeMenu("centerMainMenu");
    setTimeout(() => openMenu("playMenu"), 500);
}
function closePlayMenu() {
    closeMenu("playMenu");
    setTimeout(() => openMenu("centerMainMenu"), 500);
}
function closeCenterShareGameMenu() {
    closeMenu("centerShareGameMenu");
    window.location.hash = "#";
    document.getElementsByClassName("gameUI")[0].style.display = "none";
    document.getElementById("background").style.display = "block";
    setTimeout(() => openMenu("centerMainMenu"), 500);
}
function openRecentGamesMenu() {
    closeMenu("centerMainMenu");
    openMenu("recentGamesMenu");
}
function changeColorScheme(scheme, button) {
    var buttons = document.getElementsByClassName("colorSchemeButton");
    for (var i = 0; i < buttons.length; i++) {
        buttons[i].classList.remove("activeColorSchemeButton");
    }
    button.classList.add("activeColorSchemeButton");

    window.localStorage["colorScheme"] = scheme;

    applyColorScheme(eval(window.localStorage["colorScheme"]));
}
function applyColorScheme(scheme) {
    for (var i = 0; i < scheme.length; i++) {
        document.documentElement.style.setProperty("--" + scheme[i][0], scheme[i][1]);
        if (scheme[i][0] === "buttonBottom") {
            document.getElementById("themeColorMeta").setAttribute("content", scheme[i][1]);
        }
    }
}

function copyClip(id) {
    var copyText = document.getElementById(id);

    copyText.select();
    copyText.setSelectionRange(0, 99999);
    document.execCommand("copy");
    //Deselection
    if (window.getSelection) {
        window.getSelection().removeAllRanges();
    } else if (document.selection) {
        document.selection.empty();
    }
}
function rematchBtn() {
    if(offlineGameType){
        window.localStorage.removeItem("offlineGame");
        offlineGame();
        closeMenu("winnerMenu");
    }
}
function offlineGame() {
    offlineGameType = true;
    if(localStorage["offlineGame"] == undefined || localStorage["offlineGame"] == null){
        localStorage["offlineGame"] = JSON.stringify({
            p1: {pawns: {white:2,black:2}, name: "Light", turn: true, Oarea: "bottom"},
            p2: {pawns: {white:2,black:2}, name: "Dark", turn: false, Oarea: "top"},
            pawnReserve: {white:10,black:10},
            gameBoard: [null,null,null,null,null,null,null,null,null,"blackBot",null,"whiteBot","redBot",null,null,null,null,null,null,null,null,null,null,null],
            ended: false
        });
    }
    fetchGameState(JSON.parse(localStorage["offlineGame"]));
    document.getElementById("background").style.display = "none";
    document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
    closeMenu("playMenu");
    if (!JSON.parse(localStorage["offlineGame"]).ended) closeDarkerBg();

    openVsDisplay("ennemyDisplay");
    openVsDisplay("reserveInfo");
    resizeUpdate();
}
function onlineGame() {
    if (socket.connected) {
        beforeTime = Math.floor(new Date() / 1000);
        socket.emit("createroom", { GUID: localStorage["GUID"], name: localStorage["name"] });
        closeMenu("playMenu");
        openMenu("loader");
    } else {
        notification(allLanguages[lang]["serverError"]);
    }
}
/*window.onbeforeunload = function(){
    socket.disconnect();
};*/
window.onresize = resizeUpdate;

function resizeUpdate(event) {
    let boardHeight = document.getElementsByClassName("gameBoard")[0].clientHeight;
    let windowHeight = window.innerHeight;
    let boardWidth = document.getElementsByClassName("gameBoard")[0].clientWidth;
    let windowWidth = window.innerWidth;
    /*let padding = document.getElementById("yourTurnInfo").clientHeight + document.getElementById("ennemyDisplay").clientHeight + document.getElementById("placePawnMenu").clientHeight + document.getElementById("moveBotMenu").clientHeight;*/
    let padding = 100;
    if (windowWidth < windowHeight) {
        document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(1)`;
        let halfUINodes = document.getElementsByClassName("halfUI");
        for (let i = 0; i < halfUINodes.length; i++) {
            halfUINodes[i].style.display = "block";
            halfUINodes[i].style.width = "100%";
            halfUINodes[i].style.float = "none";
        }
        document.getElementsByClassName("gameBoardContainer")[0].style.width = "100%";

        if ((boardHeight * windowWidth) / ((boardWidth * 384) / 537) > windowHeight - padding) {
            let scaleCoef = (windowHeight - padding) / boardHeight;
            document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(${scaleCoef})`;
            if (area === "top") {
                document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(${scaleCoef}) rotate(180deg) translate(0,-100%)`;
                document.getElementsByClassName("leftVS")[0].classList.add("darkVS");
                document.getElementsByClassName("rightVS")[0].classList.add("lightVS");
                document.getElementsByClassName("leftVS")[0].classList.remove("lightVS");
                document.getElementsByClassName("rightVS")[0].classList.remove("darkVS");
            }else{
                document.getElementsByClassName("leftVS")[0].classList.add("lightVS");
                document.getElementsByClassName("rightVS")[0].classList.add("darkVS");
                document.getElementsByClassName("leftVS")[0].classList.remove("darkVS");
                document.getElementsByClassName("rightVS")[0].classList.remove("lightVS");
            }
        } else if ((boardWidth * 384) / 537 < windowWidth) {
            let scaleCoef = windowWidth / ((boardWidth * 384) / 537);
            document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(${scaleCoef})`;
            if (area === "top") {
                document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(${scaleCoef}) rotate(180deg) translate(0,-100%)`;
                document.getElementsByClassName("leftVS")[0].classList.add("darkVS");
                document.getElementsByClassName("rightVS")[0].classList.add("lightVS");
                document.getElementsByClassName("leftVS")[0].classList.remove("lightVS");
                document.getElementsByClassName("rightVS")[0].classList.remove("darkVS");
            }else{
                document.getElementsByClassName("leftVS")[0].classList.add("lightVS");
                document.getElementsByClassName("rightVS")[0].classList.add("darkVS");
                document.getElementsByClassName("leftVS")[0].classList.remove("darkVS");
                document.getElementsByClassName("rightVS")[0].classList.remove("lightVS");
            }
        }
    } else {
        document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(1)`;
        if (area === "top") {
            document.getElementsByClassName("gameBoardContainer")[0].style.transform = `scale(1) rotate(180deg) translate(0,-100%)`;
            document.getElementsByClassName("leftVS")[0].classList.add("darkVS");
            document.getElementsByClassName("rightVS")[0].classList.add("lightVS");
            document.getElementsByClassName("leftVS")[0].classList.remove("lightVS");
            document.getElementsByClassName("rightVS")[0].classList.remove("darkVS");
        }else{
            document.getElementsByClassName("leftVS")[0].classList.add("lightVS");
            document.getElementsByClassName("rightVS")[0].classList.add("darkVS");
            document.getElementsByClassName("leftVS")[0].classList.remove("darkVS");
            document.getElementsByClassName("rightVS")[0].classList.remove("lightVS");
        }
        let halfUINodes = document.getElementsByClassName("halfUI");
        for (let i = 0; i < halfUINodes.length; i++) {
            halfUINodes[i].style.display = "inline-block";
            halfUINodes[i].style.width = "50%";
            halfUINodes[i].style.float = "left";
        }
        document.getElementsByClassName("gameBoardContainer")[0].style.width = "50%";
    }
}
function openAvailableActionsMenu() {
    openDarkerBg();
    openMenu("availableActionsMenu");
    document.getElementsByClassName("darkerBg")[0].addEventListener("click", closeAvailableActionsMenu);
}
function closeAvailableActionsMenu() {
    closeDarkerBg();
    closeMenu("availableActionsMenu");
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", closeAvailableActionsMenu);
}
function openReloadEnergyMenu() {
    openMenu("reloadEnergyMenu");
    closeMenu("availableActionsMenu");
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", closeAvailableActionsMenu);
    document.getElementsByClassName("darkerBg")[0].addEventListener("click", cancelReloadPawnsButton);
}
function cancelReloadPawnsButton() {
    closeMenu("reloadEnergyMenu");
    openMenu("availableActionsMenu");
    document.getElementsByClassName("darkerBg")[0].addEventListener("click", closeAvailableActionsMenu);
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
    reload = { white: 0, black: 0 };
    document.getElementById("pawnsReloadContainer").innerHTML = "";
    document.getElementById("reloadPawnsShowNew").innerText = "";
    document.getElementById("confirmReloadButton").style.display = "none";
    document.getElementById("reserveWhite").innerText = reserve.white;
    document.getElementById("reserveBlack").innerText = reserve.black;
}
function placingPawnChange(d) {
    placingPawn = d;
    let buttons = document.getElementsByClassName("pawnPlaceButton");
    for (var i = 0; i < buttons.length; i++) {
        buttons[i].classList.remove("activeColorSchemeButton");
    }
    if (d == "whitePawn") {
        buttons[0].classList.add("activeColorSchemeButton");
    } else {
        buttons[1].classList.add("activeColorSchemeButton");
    }
}
function sendReloadValue() {
    if (!offlineGameType){
        socket.emit("reloadPawns", reload);
        reload = { white: 0, black: 0 };
        document.getElementById("reloadPawnsShowNew").innerText = "";
        document.getElementById("confirmReloadButton").style.display = "none";
        document.getElementById("pawnsReloadContainer").innerHTML = "";
        document.getElementById("reserveWhite").innerText = reserve.white;
        document.getElementById("reserveBlack").innerText = reserve.black;
        closeMenu("reloadEnergyMenu");
        openMenu("availableActionsMenu");
    }else{
        let game = JSON.parse(localStorage["offlineGame"]);
        if(game.p1.turn){
            if (game.p1.pawns.white + game.p1.pawns.black < 4) {
                if (reload.white + reload.black == 4 - game.p1.pawns.white - game.p1.pawns.black || game.pawnReserve.white - reload.white === 0 || game.pawnReserve.black - reload.black === 0) {
                    if (reload.white <= game.pawnReserve.white && reload.black <= game.pawnReserve.black) {
                        game.pawnReserve.white -= reload.white;
                        game.pawnReserve.black -= reload.black;

                        game.p1.pawns.white += reload.white;
                        game.p1.pawns.black += reload.black;

                        game.p1.turn = false;

                        closeMenu("reloadEnergyMenu");
                        closeMenu("availableActionsMenu");

                        if (game.pawnReserve.white === 0 || game.pawnReserve.black === 0) {
                            if (findWinner(game.gameBoard)) {
                                document.getElementById("winnerName").innerText = game.p1.name + " won!";

                                openMenu("winnerMenu");
                                document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
                                openDarkerBg();
                                document.getElementById("yourTurnInfo").style.display = "none";
                            } else {
                                document.getElementById("winnerName").innerText = game.p2.name + " won!";

                                openMenu("winnerMenu");
                                document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
                                openDarkerBg();
                                document.getElementById("yourTurnInfo").style.display = "none";
                            }
                            game.ended = true;
                        } else {
                            closeDarkerBg();
                            game.p2.turn = true;
                        }
                    }
                }
            }
        }else if (game.p2.turn) {
            if (game.p2.pawns.white + game.p2.pawns.black < 4) {
                if (reload.white + reload.black == 4 - game.p2.pawns.white - game.p2.pawns.black || game.pawnReserve.white - reload.white === 0 || game.pawnReserve.black - reload.black === 0) {
                    if (reload.white <= game.pawnReserve.white && reload.black <= game.pawnReserve.black) {
                        game.pawnReserve.white -= reload.white;
                        game.pawnReserve.black -= reload.black;

                        game.p2.pawns.white += reload.white;
                        game.p2.pawns.black += reload.black;

                        game.p2.turn = false;

                        closeMenu("reloadEnergyMenu");
                        closeMenu("availableActionsMenu");

                        if (game.pawnReserve.white === 0 || game.pawnReserve.black === 0) {
                            if (findWinner(game.gameBoard)) {
                                document.getElementById("winnerName").innerText = game.p1.name + " won!";

                                openMenu("winnerMenu");
                                document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
                                openDarkerBg();
                                document.getElementById("yourTurnInfo").style.display = "none";
                            } else {
                                document.getElementById("winnerName").innerText = game.p2.name + " won!";

                                openMenu("winnerMenu");
                                document.getElementsByClassName("darkerBg")[0].removeEventListener("click", cancelReloadPawnsButton);
                                openDarkerBg();
                                document.getElementById("yourTurnInfo").style.display = "none";
                            }
                            game.ended = true;
                        } else {
                            closeDarkerBg();
                            game.p1.turn = true;
                        }
                    }
                }
            }
        }

        fetchGameState(game);
        localStorage["offlineGame"] = JSON.stringify(game);
        reload = { white: 0, black: 0 };
    }
}
function findWinner(gameBoard){
    let p1Count = 0, p2Count = 0;
    for (let i = 0; i < gameBoard.length; i++) {
        if(gameBoard[i] === "blackBot" || gameBoard[i] === "whiteBot" || gameBoard[i] === "redBot"){
            if(i <= 9 || i === 13 || i === 11){
                p2Count++;
            }else{
                p1Count++;
            }
        }
    }
    //True is p1, false is p2
    return p1Count > p2Count;
}
function addToReload(p) {
    if (reload.white + reload.black === toreload) return;
    if (isNaN(reload.white)|| isNaN(reload.black)) cancelReloadPawnsButton();
    if (p === "whitePawn") {
        if (parseInt(document.getElementById("reserveWhite").innerText) === 0) return;
        else {
            document.getElementById("reserveWhite").innerText--;
            reload.white++;
        }
    } else if (p === "blackPawn") {
        if (parseInt(document.getElementById("reserveBlack").innerText) === 0) return;
        else {
            document.getElementById("reserveBlack").innerText--;
            reload.black++;
        }
    }
    let dot = document.createElement("div");
    dot.classList.add("pawnDot");
    if (p === "whitePawn") dot.classList.add("whitePawnDot");

    document.getElementById("reloadPawnsShowNew").innerText = allLanguages[lang]["energyPawnsReloadDescritpion"];
    document.getElementById("confirmReloadButton").style.display = "block";
    document.getElementById("pawnsReloadContainer").appendChild(dot);
}
function closeRecentGamesMenu() {
    closeMenu("recentGamesMenu");
    openMenu("centerMainMenu");
}
function fetchGameState(gameState){
    let you, ennemy;
    if (tutorial){
        document.getElementById("myPawns").innerHTML = "";
        document.getElementById("ennemyPawns").innerHTML = "";
        for (let i = 0; i < gameState.p1.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p1.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p2.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p2.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
    }else if (offlineGameType){
        document.getElementById("yourName").innerText = gameState.p1.name;
        document.getElementById("ennemyName").innerText = gameState.p2.name;

        clearHighlightedCells();
        movingBot = false;
        placingPawn = false;
        gameBoard = gameState.gameBoard;


        if (gameState.p1.turn){
            you = gameState.p1;
            ennemy = gameState.p2;
        }else{
            you = gameState.p2;
            ennemy = gameState.p1;
        }
        document.getElementById("thinking").style.display = "none";
        if (you.turn) {
            document.getElementById("yourTurnInfo").style.display = "block";
        }else{
            document.getElementById("yourTurnInfo").style.display = "none";
        }
        document.getElementById("myPawns").innerHTML = "";
        document.getElementById("ennemyPawns").innerHTML = "";
        for (let i = 0; i < gameState.p1.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p1.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p2.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        for (let i = 0; i < gameState.p2.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        document.getElementById("placePawnWhite").innerText = you.pawns.white;
        document.getElementById("placePawnBlack").innerText = you.pawns.black;

        let tableOverlay = document.getElementsByClassName("tableOverlay")[0];
        tableOverlay.innerHTML = "";
        for (let i = 0; i < gameState.gameBoard.length; i++) {
            let x = document.createElement("img");
            x.classList.add("boardElement");
            x.classList.add("botBoardElement");
            if (gameState.gameBoard[i] == "blackBot") {
                x.setAttribute("src", forImage("BlackRobot"));
                x.id = "blackBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whiteBot") {
                x.setAttribute("src", forImage("WhiteRobot"));
                x.id = "whiteBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "redBot") {
                x.setAttribute("src", forImage("RedRobot"));
                x.id = "redBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "blackPawn") {
                x.setAttribute("src", forImage("blackPawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whitePawn") {
                x.setAttribute("src", forImage("whitePawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            }
        }
        reserve = gameState.pawnReserve;

        document.getElementById("reserveWhite").innerText = gameState.pawnReserve.white;
        document.getElementById("reserveBlack").innerText = gameState.pawnReserve.black;
        document.getElementById("topReserveWhite").innerText = gameState.pawnReserve.white;
        document.getElementById("topReserveBlack").innerText = gameState.pawnReserve.black;
        document.getElementById("textReloadPawns").innerText = allLanguages[lang]["energyPawnsReloadAction"].replace("%actual", you.pawns.white + you.pawns.black).replace("%future", 4 - you.pawns.white - you.pawns.black);
        document.getElementById("yourTurnDesc").innerText = allLanguages[lang]["yourTurnDescOffline"].replace("%name", you.name);
        document.getElementById("pawnsReloadContainer").innerHTML = "";

        document.getElementById("reloadPawnsShowNew").innerText = "";
        document.getElementById("confirmReloadButton").style.display = "none";

        toreload = 4 - you.pawns.white - you.pawns.black;

        if (you.pawns.white + you.pawns.black === 4) {
            document.getElementById("reloadEnergyOptionButton").classList.add("disabledOptionButton");
            document.getElementById("placePawnOptionButton").classList.remove("disabledOptionButton");
        } else if (you.pawns.white + you.pawns.black === 0) {
            document.getElementById("placePawnOptionButton").classList.add("disabledOptionButton");
        } else {
            document.getElementById("reloadEnergyOptionButton").classList.remove("disabledOptionButton");
            document.getElementById("placePawnOptionButton").classList.remove("disabledOptionButton");
        }

        let buttons = document.getElementsByClassName("pawnPlaceButton");
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].classList.remove("activeColorSchemeButton");
        }
        if (gameState.ended) {
            openMenu("winnerMenu");
            openDarkerBg();
        }
    }else{
        movingBot = false;
        clearHighlightedCells();
        if (gameState.p1.you) {
            you = gameState.p1;
            ennemy = gameState.p2;
        } else {
            you = gameState.p2;
            ennemy = gameState.p1;
        }

        let recentGames = JSON.parse(localStorage["recentGames"]);
        for (let i = 0; i < recentGames.length; i++) {
            if (recentGames[i].id === gameState.id) {
                recentGames.splice(i, 1);
            }
        }
        recentGames.push({id: gameState.id, name: ennemy.name});

        localStorage["recentGames"] = JSON.stringify(recentGames);

        if (ennemy.turn) document.getElementById("thinking").style.display = "inline-block";
        else document.getElementById("thinking").style.display = "none";

        gameBoard = gameState.gameBoard;
        area = you.area;

        if (you.turn) {
            document.getElementById("yourTurnInfo").style.display = "block";
        } else {
            document.getElementById("yourTurnInfo").style.display = "none";
        }
        placingPawn = false;
        document.getElementById("yourName").innerText = you.name;
        document.getElementById("ennemyName").innerText = ennemy.name;

        document.getElementById("myPawns").innerHTML = "";
        document.getElementById("ennemyPawns").innerHTML = "";
        for (let i = 0; i < you.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < you.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("myPawns").appendChild(dot);
        }
        for (let i = 0; i < ennemy.pawns.black; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        for (let i = 0; i < ennemy.pawns.white; i++) {
            let dot = document.createElement("div");
            dot.classList.add("pawnDot");
            dot.classList.add("whitePawnDot");
            document.getElementById("ennemyPawns").appendChild(dot);
        }
        document.getElementById("placePawnWhite").innerText = you.pawns.white;
        document.getElementById("placePawnBlack").innerText = you.pawns.black;
        //Clear displayed game board
        let tableOverlay = document.getElementsByClassName("tableOverlay")[0];
        tableOverlay.innerHTML = "";
        for (let i = 0; i < gameState.gameBoard.length; i++) {
            let x = document.createElement("img");
            if (area === "top") {
                x.classList.add("botTopArea");
            }
            x.classList.add("boardElement");
            x.classList.add("botBoardElement");
            if (gameState.gameBoard[i] == "blackBot") {
                x.setAttribute("src", forImage("BlackRobot"));
                x.id = "blackBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whiteBot") {
                x.setAttribute("src", forImage("WhiteRobot"));
                x.id = "whiteBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "redBot") {
                x.setAttribute("src", forImage("RedRobot"));
                x.id = "redBot";
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "blackPawn") {
                x.setAttribute("src", forImage("blackPawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            } else if (gameState.gameBoard[i] == "whitePawn") {
                x.setAttribute("src", forImage("whitePawn"));
                x.style.top = positionInBoardById[i][0] + "%";
                x.style.left = positionInBoardById[i][1] + "%";
                x.id = `boardOverlayPawn${i}`;
                tableOverlay.appendChild(x);
            } else {

            }
        }
        reserve = gameState.pawnReserve;
        document.getElementById("reserveWhite").innerText = gameState.pawnReserve.white;
        document.getElementById("reserveBlack").innerText = gameState.pawnReserve.black;
        document.getElementById("topReserveWhite").innerText = gameState.pawnReserve.white;
        document.getElementById("topReserveBlack").innerText = gameState.pawnReserve.black;
        document.getElementById("textReloadPawns").innerText = allLanguages[lang]["energyPawnsReloadAction"].replace("%actual", you.pawns.white + you.pawns.black).replace("%future", 4 - you.pawns.white - you.pawns.black);
        document.getElementById("yourTurnDesc").innerText = allLanguages[lang]["yourTurnDesc"];
        document.getElementById("pawnsReloadContainer").innerHTML = "";

        document.getElementById("reloadPawnsShowNew").innerText = "";
        document.getElementById("confirmReloadButton").style.display = "none";

        toreload = 4 - you.pawns.white - you.pawns.black;

        if (you.pawns.white + you.pawns.black === 4) {
            document.getElementById("reloadEnergyOptionButton").classList.add("disabledOptionButton");
            document.getElementById("placePawnOptionButton").classList.remove("disabledOptionButton");
        } else if (you.pawns.white + you.pawns.black === 0) {
            document.getElementById("placePawnOptionButton").classList.add("disabledOptionButton");
        } else {
            document.getElementById("reloadEnergyOptionButton").classList.remove("disabledOptionButton");
            document.getElementById("placePawnOptionButton").classList.remove("disabledOptionButton");
        }

        let buttons = document.getElementsByClassName("pawnPlaceButton");
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].classList.remove("activeColorSchemeButton");
        }
        if (gameState.ended) {
            openMenu("winnerMenu");
            openDarkerBg();
        }
    }
}
function placePawnOption() {
    closeMenu("availableActionsMenu");
    closeDarkerBg();
    openVsDisplay("placePawnMenu");
    document.getElementById("yourTurnInfo").style.display = "none";
}
function cancelPlacePawnOption() {
    placingPawn = false;
    openMenu("availableActionsMenu");
    openDarkerBg();
    closeVsDisplay("placePawnMenu");
    document.getElementById("yourTurnInfo").style.display = "block";
}

function clearHighlightedCells() {
    try {
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
        document.getElementsByClassName("highlightedCells")[0].classList.remove("highlightedCells");
    } catch (e) {}
}
function showIds() {
    let tableOverlay = document.getElementsByClassName("tableOverlay")[0];
    tableOverlay.innerHTML = "";
    for (let i = 0; i < 24; i++) {
        x = document.createElement("span");
        x.classList.add("boardElement");
        x.style.fontSize = "40px";
        x.innerText = i;
        x.style.top = positionInBoardById[i][0] + "%";
        x.style.left = positionInBoardById[i][1] + "%";
        tableOverlay.appendChild(x);
    }
}
function boardClick(element, n) {
    if (placingPawn) {
        if (!offlineGameType) socket.emit("placingPawn", { color: placingPawn, pos: n });
        else{
            let gameState = JSON.parse(localStorage["offlineGame"]);
            if(gameState.p1.turn){
                if(placingPawn == "whitePawn" && gameState.p1.pawns.white >= 1){
                    if (gameState.gameBoard[n] == null){
                        gameState.gameBoard[n] = "whitePawn";
                        gameState.p1.pawns.white--;
                    }else return;
                }else if(placingPawn == "blackPawn" && gameState.p1.pawns.black >= 1){
                    if (gameState.gameBoard[n] == null){
                        gameState.gameBoard[n] = "blackPawn";
                        gameState.p1.pawns.black--;
                    }else return;
                }else return;
                gameState.p1.turn = false;
                gameState.p2.turn = true;
            }else if (gameState.p2.turn){
                if(placingPawn == "whitePawn" && gameState.p2.pawns.white >= 1){
                    if (gameState.gameBoard[n] == null){
                        gameState.gameBoard[n] = "whitePawn";
                        gameState.p2.pawns.white--;
                    }else return;
                }else if(placingPawn == "blackPawn" && gameState.p2.pawns.black >= 1){
                    if (gameState.gameBoard[n] == null){
                        gameState.gameBoard[n] = "blackPawn";
                        gameState.p2.pawns.black--;
                    }else return;
                }else return;
                gameState.p1.turn = true;
                gameState.p2.turn = false;
            }
            closeVsDisplay("placePawnMenu");
            fetchGameState(gameState);
            localStorage["offlineGame"] = JSON.stringify(gameState);
        }
    } else if (movingBot) {
        if (gameBoard[n] === "blackBot" || gameBoard[n] === "whiteBot" || gameBoard[n] === "redBot") {
            clearHighlightedCells();
            element.firstElementChild.classList.add("highlightedCells");
            movingBotPath.bot = gameBoard[n];
            movingBotPath.path = [n];
            document.getElementById("confirmRobotPath").style.display = "none";
        } else if (
            (gameBoard[n] === "blackPawn" && movingBotPath.bot === "blackBot") ||
            (gameBoard[n] === "whitePawn" && movingBotPath.bot === "whiteBot") ||
            ((gameBoard[n] === "blackPawn" || gameBoard[n] === "whitePawn") && movingBotPath.bot === "redBot")
        ) {
            if (isNeighbour(n, movingBotPath.path[movingBotPath.path.length - 1])) {
                element.firstElementChild.classList.add("highlightedCells");
                movingBotPath.path.push(n);
                document.getElementById("confirmRobotPath").style.display = "block";
            }
        }
    }
}
function updateName() {
    socket.emit("updateName", document.getElementById("nameTextInput").value);
    localStorage["name"] = document.getElementById("nameTextInput").value;
}
function confirmRobotPath() {
    if(!offlineGameType) socket.emit("moveRobot", movingBotPath);
    else{
        let game = JSON.parse(localStorage["offlineGame"]);
        if(game.p1.turn){
            for (let i = 0; i < game.gameBoard.length; i++) {
                if(game.gameBoard[i] === movingBotPath.bot && movingBotPath.path[0] === i){
                    for (let j = 0; j < movingBotPath.path.length - 1; j++) {
                        if(!((game.gameBoard[movingBotPath.path[j+1]]   === "blackPawn" && movingBotPath.bot === "blackBot") ||
                            (game.gameBoard[movingBotPath.path[j+1]]  === "whitePawn" && movingBotPath.bot === "whiteBot") ||
                            ((game.gameBoard[movingBotPath.path[j+1]] === "blackPawn" || game.gameBoard[movingBotPath.path[j+1]] === "whitePawn") && movingBotPath.bot === "redBot"))) {
                            return;
                        }
                    }
                    for (let j = 0; j < movingBotPath.path.length; j++) {
                        game.gameBoard[movingBotPath.path[j]] = null;
                    }

                    game.gameBoard[movingBotPath.path[movingBotPath.path.length - 1]] = movingBotPath.bot;

                    game.p1.turn = false;
                    game.p2.turn = true;

                    closeVsDisplay("moveBotMenu");
                    document.getElementById("confirmRobotPath").style.display = "none";

                    for (let i = 0; i < movingBotPath.path.length; i++) {
                        setTimeout(() => {
                            let x = document.getElementById(movingBotPath.bot);
                            x.style.top = positionInBoardById[movingBotPath.path[i]][0] + "%";
                            x.style.left = positionInBoardById[movingBotPath.path[i]][1] + "%";
                            document.getElementById(`boardOverlayPawn${movingBotPath.path[i]}`).style.display = "none";
                        }, i * 500);
                    }
                    setTimeout(() => {
                        fetchGameState(game);
                        localStorage["offlineGame"] = JSON.stringify(game);
                        movingBotPath = {};
                    }, movingBotPath.path.length * 500);
                }
            }
        }else if(game.p2.turn){
            for (let i = 0; i < game.gameBoard.length; i++) {
                if(game.gameBoard[i] === movingBotPath.bot && movingBotPath.path[0] === i){
                    for (let j = 0; j < movingBotPath.path.length - 1; j++) {
                        if(!((game.gameBoard[movingBotPath.path[j+1]]   === "blackPawn" && movingBotPath.bot === "blackBot") ||
                            (game.gameBoard[movingBotPath.path[j+1]]  === "whitePawn" && movingBotPath.bot === "whiteBot") ||
                            ((game.gameBoard[movingBotPath.path[j+1]] === "blackPawn" || game.gameBoard[movingBotPath.path[j+1]] === "whitePawn") && movingBotPath.bot === "redBot"))) {
                            return;
                        }
                    }
                    for (let j = 0; j < movingBotPath.path.length; j++) {
                        game.gameBoard[movingBotPath.path[j]] = null;
                    }

                    game.gameBoard[movingBotPath.path[movingBotPath.path.length - 1]] = movingBotPath.bot;

                    game.p1.turn = true;
                    game.p2.turn = false;

                    closeVsDisplay("moveBotMenu");
                    document.getElementById("confirmRobotPath").style.display = "none";

                    for (let i = 0; i < movingBotPath.path.length; i++) {
                        setTimeout(() => {
                            let x = document.getElementById(movingBotPath.bot);
                            x.style.top = positionInBoardById[movingBotPath.path[i]][0] + "%";
                            x.style.left = positionInBoardById[movingBotPath.path[i]][1] + "%";
                            document.getElementById(`boardOverlayPawn${movingBotPath.path[i]}`).style.display = "none";
                        }, i * 500);
                    }
                    setTimeout(() => {
                        fetchGameState(game);
                        localStorage["offlineGame"] = JSON.stringify(game);
                        movingBotPath = {};
                    }, movingBotPath.path.length * 500);
                }
            }
        }
        
    }
}
function cancelMoveBotOption() {
    movingBot = false;
    movingBotPath = {};
    clearHighlightedCells();
    closeVsDisplay("moveBotMenu");
    openMenu("availableActionsMenu");
    openDarkerBg();
    document.getElementById("yourTurnInfo").style.display = "block";
    document.getElementById("confirmRobotPath").style.display = "none";
}
function openMainMenu() {
    openMenu("centerMainMenu");
    openDarkerBg();
    document.getElementById("mainMenuResumeBtn").style.display = "block";
    document.getElementsByClassName("darkerBg")[0].addEventListener("click", closeMainMenu);
}
function closeMainMenu() {
    if (menusStack[menusStack.length - 1] === "centerSettingsMenu") {
        closeSettingsMenu();
        return;
    } else if (menusStack[menusStack.length - 1] === "recentGamesMenu") {
        closeRecentGamesMenu();
        return;
    } else if (menusStack[menusStack.length - 1] === "playMenu") {
        closePlayMenu();
        return;
    }
    closeDarkerBg();
    setTimeout(() => (document.getElementById("mainMenuResumeBtn").style.display = "none"), 300);
    document.getElementsByClassName("darkerBg")[0].removeEventListener("click", closeMainMenu);
    closeMenu("centerMainMenu");
}
function recentGame(id) {
    socket.emit("joinroom", { GUID: localStorage["GUID"], roomId: id, name: localStorage["name"] });
    closeMenu("recentGamesMenu");
}
function openDarkerBg() {
    document.getElementById("darkerBg").style.display = "inline-block";
    setTimeout(() => {
        document.getElementById("darkerBg").style.opacity = "1";
    }, 100);
}
function closeDarkerBg() {
    document.getElementById("darkerBg").style.opacity = "0";
    setTimeout(() => {
        document.getElementById("darkerBg").style.display = "none";
    }, 500);
}
function openWhiteCurtain() {
    document.getElementById("whiteCurtain").style.display = "inline-block";
    setTimeout(() => {
        document.getElementById("whiteCurtain").style.opacity = "1";
    }, 100);
}
function closeWhiteCurtain() {
    document.getElementById("whiteCurtain").style.opacity = "0";
    setTimeout(() => {
        document.getElementById("whiteCurtain").style.display = "none";
    }, 500);
}
function moveBot() {
    movingBot = true;
    openVsDisplay("moveBotMenu");
    closeMenu("availableActionsMenu");
    closeDarkerBg();
    document.getElementById("yourTurnInfo").style.display = "none";
}
socket.on("gotoroom", (data) => {
    afterTime = Math.floor(new Date() / 1000);
    offlineGameType = false;
    console.log(data);
    try {
        if (beforeTime + 2 > afterTime) {
            setTimeout(() => {
                closeMenu("loader");
                openMenu("centerShareGameMenu");
                openDarkerBg();
                document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
                resizeUpdate();
                window.location.hash = `#${data.id}`;
                document.getElementById("background").style.display = "none";
            }, (afterTime + 2 - beforeTime) * 1000);
        } else throw "err";
    } catch (e) {
        closeMenu("loader");
        openMenu("centerShareGameMenu");
        openDarkerBg();
        document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
        resizeUpdate();
        window.location.hash = `#${data.id}`;
        document.getElementById("background").style.display = "none";
    }
<<<<<<< HEAD
    document.getElementById("linkTextInput").value = `localhost:8080/#${data.id}`;
=======
    document.getElementById("linkTextInput").value = `${window.location.host}/#${data.id}`;
>>>>>>> master
    localStorage["GUID"] = data.GUID;
});
socket.on("GUID", (data) => {
    localStorage["GUID"] = data;
});
socket.on("nameChanged", (data) => {
    if (data.you) {
        document.getElementById("yourName").innerText = data.name;
    } else {
        document.getElementById("ennemyName").innerText = data.name;

        let recentGames = JSON.parse(localStorage["recentGames"]);
        for (let i = 0; i < recentGames.length; i++) {
            if (recentGames[i].id === data.id) {
                recentGames.splice(i, 1);
            }
        }
        recentGames.push({ id: data.id, name: data.name });

        localStorage["recentGames"] = JSON.stringify(recentGames);
        updateRecentGames();
    }
});
socket.on("ennemyOffline", () => console.info("Ennemy is offline."));
socket.on("ennemyOnline", () => console.info("Ennemy is online."));

socket.on("yourTurn", (data) => {
    clearTimeout(timeout);
    document.getElementById("yourTurnInfo").style.display = "block";
    document.getElementById("thinking").style.display = "none";
});
socket.on("ennemmyTurn", () => {
    document.getElementById("thinking").style.display = "inline-block";
});
socket.on("wrongroom", () => {
    window.location.hash = "";
    load();
    closeMenu("loader");
});
socket.on("startgame", (data) => {
    if (!data.ended) closeDarkerBg();
    offlineGameType = false;
    closeMenu("centerShareGameMenu");
    closeMenu("centerMainMenu");
    document.getElementById("background").style.display = "none";
    window.location.hash = `#${data.id}`;
    closeMenu("loader");
    fetchGameState(data);
    document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
    resizeUpdate();
    console.log(data);
    openVsDisplay("ennemyDisplay");
    openVsDisplay("reserveInfo");
});
socket.on("placedPawn", (data) => {
    closeVsDisplay("placePawnMenu");

    fetchGameState(data.state);
});
function mainMenuAfterGame() {
    window.location.hash = "";
    window.location.reload();
}
socket.on("reloadedPawn", (data) => {
    fetchGameState(data);
    closeMenu("reloadEnergyMenu");
    closeMenu("availableActionsMenu");
    closeDarkerBg();
});
socket.on("movedBot", (data) => {
    console.log(data);
    console.log(JSON.stringify(data));

    closeVsDisplay("moveBotMenu");
    document.getElementById("confirmRobotPath").style.display = "none";

    for (let i = 0; i < data.move.path.length; i++) {
        setTimeout(() => {
            let x = document.getElementById(data.move.bot);
            x.style.top = positionInBoardById[data.move.path[i]][0] + "%";
            x.style.left = positionInBoardById[data.move.path[i]][1] + "%";
            document.getElementById(`boardOverlayPawn${data.move.path[i]}`).style.display = "none";
        }, i * 500);
    }
    setTimeout(() => fetchGameState(data.state), data.move.path.length * 500);
});

socket.on("winner", (data) => {
    if (data.you) {
        document.getElementById("winnerName").innerText = allLanguages[lang]["youWon"];
    } else {
        document.getElementById("winnerName").innerText = allLanguages[lang]["youLost"];
    }
    openMenu("winnerMenu");
    openDarkerBg();
    document.getElementById("yourTurnInfo").style.display = "none";
});

const shareBtn = document.getElementById("shareButton");

shareBtn.addEventListener("click", () => {
    if (navigator.share) {
        navigator
            .share({
                title: allLanguages[lang]["shareTextTitle"],
                text: allLanguages[lang]["shareTextText"],
                url: window.location.href,
            })
            .then(() => {
                console.log("Thanks for sharing!");
            })
            .catch((err) => {
                console.log(`Couldn't share because of`, err.message);
            });
    } else {
        console.log("web share not supported");
    }
});
function openTutorial(){
    closeMenu("centerMainMenu");
    closeDarkerBg();
    tutorial = true;
    document.getElementById("background").style.display = "none";
    resizeUpdate();
    openWhiteCurtain();
    showFullscreenText("Pick a color, then click on a cell to place an energy pawn",function(){
        document.getElementsByClassName("openMainMenuButton")[0].style.display = "none";
        document.getElementsByClassName("gameUI")[0].style.display = "inline-block";
        tutorialState = {
            step: 0,
            state: {
                p1: {pawns: {white: 2, black: 2}, name: "You", turn: true, Oarea: "bottom"},
                p2: {pawns: {white: 2, black: 2}, name: "Teaching robot", turn: false, Oarea: "top"},
                pawnReserve: {white: 10, black: 10},
                gameBoard: [null, null, null, null, null, null, null, null, null, "blackBot", null, "whiteBot", "redBot", null, null, null, null, null, null, null, null, null, null, null],
                ended: false
            }
        };
        openVsDisplay("ennemyDisplay");
        document.getElementById("yourName").innerText = "You";
        document.getElementById("ennemyName").innerText = "Teaching robot";
        moveTextToTop();
        closeWhiteCurtain();
        placePawnOption();
        fetchGameState(tutorialState.state);
    }, false,1000);
}
function showFullscreenText(text, methodAfter, hideAfter, duration=5000) {
    document.getElementsByClassName("tutorialText")[0].style.display = "block";
    setTimeout(() => document.getElementsByClassName("tutorialText")[0].style.opacity = "1",100);
    document.getElementsByClassName("tutorialText")[0].style.top = "50%";
    document.getElementsByClassName("tutorialText")[0].style.left = "50%";
    document.getElementsByClassName("tutorialText")[0].style.transform = "translate(-50%,-50%)";
    document.getElementsByClassName("tutorialText")[0].innerText = text;

    setTimeout(() => {
        if(hideAfter) document.getElementsByClassName("tutorialText")[0].style.opacity = "0";
        methodAfter();
    },duration);
}
function moveTextToTop() {
    document.getElementsByClassName("tutorialText")[0].style.top = "10px";
    document.getElementsByClassName("tutorialText")[0].style.transform = "translateX(-50%)";
}
function generateBackgroundParticles(q = 1) {
    setTimeout(() => {
        for (let i = 0; i < q; i++) {
            let x = document.createElement("img");
            x.classList.add("bckElement");
            x.style.top = `${Math.floor(Math.random() * 20)}%`;
            x.style.left = `${Math.floor(Math.random() * 101)}%`;
            x.style.width = `${Math.floor(Math.random() * 32) + 20}px`;
            switch (Math.floor(Math.random() * 6)) {
                case 0:
                    x.setAttribute("src", forImage("BlackRobot"));
                    break;
                case 1:
                    x.setAttribute("src", forImage("WhiteRobot"));
                    break;
                case 2:
                    x.setAttribute("src", forImage("RedRobot"));
                    break;
                case 3:
                    x.setAttribute("src", forImage("robotoriLogo"));
                    break;
                case 4:
                    x.setAttribute("src", forImage("blackPawn"));
                    break;
                case 5:
                    x.setAttribute("src", forImage("whitePawn"));
                    break;
            }
            document.getElementById("background").appendChild(x);
            setTimeout(() => {
                x.style.opacity = "1";
                //x.style.left = `${Math.floor(Math.random() * 101)}%`;
                x.style.top = `${100 - Math.floor(Math.random() * 20)}%`;
            }, 10);
            setTimeout(() => {
                x.style.opacity = "0";
            }, 1000);
            setTimeout(() => {
                document.getElementById("background").removeChild(x);
            }, 1500);
        }
    }, Math.floor(Math.random() * 101));
}

function parseSVGs() {
    let allElements = document.querySelectorAll("*");
    for (let i = 0; i < allElements.length; i++) {
        if (allElements[i].getAttribute("data-childSVG") != null) {
            if (SVGsUsed[allElements[i].getAttribute("data-childSVG")] !== undefined) {
                allElements[i].innerHTML = SVGsUsed[allElements[i].getAttribute("data-childSVG")];
            }
        }
    }
}
function forImage(name) {
    return "data:image/svg+xml;base64," + window.btoa(SVGsUsed[name]);
}